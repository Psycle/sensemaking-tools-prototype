# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Site + Docs

on:
  push:
    branches: [ "site-deploy" ]

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [22.x]

    steps:
    - uses: actions/checkout@v4
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: Amalgamate site and docs
      run: |
        # reset
        rm -rf docs
        rm -rf public
        mkdir public

        # creds
        git config --global user.name "github-actions"
        git config --global user.email "github-actions@github.com"
        git fetch

        # get the site and the docs
        git checkout origin/site -- site
        git checkout origin/main -- docs

        # rename the main.docs as it conflicts on namespace
        mv docs documentation

        # move site to the root and remove the folder
        mv site/* public
        rm -r site

        # move documentation into public/documentation
        mv documentation public

        # finally public back to docs
        mv public docs

        # Commit changes only taking docs so any remnant isnt saved
        git add docs
        git diff-index --quiet HEAD ||  git commit -am "Build latest docs sites"
        git push -f

  # Deploy job
  deploy:
    # Add a dependency to the build job
    needs: build

    # Grant GITHUB_TOKEN the permissions required to make a Pages deployment
    permissions:
      pages: write      # to deploy to Pages
      id-token: write   # to verify the deployment originates from an appropriate source

    # Deploy to the github-pages environment
    environment:
      name: site-deploy
      url: ${{ steps.deployment.outputs.page_url }}

    # Specify runner + deployment step
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
