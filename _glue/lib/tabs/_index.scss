// Glue tabs component
// Basic left aligned tabs for grouped content
// Use glue-tabpanels for responsive tabs

@use 'sass:map';
@use '../accessibility/mixins' as accessibility-mixins;
@use '../accessibility/variables' as accessibility-variables;
@use '../spacers/mixins' as spacers;
@use '../typography/mixins' as typography-mixins;
@use '../typography/variables' as typography-variables;
@use 'variables';

.glue-tabs__tablist {
  border-bottom: variables.$tablist-border-size solid variables.$border-color;
  display: flex;
  justify-content: flex-start;
  list-style: none;
  margin: 0;
  padding: 0;
  position: relative;
}

.glue-tab {
  // copy mixins for header-link instead of extending, so color overrides work
  @include typography-mixins.calculate-font-size-rem(
    map.get(
      typography-variables.$mws-header-link,
      typography-variables.$mws-font-size
    )
  );
  @include typography-mixins.calculate-unitless-line-height(
    map.get(
      typography-variables.$mws-header-link,
      typography-variables.$mws-line-height
    ),
    map.get(
      typography-variables.$mws-header-link,
      typography-variables.$mws-font-size
    )
  );
  @include typography-mixins.language-font-stacks(
    map.get(
      typography-variables.$mws-header-link,
      typography-variables.$mws-font-family
    )
  );
  @include typography-mixins.font-smoothing(
    typography-variables.$font-smoothing-moz,
    typography-variables.$font-smoothing-webkit,
    typography-variables.$font-smoothing-rendering
  );
  border: 0 solid transparent;
  border-width: 0 variables.$border-size-left-right;
  color: variables.$text-color;
  cursor: pointer;
  display: block;
  font-weight: map.get(
    typography-variables.$mws-header-link,
    typography-variables.$mws-font-weight
  );
  letter-spacing: map.get(
    typography-variables.$mws-header-link,
    typography-variables.$mws-letter-spacing
  );
  margin-block: 0 (-(variables.$tablist-border-size));
  margin-inline: (-(variables.$border-size-left-right))
    (variables.$tabs-width - variables.$border-size-left-right);
  padding: variables.$padding-top-bottom 0;
  position: relative;

  @include accessibility-mixins.hcm-mq {
    // Remove side borders in HCM as the spacing breaks up the layout
    border-width: 0;
  }

  &::after {
    // Colored border under tab title
    border-top: variables.$tablist-border-size solid variables.$border-color;
    bottom: 0;
    content: '';
    display: block;
    height: 0;
    left: 0;
    position: absolute;
    width: 100%;
    z-index: 0; // Edge case: When Popover is used with Tabs
  }

  &[aria-selected='true'] {
    color: variables.$text-color-selected;

    @include accessibility-mixins.hcm-mq {
      background: accessibility-variables.$hcm-color-selected-text;
      color: accessibility-variables.$hcm-color-selected-background;

      svg {
        fill: accessibility-variables.$hcm-color-selected-background;
      }
    }

    &::after {
      border-color: variables.$border-color-selected;

      @include accessibility-mixins.hcm-mq {
        border-color: accessibility-variables.$hcm-color-selected-background;
      }
    }
  }

  &:active {
    outline: none;
  }

  &:hover {
    background: none;
    color: variables.$text-color-selected;

    svg {
      @include accessibility-mixins.hcm-mq {
        fill: accessibility-variables.$hcm-color-text;
      }
    }
  }

  &:focus {
    @include accessibility-mixins.hcm-focus;
    background: variables.$background-color-focus;
    border-color: variables.$background-color-focus;
    transition: background-color 0.2s, border-color 0.2s, color 0.2s;

    &::after {
      border-color: variables.$border-color-focus;
    }
  }
}

.glue-tabs__panelgroup {
  @include spacers.spacer(5, margin, top);
}

.glue-tabs__panel {
  display: none;

  &.glue-is-shown {
    display: block;
  }
}
