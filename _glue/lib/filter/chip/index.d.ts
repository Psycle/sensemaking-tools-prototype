//!! generated by tsickle from marketing/glue/lib/filter/chip/index.ts
import { Component } from '../../base';
interface ChipData {
    [key: string]: {
        [key: string]: string;
    };
}
/**
 * A class to manage Filter Chips subcomponent.
 */
declare class FilterChips extends Component {
    private readonly data;
    private readonly isPrimary;
    private readonly addFilterLabel;
    private readonly removeFilterLabel;
    private focusedChip;
    private readonly chipArr;
    private readonly stateManager;
    private readonly isRtl;
    constructor(root: HTMLElement, data: ChipData);
    /**
     * Initializes the chips component.
     */
    private init;
    /**
     * Creates a chip element and returns it.
     */
    private createChip;
    /**
     * Changes the rendering of a specific chip and the container based on filter
     * status
     */
    private render;
    /**
     * Creates and returns an SVG checkmark icon
     */
    private createCheckmarkIcon;
    /**
     * Creates and returns a div with the close icon styles applied
     */
    private createCloseIconDiv;
    /**
     * Handles key press events on the root container to navigate between chips
     */
    private readonly handleRootKeydown;
    /**
     * Handles clicks on filter chips.
     */
    private readonly handleChipClick;
    /**
     * Handles keyboard events on filter chips.
     */
    private readonly handleChipKeydown;
    /**
     * Updates the status of the current chip
     */
    private updateChip;
    /**
     * Destroys the chips component: removes event handlers and resets container.
     */
    destroy(): void;
}
export { FilterChips, type ChipData };
