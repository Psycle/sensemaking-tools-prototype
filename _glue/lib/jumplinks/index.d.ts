//!! generated by tsickle from marketing/glue/lib/jumplinks/index.ts
import { Component } from '../base/index';
import { Observer, ObserverDataObj } from '../observer';
declare interface JumplinksOptions {
    offset: number;
    belowHeader: boolean;
}
declare interface JumplinksObserverData extends ObserverDataObj {
    activeLink: string;
}
declare interface JumplinksDef {
    reset: () => void;
    setActiveLink: (id: string) => void;
    getActiveLink: () => string;
    observer: Observer<JumplinksObserverData>;
}
declare class Jumplinks extends Component implements JumplinksDef {
    private readonly list;
    private readonly listItems;
    private readonly links;
    private readonly prevButton;
    private readonly nextButton;
    options: JumplinksOptions;
    private leftWatchPoint;
    private rightWatchPoint;
    private readonly smoothScroll;
    private readonly linkTargets;
    private lastScrollPosition;
    private isScrolling;
    private readonly handleClick;
    private readonly handleActiveLinkChange;
    private readonly handleScroll;
    private readonly handleResize;
    private readonly handleLinkFocus;
    private readonly handleHorizontalScroll;
    observer: Observer<JumplinksObserverData>;
    constructor(root: HTMLElement, options?: Partial<JumplinksOptions>);
    private initialize;
    private createIntersectionObserver;
    /**
     */
    destroy(): void;
    private setAttributes;
    setActiveLink(id: string): void;
    getActiveLink(): string;
    private getLinkTargets;
    private registerListeners;
    private deregisterListeners;
    private focusLinkHandler;
    /**
     * Click handler for all component buttons, via event delegation
     */
    private clickHandler;
    private getPartialLink;
    reset(): void;
    private activeLinkChangeHandler;
    private scrollHandler;
    private resizeHandler;
    private updateButtons;
    /**
     * Set active link via hash
     */
    private renderActiveLink;
    /**
     * Updates vertical offset of the Jumplinks.
     */
    private updateTopOffset;
    private setOffset;
    private unsetOffset;
    private isRTL;
}
export { Jumplinks, type JumplinksOptions };
