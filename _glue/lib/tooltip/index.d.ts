//!! generated by tsickle from marketing/glue/lib/tooltip/index.ts
import { Component } from '../base';
declare interface TooltipOptions {
    placement?: 'top' | 'bottom' | 'left' | 'right';
    autoPosition?: boolean;
}
declare interface TooltipDef {
    open: () => void;
    close: () => void;
    destroy: () => void;
}
/**
 * A component that pops up when you hover over an interactive object.
 *
 * Responsibilities:
 *  - Provide public methods for open, close and destroy
 *  - Add ARIA labels for a11y
 *  - Reposition tooltip when it is on the edge of the page
 *  - Customize Tooltip by turning on/off auto position
 *  - Expose Tooltip show and hide events
 */
declare class Tooltip extends Component implements TooltipDef {
    /** Trigger element for tooltip display. */
    private readonly trigger;
    /** Tooltip content for display. */
    private readonly content;
    /** The user defined options for the tooltip. */
    readonly options: TooltipOptions;
    constructor(root: HTMLElement, options?: TooltipOptions);
    /**
     * Checks target element and calls method for tooltip display.
     */
    private readonly handleOpen;
    /**
     * Checks target element and calls method for tooltip hide.
     */
    private readonly handleClose;
    /**
     * Event handler for Escape key.
     */
    private readonly handleKeyup;
    /**
     * Checks click on document and calls method for tooltip display.
     */
    private readonly handleClick;
    /**
     * Adds animation class on tooltip transition start.
     */
    private readonly handleTransitionStart;
    /**
     * Removes animation class on tooltip transition end.
     */
    private readonly handleTransitionEnd;
    /**
     * Checks if the element is present inside the tooltip.
     * @param targetEl DOM node which is to be checked
     * @return true if DOM node is present in tooltip
     */
    private isTooltipChild;
    /**
     * Get attributes from target element and construct an options object.
     */
    private getAttributeOptions;
    /**
     * Default Tooltip options
     */
    static get defaultOptions(): TooltipOptions;
    /**
     * Adds events for the tooltip.
     */
    private registerEvents;
    /**
     * Calculates the position of the Tooltip.
     */
    private setTooltipPosition;
    /**
     * Recalculates the tooltip position and displays it properly as per updated
     * screen size.
     */
    private readonly handleResize;
    /**
     * Displays the tooltip.
     */
    open(): void;
    /**
     * Hides the tooltip.
     */
    close(): void;
    /** Resets component and removes event listeners. */
    destroy(): void;
}
/**
 * Initializes multiple tooltips with single call.
 */
declare function initMultiTooltip(tooltipElems: NodeListOf<HTMLElement>): void;
export { Tooltip, initMultiTooltip, type TooltipOptions };
