// Glue jumplinks component
// In-page navigation that is fixed to the top of the window

@use '../accessibility/mixins' as accessibility-mixins;
@use '../accessibility/variables' as accessibility-variables;
@use '../breakpoints/mixins' as breakpoints;
@use '../buttons/variables' as buttons;
@use '../colors/variables' as colors;
@use '../typography/mixins' as typography-mixins;
@use '../typography/variables' as typography-variables;
@use 'variables';

.glue-jumplinks {
  display: flex;
  flex-direction: row;
  margin: 16px auto;
  padding: 0 10px;
  position: -webkit-sticky; // required for Safari
  position: sticky;
  top: 16px;
  transition: top 300ms ease;
  max-width: calc(100% - (variables.$sm-padding * 2));
  width: fit-content;

  @include breakpoints.bp(md) {
    max-width: calc(100% - (variables.$md-padding * 2));
  }

  @include breakpoints.bp(lg) {
    padding: 0;
  }

  @include breakpoints.bp(xg) {
    max-width: variables.$max-width-xg;
  }

  background-color: white;
  border-radius: 120px;
  box-shadow: 0 1px 2px 0 rgba(60, 64, 67, 0.3),
    0 1px 3px 1px rgba(60, 64, 67, 0.15);
  z-index: variables.$container-z-index;

  &::before,
  &::after {
    bottom: 0;
    content: '';
    height: 30px;
    position: absolute;
    top: calc(50% - 15px);
    width: 20px;
    z-index: 1;

    @include breakpoints.bp(lg) {
      display: none;
    }
  }

  &::before {
    background-image: variables.$button-gradient-left;
    left: 8px;
  }

  &::after {
    background-image: variables.$button-gradient-right;
    right: 8px;
  }
}

.glue-jumplinks__list {
  display: flex;
  flex-direction: row;
  margin: 0 auto;
  overflow: auto;
  padding: 0;
  scrollbar-width: none; /* Firefox */
  white-space: nowrap;
  width: 100%;

  @include breakpoints.bp(lg) {
    width: calc(100% - 96px);
  }

  &::-webkit-scrollbar {
    display: none;
  }

  & > :first-child,
  & > :last-child {
    // To prevent it from being covered by graident.
    z-index: 2;
  }

  & > :first-child {
    // Add the 2px margin so focus ring does not get cut off.
    margin-inline-start: 2px;
  }

  & > :last-child {
    margin-inline-end: 2px;
  }
}

.glue-jumplinks__list-item {
  list-style: none;

  &:focus {
    outline: none;
  }
}

.glue-jumplinks__link {
  @include typography-mixins.calculate-font-size-rem(buttons.$font-size);
  @include typography-mixins.calculate-unitless-line-height(
    20px,
    buttons.$font-size
  );
  @include typography-mixins.language-font-stacks(
    typography-variables.$font-face-googlesans
  );
  @include typography-mixins.font-smoothing(
    typography-variables.$font-smoothing-moz,
    typography-variables.$font-smoothing-webkit,
    typography-variables.$font-smoothing-rendering
  );

  align-content: center;
  align-items: center;
  align-self: flex-start;
  border: variables.$link-border-width solid transparent;
  border-radius: 0;
  color: variables.$text-color;
  display: inline-flex;
  flex-flow: row nowrap;
  font-weight: typography-variables.$font-weight-medium;
  justify-content: space-around;
  letter-spacing: 0.5px;
  max-width: 380px;
  margin: 5px 2px;
  min-width: max-content;
  overflow: hidden;
  padding: 7px 8px;
  text-align: center;
  text-decoration: none;
  transition: background-color 0.2s, box-shadow 0.2s, color 0.2s;
  vertical-align: middle;

  @include accessibility-mixins.hcm-mq {
    color: accessibility-variables.$hcm-color-link-text;
  }

  &:visited {
    color: variables.$text-color;
  }

  &.glue-jumplinks__link--active,
  &:hover,
  &:active {
    color: variables.$text-highlighted-color;
    outline: none;
  }

  &:hover {
    background-color: variables.$link-hover-bg;
  }

  @media (hover: none) {
    background-color: none;
    color: variables.$text-color;
  }

  &:focus {
    @include accessibility-mixins.hcm-focus;
    background-color: variables.$link-focused-bg;
    box-shadow: 0 0 0 2px colors.$blue-500;
    border-radius: 4px;
    color: variables.$text-highlighted-color;
  }

  &:active {
    background-color: variables.$link-pressed-bg;
  }

  &.glue-jumplinks__link--active {
    background-color: variables.$link-active;
    @include accessibility-mixins.hcm-mq {
      // Disable text backplate in Chrome/Edge
      @include accessibility-mixins.hcm-forced-color;
      background: accessibility-variables.$hcm-color-link-text;
      color: accessibility-variables.$hcm-color-background;

      &:focus {
        outline: 2px solid
          accessibility-variables.$hcm-color-selected-background;
      }
    }
  }
}

.glue-jumplinks__button {
  display: none;
  pointer-events: none;

  @include breakpoints.bp(lg) {
    align-items: center;
    background-color: white;
    border: 2px solid transparent;
    border-radius: 50%;
    color: variables.$text-color;
    display: flex;
    flex-direction: row;
    height: variables.$arrow-button-size;
    justify-content: center;
    margin: 0;
    opacity: 0;
    outline: none;
    padding: 0;
    pointer-events: none;
    position: relative;
    transition: variables.$button-transition;
    width: variables.$arrow-button-size;

    &.glue-jumplinks__button--active {
      opacity: 1;
      pointer-events: auto;
    }
  }

  &:hover,
  &:focus {
    color: variables.$text-highlighted-color;
  }

  &:focus {
    border-color: colors.$blue-600;
  }

  .glue-icon {
    pointer-events: none;
    transform: rotate(0deg);

    @include accessibility-mixins.hcm-mq {
      fill: accessibility-variables.$hcm-color-text;
    }

    [dir='rtl'] &,
    :host([dir='rtl']) & {
      transform: rotate(180deg);
    }
  }

  &::before {
    background-image: variables.$button-gradient-left;
    content: '';
    height: variables.$height;
    inset-inline-end: -(variables.$button-width + 2px);
    position: absolute;
    width: variables.$button-width;

    [dir='rtl'] &,
    :host([dir='rtl']) & {
      background-image: variables.$button-gradient-right;
    }
  }
}

.glue-jumplinks__button--next {
  &::before {
    background-image: variables.$button-gradient-right;
    inset-inline-start: -(variables.$button-width + 2px);

    [dir='rtl'] &,
    :host([dir='rtl']) & {
      background-image: variables.$button-gradient-left;
    }
  }
}
