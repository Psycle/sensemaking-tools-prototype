{"version":3,"file":"chunks/vendors-node_modules_typed-html_dist_src_elements_js-node_modules_material_web_checkbox_check-bb600d.js","mappings":";;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,MAAM;AACrB;AACA;AACA;AACA;AACA,wCAAwC,eAAe;AACvD;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA,IAAI,6BAA6B;AACjC;AACA;AACA,4DAA4D;AAC5D;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;;;;;;;;;;;;;;ACpIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;AC/BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;AC7BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,cAAc;AACrC;AACA;AACA;AACA;AACA;AACA,oBAAoB,cAAc;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;;;;;;;;;;;;;;;AC5CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACqE;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,MAAM;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8DAA8D,4BAA4B;AAC1F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,kEAAgB;AAC/B;AACA,gBAAgB,0DAAQ;AACxB;AACA;AACA;AACA;AACA;AACO;AACP,YAAY,iBAAiB;AAC7B;AACA,4DAA4D,QAAQ;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,OAAO;AACvB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,gBAAgB,OAAO;AACvB;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD,KAAK;AAC5D;AACA;AACA;AACA;AACA,0CAA0C,+BAA+B;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,iBAAiB;AACzD;AACA;AACA;AACA,uCAAuC;AACvC;AACA;AACA;AACA,+BAA+B,iBAAiB;AAChD;AACA;AACA;AACA;AACA;AACA,iBAAiB,eAAe;AAChC;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACzIA;AACA;AACA;AACA;AACA;AACiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA,eAAe,8CAAI;AACnB;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT,KAAK;AACL;AACA;;;;;;;;;;;;;;;AC3CA;AACA;AACA;AACA;AACA;AACiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,wCAAwC;AACtE;AACA;AACA;AACA;AACA,8BAA8B,cAAc;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA,gBAAgB,iBAAiB;AACjC,oCAAoC,gBAAgB,KAAK,oBAAoB;AAC7E,eAAe,8CAAI;AACnB;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT,KAAK;AACL;AACA;;;;;;;;;;;;;;;AClDA;AACA;AACA;AACA;AACA;AACiC;AACjC;AACA;AACA;AACA;AACA,8BAA8B,qCAAqC;AACnE;AACA;AACA;AACA;AACA,0BAA0B,4BAA4B;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA,gBAAgB,OAAO;AACvB,oCAAoC,gBAAgB,KAAK,oBAAoB;AAC7E,eAAe,8CAAI;AACnB;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT,KAAK;AACL;AACA;;;;;;;;;;;;;;;AC7CA;AACA;AACA;AACA;AACA;AACiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA,eAAe,8CAAI;AACnB;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT,KAAK;AACL;AACA;;;;;;;;;;;;;;;ACrDA;AACA;AACA;AACA;AACA;AACiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,MAAM;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,8BAA8B;AACjF,8CAA8C,SAAS;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,WAAW;AAC/B;AACA;AACA;AACA;AACA,wCAAwC,uBAAuB;AAC/D;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA,6BAA6B;AAC7B;AACA,qBAAqB;AACrB,mBAAmB,8CAAI;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA,mBAAmB,8CAAI;AACvB;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA,KAAK;AACL;AACA;;;;;;;;;;;;;;;AClHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACyC;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP,WAAW,sDAAQ;AACnB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;;;;;;;;;;;;;;;;;;;;;;AChCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,sBAAsB;AAC1B;AACA;AACgE;AAChE;AACA,WAAW,6BAA6B;AACX;AAC7B;AACA,QAAQ,4GAA4G;AACpH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,MAAM;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,+BAA+B;AACpD;AACA;AACA;AACA;AACA,8DAA8D;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,eAAe;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,cAAc;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,WAAW;AAC3B;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,gFAAgF;AAChF,yCAAyC,8BAA8B;AACvE,uBAAuB,WAAW;AAClC;AACA;AACA;AACA,sEAAsE,8BAA8B;AACpG,mBAAmB,WAAW;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,yBAAyB;AACjsCAAsC,+DAAkB;AACxD;AACA;AACA;AACA,+BAA+B,+DAAkB;AACjwDAAW;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yFAAyF,MAAM;AAC/F,4CAA4C,eAAe;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpgBAAgB;AAC5E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,gBAAgB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2EAA2E,gBAAgB;AAC3F;AACA,mCAAmC,8BAA8B;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,gBAAgB,EAAE,cAAc;AACpE;AACA;AACA;AACA;AACA,4BAA4B,SAAS;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD,gBAAgB;AACxmCAAmC;AACnC,iBAAiB,eAAe;AAChC;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC;AACtC;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,iBAAiB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;ACpjCA;AACA;AACA;AACA;AACA;AACmC;AACe;AACA;AACK;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA,0CAA0C,2DAAQ;AAClD;AACA,qBAAqB,gEAAM;AAC3B,aAAa,iDAAU;AACvB,IAAI,gEAAa;AACjB;AACsB;AACtB;;;;;;;;;;;;;;;AC7BA;AACA;AACA;AACA;AACA;AACA;AAC0B;AACnB,eAAe,wCAAG,QAAQ,kHAAkH,8GAA8G,0GAA0G,8GAA8G,oBAAoB,+CAA+C,kBAAkB,mBAAmB,8CAA8C,0CAA0C,eAAe,kBAAkB,eAAe,8BAA8B,mEAAmE,cAAc,YAAY,YAAY,WAAW,MAAM,gBAAgB,YAAY,SAAS,UAAU,aAAa,kBAAkB,WAAW,UAAU,eAAe,iCAAiC,YAAY,WAAW,WAAW,sBAAsB,aAAa,YAAY,qBAAqB,mBAAmB,kBAAkB,WAAW,2BAA2B,QAAQ,kBAAkB,qBAAqB,sBAAsB,SAAS,+FAA+F,mBAAmB,mDAAmD,sBAAsB,YAAY,mGAAmG,kBAAkB,UAAU,+BAA+B,sCAAsC,kEAAkE,qBAAqB,yCAAyC,UAAU,+BAA+B,kEAAkE,mBAAmB,UAAU,4FAA4F,iDAAiD,YAAY,gDAAgD,6GAA6G,8EAA8E,8GAA8G,kFAAkF,oBAAoB,mHAAmH,uFAAuF,0HAA0H,2FAA2F,MAAM,kFAAkF,0CAA0C,yCAAyC,YAAY,WAAW,qCAAqC,UAAU,WAAW,WAAW,oCAAoC,WAAW,MAAM,yBAAyB,0DAA0D,0BAA0B,2DAA2D,gBAAgB,yBAAyB,0DAA0D,0BAA0B,2DAA2D,8CAA8C,yDAAyD,0DAA0D,sBAAsB,wDAAwD,qBAAqB,0DAA0D,wDAAwD,uBAAuB,yBAAyB,oCAAoC,0CAA0C,sCAAsC,KAAK,SAAS,wBAAwB,6FAA6F,yDAAyD,2BAA2B,mGAAmG,qBAAqB,wFAAwF,+BAA+B,6FAA6F,yDAAyD,kCAAkC,mGAAmG,4BAA4B,wFAAwF,yBAAyB,+FAA+F,2DAA2D,4BAA4B,qGAAqG,sBAAsB,0FAA0F,8DAA8D,sBAAsB,uBAAuB,2BAA2B,gGAAgG,4DAA4D,4DAA4D,oCAAoC,kBAAkB,uCAAuC,yGAAyG,qEAAqE,wBAAwB,2FAA2F,8BAA8B,YAAY,4BAA4B,+BAA+B,0BAA0B,UAAU,SAAS,wBAAwB,mBAAmB,sBAAsB,UAAU,MAAM;AAC3uM;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;ACTA;AACA;AACA;AACA;AACA;AACmC;AACG;AACN;AAC0B;AACC;AACJ;AACc;AACwC;AACjC;AACmD;AAC7C;AACyB;AACjB;AAC1F;AACA,0BAA0B,8EAAkB,CAAC,mGAAyB,CAAC,wFAAmB,CAAC,2FAAqB,CAAC,2CAAU;AAC3H;AACA;AACA;AACA;AACA,kBAAkB,OAAO;AACzB;AACA;AACA,iBAAiB,YAAY;AAC7B;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,yCAAQ;AACrB;AACA,qBAAqB,4FAAiB;AACtC;AACA;AACA;AACA,gBAAgB,kGAAuB;AACvC,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,qEAAQ;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,gBAAgB,yBAAyB;AACzC;AACA;AACA,eAAe,yCAAI;AACnB,8BAA8B,iBAAiB;AAC/C;AACA;AACA;AACA,yBAAyB,4BAA4B,wCAAO;AAC5D,uBAAuB,aAAa,wCAAO;AAC3C,yBAAyB,eAAe,wCAAO;AAC/C,sBAAsB;AACtB,sBAAsB;AACtB,2BAA2B;AAC3B,qBAAqB;AACrB,mBAAmB;AACnB,oBAAoB,mBAAmB;;AAEvC;AACA;AACA;AACA,2CAA2C,cAAc;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,qFAAe;AACvB;AACA,KAAK,6EAAY;AACjB;AACA;AACA;AACA;AACA;AACA,KAAK,6EAAY;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,qFAAe;AACpB,mBAAmB,gGAAiB;AACpC;AACA,KAAK,uFAAiB;AACtB;AACA;AACA;AACA;AACA;AACA,OAAO,2CAAU;AACjB;AACA;AACA,kDAAU;AACV,IAAI,2DAAQ,GAAG,eAAe;AAC9B;AACA,kDAAU;AACV,IAAI,2DAAQ,GAAG,eAAe;AAC9B;AACA,kDAAU;AACV,IAAI,2DAAQ,GAAG,eAAe;AAC9B;AACA,kDAAU;AACV,IAAI,2DAAQ;AACZ;AACA,kDAAU;AACV,IAAI,wDAAK;AACT;AACA,kDAAU;AACV,IAAI,wDAAK;AACT;AACA,kDAAU;AACV,IAAI,wDAAK;AACT;AACA,kDAAU;AACV,IAAI,wDAAK;AACT;AACA;;;;;;;;;;;;;;;;;;AC/LA;AACA;AACA;AACA;AACA;AACmC;AACe;AACE;AACI;AACxD;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA,4CAA4C,6DAAS;AACrD;AACA,sBAAsB,iEAAM;AAC5B,cAAc,iDAAU;AACxB,IAAI,gEAAa;AACjB;AACuB;AACvB;;;;;;;;;;;;;;;ACxBA;AACA;AACA;AACA;AACA;AACA;AAC0B;AACnB,eAAe,wCAAG,+CAA+C,sBAAsB,QAAQ,kBAAkB,4BAA4B,4BAA4B,mCAAmC,MAAM,aAAa,oBAAoB,uCAAuC,+BAA+B,WAAW,uCAAuC,uCAAuC,oFAAoF,gBAAgB,kPAAkP,WAAW,eAAe,uRAAuR;AAChiC;AACA;;;;;;;;;;;;;;;ACTA;AACA;AACA;AACA;AACA;AACuC;AACvC;AACA;AACA;AACO,wBAAwB,2CAAU;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,yCAAI;AACnB;AACA;AACA;;;;;;;;;;;;;;;;;;;ACpBA;AACA;AACA;AACA;AACA;AACmC;AACe;AACO;AACY;AACA;AACrE;AACA;AACA;AACA,cAAc;AACd;AACA,gDAAgD,kEAAW;AAC3D;AACA,wBAAwB,8DAAY,EAAE,8DAAY;AAClD,gBAAgB,iDAAU;AAC1B,IAAI,gEAAa;AACjB;AACyB;AACzB;;;;;;;;;;;;;;;;;;;ACtBA;AACA;AACA;AACA;AACA;AACmC;AACsB;AACyB;AAC3B;AACK;AAC5D;AACA;AACA;AACO,oBAAoB,2CAAU;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,eAAe,IAAI,YAAY;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,yCAAI;AACnB,0BAA0B,qEAAQ,UAAU;AAC5C;AACA,YAAY;AACZ;AACA,YAAY,2BAA2B,EAAE,0BAA0B,EAAE;AACrE;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,cAAc,EAAE,UAAU,wCAAO;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,gBAAgB,qCAAqC;AACrD;AACA,mBAAmB,wCAAO;AAC1B;AACA;AACA;AACA,sBAAsB,yCAAI,UAAU,sBAAsB;AAC1D;AACA;AACA;AACA,cAAc,yCAAI,0BAA0B,YAAY;AACxD,cAAc,wCAAO;AACrB;AACA;AACA;AACA;AACA;AACA,qDAAqD,wCAAO;AAC5D,eAAe,yCAAI;AACnB,0CAA0C,KAAK,GAAG,MAAM,EAAE,IAAI;AAC9D;AACA;AACA,sBAAsB,kCAAkC;AACxD;AACA;AACA;AACA;AACA,YAAY,2CAAM,CAAC,yCAAI,IAAI,4BAA4B,EAAE,iBAAiB;AAC1E;AACA;AACA;AACA;AACA;AACA,mBAAmB,wCAAO;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,WAAW,EAAE,6CAA6C;AACvF,eAAe,yCAAI;AACnB,2BAA2B,qEAAQ,UAAU,gBAAgB;AAC7D,WAAW,UAAU;AACrB;AACA;AACA;AACA,2BAA2B,2BAA2B;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wFAAwF,uBAAuB,iEAAM,WAAW;AAChI;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,gBAAgB,kCAAkC;AAClD;AACA;AACA;AACA,gBAAgB,sDAAsD;AACtE,gBAAgB,mDAAmD;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,OAAO,iBAAiB,OAAO,YAAY,MAAM;AAC7F;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,2BAA2B;AACvE;AACA;AACA,kBAAkB,iCAAiC;AACnD,kBAAkB,kCAAkC;AACpD;AACA;AACA;AACA,cAAc,kCAAkC;AAChD,cAAc,iCAAiC;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA,iDAAU;AACV,IAAI,2DAAQ,GAAG,eAAe;AAC9B;AACA,iDAAU;AACV,IAAI,2DAAQ,GAAG,eAAe;AAC9B;AACA,iDAAU;AACV,IAAI,2DAAQ,GAAG,eAAe;AAC9B;AACA,iDAAU;AACV,IAAI,2DAAQ;AACZ;AACA,iDAAU;AACV,IAAI,2DAAQ,GAAG,yCAAyC;AACxD;AACA,iDAAU;AACV,IAAI,2DAAQ,GAAG,eAAe;AAC9B;AACA,iDAAU;AACV,IAAI,2DAAQ,GAAG,eAAe;AAC9B;AACA,iDAAU;AACV,IAAI,2DAAQ,GAAG,eAAe;AAC9B;AACA,iDAAU;AACV,IAAI,2DAAQ,GAAG,8BAA8B;AAC7C;AACA,iDAAU;AACV,IAAI,2DAAQ,GAAG,yBAAyB;AACxC;AACA,iDAAU;AACV,IAAI,2DAAQ,GAAG,cAAc;AAC7B;AACA,iDAAU;AACV,IAAI,2DAAQ,GAAG,cAAc;AAC7B;AACA,iDAAU;AACV,IAAI,2DAAQ,GAAG,uCAAuC;AACtD;AACA,iDAAU;AACV,IAAI,2DAAQ,GAAG,qCAAqC;AACpD;AACA,iDAAU;AACV,IAAI,wEAAqB,GAAG,0BAA0B;AACtD;AACA,iDAAU;AACV,IAAI,wDAAK;AACT;AACA,iDAAU;AACV,IAAI,wDAAK;AACT;AACA,iDAAU;AACV,IAAI,wDAAK;AACT;AACA,iDAAU;AACV,IAAI,wDAAK;AACT;AACA,iDAAU;AACV,IAAI,wDAAK;AACT;AACA,iDAAU;AACV,IAAI,wDAAK;AACT;AACA;;;;;;;;;;;;;;;;AC/VA;AACA;AACA;AACA;AACA;AAC2B;AACQ;AACnC;AACA;AACA;AACO,0BAA0B,4CAAK;AACtC;AACA,eAAe,yCAAI;AACnB;AACA;AACA,eAAe,yCAAI;AACnB;AACA;AACA,eAAe,yCAAI;AACnB;AACA;AACA;;;;;;;;;;;;;;;ACrBA;AACA;AACA;AACA;AACA;AACA;AAC0B;AACnB,eAAe,wCAAG,gBAAgB,MAAM,0HAA0H,gFAAgF,2DAA2D,mHAAmH,gGAAgG,oIAAoI,2HAA2H,oGAAoG,6DAA6D,gJAAgJ,oIAAoI,kGAAkG,qGAAqG,sHAAsH,uFAAuF,kHAAkH,mFAAmF,wHAAwH,yFAAyF,kIAAkI,mGAAmG,kIAAkI,mGAAmG,oIAAoI,qGAAqG,yHAAyH,4GAA4G,qIAAqI,gIAAgI,yHAAyH,gJAAgJ,mIAAmI,qIAAqI,kJAAkJ,wHAAwH,sIAAsI,gJAAgJ,gIAAgI,iGAAiG,mIAAmI,kJAAkJ,6GAA6G,oIAAoI,uHAAuH,yHAAyH,2HAA2H,4FAA4F,4GAA4G,+GAA+G,oIAAoI,oIAAoI,sIAAsI,8HAA8H,4FAA4F,4GAA4G,0HAA0H,oIAAoI,oHAAoH,qFAAqF,oIAAoI,sIAAsI,8GAA8G,0IAA0I,iIAAiI,mJAAmJ,iIAAiI,0GAA0G,sJAAsJ,wHAAwH,6DAA6D,wHAAwH,oJAAoJ,6FAA6F,yIAAyI,uHAAuH,oFAAoF,+FAA+F,gKAAgK,qDAAqD,0HAA0H,+DAA+D,gFAAgF,0EAA0E,uGAAuG,2GAA2G,wKAAwK,oKAAoK,yJAAyJ,6JAA6J,yBAAyB,sBAAsB,QAAQ,oBAAoB,kBAAkB,YAAY,mCAAmC,aAAa,kBAAkB,yCAAyC,mBAAmB,gBAAgB,kBAAkB,iCAAiC,uCAAuC,0CAA0C,qCAAqC,yCAAyC,kBAAkB,iBAAiB,oBAAoB,kBAAkB,WAAW,UAAU,mDAAmD,mFAAmF,iBAAiB,WAAW,kBAAkB,WAAW,yBAAyB,UAAU,oDAAoD,kCAAkC,UAAU,8CAA8C,2CAA2C,4CAA4C,0CAA0C,yDAAyD,+CAA+C,0FAA0F,mDAAmD,8CAA8C,yFAAyF,iCAAiC,yDAAyD,0DAA0D,yBAAyB,yDAAyD,0DAA0D,oBAAoB,2CAA2C,0CAA0C,oCAAoC,4DAA4D,6DAA6D,kDAAkD,sBAAsB,4CAA4C,2CAA2C,iCAAiC,yDAAyD,uCAAuC,+DAA+D,0BAA0B,iDAAiD,gDAAgD,gCAAgC,+DAA+D,sBAAsB,6CAA6C,6DAA6D,wBAAwB,2CAA2C,WAAW,8BAA8B,oCAAoC,sBAAsB;AACp9Z;AACA;;;;;;;;;;;;;;;;ACTA;AACA;AACA;AACA;AACA;AAC2B;AACQ;AACnC;AACA;AACA;AACO,4BAA4B,4CAAK;AACxC;AACA,eAAe,yCAAI;AACnB;AACA;AACA;AACA;AACA;AACA,uCAAuC,cAAc;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACzBA;AACA;AACA;AACA;AACA;AACA;AAC0B;AACnB,eAAe,wCAAG,gBAAgB,MAAM,6DAA6D,kGAAkG,sIAAsI,6HAA6H,sGAAsG,+DAA+D,kJAAkJ,oHAAoH,qFAAqF,0HAA0H,2FAA2F,oIAAoI,qGAAqG,oHAAoH,qFAAqF,gFAAgF,oIAAoI,qGAAqG,sIAAsI,uGAAuG,8GAA8G,0HAA0H,2HAA2H,kJAAkJ,qHAAqH,qIAAqI,uIAAuI,0HAA0H,wIAAwI,kJAAkJ,kIAAkI,qIAAqI,oJAAoJ,+GAA+G,sIAAsI,yGAAyG,yHAAyH,2HAA2H,8GAA8G,iHAAiH,sIAAsI,2GAA2G,0EAA0E,sIAAsI,wIAAwI,8GAA8G,oHAAoH,sIAAsI,8GAA8G,0EAA0E,sIAAsI,wIAAwI,gHAAgH,4IAA4I,mIAAmI,sFAAsF,qJAAqJ,mIAAmI,4GAA4G,wJAAwJ,0HAA0H,+DAA+D,+FAA+F,8EAA8E,8DAA8D,0HAA0H,sJAAsJ,+FAA+F,2IAA2I,yHAAyH,sFAAsF,iGAAiG,kKAAkK,uDAAuD,4HAA4H,iEAAiE,yGAAyG,6GAA6G,4KAA4K,wKAAwK,oKAAoK,wKAAwK,SAAS,mCAAmC,sBAAsB,aAAa,oBAAoB,YAAY,kBAAkB,WAAW,UAAU,gNAAgN,eAAe,WAAW,QAAQ,kBAAkB,4BAA4B,eAAe,sBAAsB,sBAAsB,kBAAkB,sFAAsF,0BAA0B,uBAAuB,0CAA0C,UAAU,oDAAoD,4DAA4D,UAAU,6CAA6C,gCAAgC,6BAA6B,kCAAkC,0BAA0B,gCAAgC,wBAAwB,gDAAgD,aAAa,YAAY,2DAA2D,yCAAyC,+BAA+B,8BAA8B,4BAA4B,gCAAgC,0BAA0B,8BAA8B,eAAe,uBAAuB,eAAe,aAAa,2DAA2D,gDAAgD,sEAAsE,wCAAwC,kBAAkB,yBAAyB,aAAa,8CAA8C,eAAe,0BAA0B,QAAQ,kBAAkB,0HAA0H,uBAAuB,mBAAmB,YAAY,oBAAoB,sDAAsD,8DAA8D,UAAU,0BAA0B,4DAA4D,SAAS,2BAA2B,oUAAoU,oBAAoB,sBAAsB,UAAU,oDAAoD,+BAA+B,UAAU,eAAe,aAAa,eAAe,sEAAsE,6DAA6D,2JAA2J,uCAAuC,0JAA0J,4CAA4C,sHAAsH,qCAAqC,qHAAqH,mIAAmI,mCAAmC,gBAAgB,yCAAyC,kCAAkC,sKAAsK,yCAAyC,kBAAkB,yCAAyC,kCAAkC,2HAA2H,yCAAyC,mBAAmB,4CAA4C,qCAAqC,kFAAkF,yCAAyC,qLAAqL,4CAA4C,gBAAgB,yCAAyC,kCAAkC,sBAAsB,+CAA+C,wCAAwC,wBAAwB,+CAA+C,wCAAwC,sBAAsB,mCAAmC,6CAA6C,6EAA6E,wBAAwB,gCAAgC,+CAA+C,+BAA+B,8EAA8E,WAAW,8BAA8B,mBAAmB,sBAAsB,eAAe,mEAAmE;AACx5d;AACA;;;;;;;;;;;;;;;ACTA;AACA;AACA;AACA;AACA;AACA;AAC0B;AACnB,eAAe,wCAAG,QAAQ,oBAAoB,YAAY,OAAO,aAAa,OAAO,sBAAsB,2BAA2B,eAAe,oBAAoB,8DAA8D,0DAA0D,sDAAsD,0DAA0D,aAAa,YAAY,kBAAkB,WAAW,mBAAmB,sBAAsB,aAAa,OAAO,gBAAgB,gBAAgB,sBAAsB,kBAAkB,2BAA2B,eAAe,qCAAqC,eAAe,gBAAgB,UAAU,oBAAoB,qBAAqB,sBAAsB,iCAAiC,sBAAsB,QAAQ,oBAAoB,kBAAkB,cAAc,oBAAoB,aAAa,sBAAsB,YAAY,kBAAkB,OAAO,oCAAoC,KAAK,qCAAqC,YAAY,mBAAmB,uBAAuB,mBAAmB,+EAA+E,eAAe,iFAAiF,QAAQ,oBAAoB,oBAAoB,OAAO,SAAS,4BAA4B,aAAa,OAAO,UAAU,mDAAmD,yDAAyD,UAAU,sBAAsB,6CAA6C,gBAAgB,sBAAsB,UAAU,mBAAmB,iCAAiC,+BAA+B,wCAAwC,mCAAmC,WAAW,qBAAqB,mBAAmB,mCAAmC,8BAA8B,oCAAoC,6BAA6B,6BAA6B,mCAAmC,gBAAgB,kCAAkC,cAAc,0CAA0C,YAAY,2CAA2C,kBAAkB,kCAAkC,gBAAgB,0CAA0C,cAAc,2CAA2C,mBAAmB,qCAAqC,oFAAoF,yCAAyC,iBAAiB,6CAA6C,iDAAiD,eAAe,8CAA8C,kDAAkD,gBAAgB,kCAAkC,cAAc,0CAA0C,YAAY,2CAA2C,sBAAsB,wCAAwC,oBAAoB,gDAAgD,kBAAkB,iDAAiD,wBAAwB,wCAAwC,sBAAsB,gDAAgD,oBAAoB,kDAAkD,WAAW,8BAA8B,oCAAoC,eAAe,YAAY,cAAc,OAAO,sBAAsB,+BAA+B,gBAAgB,eAAe,uBAAuB,mBAAmB,UAAU,oCAAoC,kCAAkC,2CAA2C,sCAAsC,kBAAkB,eAAe,QAAQ,oBAAoB,kBAAkB,eAAe,kBAAkB,sBAAsB,gBAAgB,4CAA4C,qDAAqD,0BAA0B,cAAc,UAAU,iBAAiB,aAAa,eAAe,QAAQ,kBAAkB,mBAAmB,cAAc,qCAAqC,gBAAgB,qCAAqC,iBAAiB,wCAAwC,8BAA8B,4CAA4C,cAAc,qCAAqC,oBAAoB,2CAA2C,sBAAsB,4CAA4C,WAAW,8BAA8B,8BAA8B,eAAe,YAAY,cAAc,iBAAiB,oCAAoC,aAAa,yCAAyC,uCAAuC,gDAAgD,2CAA2C,SAAS,8BAA8B,2DAA2D,0DAA0D,8CAA8C,+BAA+B,cAAc,wBAAwB,0CAA0C,wBAAwB,0CAA0C,2BAA2B,6CAA6C,iDAAiD,wBAAwB,0CAA0C,8BAA8B,gDAAgD,8BAA8B,iDAAiD,WAAW,8BAA8B,2BAA2B,eAAe;AACnmL;AACA;;;;;;;;;;;;;;;;;;;ACTA;AACA;AACA;AACA;AACA;AACmC;AACe;AACW;AACY;AACJ;AACrE;AACA;AACA;AACA,cAAc;AACd;AACA,oDAAoD,sEAAa;AACjE;AACA,0BAA0B,8DAAY,EAAE,gEAAc;AACtD,kBAAkB,iDAAU;AAC5B,IAAI,gEAAa;AACjB;AAC2B;AAC3B;;;;;;;;;;;;;;;ACtBA;AACA;AACA;AACA;AACA;AACA;AAC0B;AACnB,eAAe,wCAAG,QAAQ,kEAAkE,iHAAiH,qDAAqD,sBAAsB,yEAAyE,aAAa,oBAAoB,kBAAkB,iBAAiB,aAAa,sBAAsB,2CAA2C,+KAA+K,mLAAmL,mLAAmL,uLAAuL,wDAAwD,2DAA2D,gBAAgB,yCAAyC,8KAA8K,kLAAkL,kLAAkL,sLAAsL,0DAA0D,8CAA8C,wBAAwB,KAAK,gBAAgB,GAAG,sDAAsD,0BAA0B,KAAK,sDAAsD,uBAAuB,KAAK,eAAe,GAAG,qDAAqD,yBAAyB,KAAK,qDAAqD,+BAA+B,MAAM;AACxjF;AACA;;;;;;;;;;;;;;;;;;ACTA;AACA;AACA;AACA;AACA;AACmC;AACQ;AACE;AAC8C;AAC3F;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,OAAO;AACrC;AACO,wBAAwB,2CAAU;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,+FAAoB;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,yCAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAU;AACV,IAAI,2DAAQ,GAAG,8BAA8B;AAC7C;AACA,iDAAU;AACV,IAAI,2DAAQ,GAAG,8BAA8B;AAC7C;AACA;AACA;;;;;;;;;;;;;;;;;;ACnGA;AACA;AACA;AACA;AACA;AACmC;AACe;AACG;AACI;AACzD;AACA;AACA;AACA;AACA,cAAc;AACd;AACA,4CAA4C,8DAAS;AACrD;AACA,sBAAsB,kEAAM;AAC5B,cAAc,iDAAU;AACxB,IAAI,gEAAa;AACjB;AACuB;AACvB;;;;;;;;;;;;;;;;;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA,kCAAkC;AAClC;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC;AACzC;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;AChFA;AACA;AACA;AACA;AACA;AAC+B;AACwD;AACvF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA,8BAA8B,0BAA0B;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,0CAA0C;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA,QAAQ,yCAAQ;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,yDAAe;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,yDAAe;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,yDAAe;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,qDAAe;AAC9C;AACA;AACA,8BAA8B,iEAAuB;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA,mBAAmB,cAAc;AACjC;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;AC/KA;AACA;AACA;AACA;AACA;AAC+B;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,yCAAQ;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6DAA6D,aAAa;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,0BAA0B;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACxHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP,4CAA4C,eAAe;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;AC/FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,qBAAqB;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;ACvCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;ACpGA;AACA;AACA;AACA;AACA;AAC+B;AACoB;AACnD;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,cAAc;AAC/B,iBAAiB,cAAc;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,4DAAS;AACjC;AACA;AACA;AACA,wBAAwB,4DAAS;AACjC;AACA;AACA;AACA,wBAAwB,4DAAS;AACjC;AACA;AACA;AACA,wBAAwB,4DAAS;AACjC;AACA;AACA;AACA,wBAAwB,4DAAS;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,yCAAQ;AACxB;AACA;AACA;AACA;AACA;AACA,oBAAoB,0DAA0D;AAC9E;AACA;AACA,iBAAiB,4DAAS,gBAAgB,0BAA0B;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;AClIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;AC7CA;AACA;AACA;AACA;AACA;AACmC;AACU;AAC7C;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,iDAAU;AACd,QAAQ,2DAAQ,GAAG,kBAAkB;AACrC;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;ACtFA;AACA;AACA;AACA;AACA;AACmC;AACU;AACM;AACnD;AACA;AACA;AACO;AACP;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,cAAc;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA,wBAAwB,4DAAS;AACjC;AACA;AACA,wBAAwB,4DAAS;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,4DAAS;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,iDAAU;AACd,QAAQ,2DAAQ,GAAG,kBAAkB;AACrC;AACA,IAAI,iDAAU;AACd,QAAQ,2DAAQ,GAAG,iCAAiC;AACpD;AACA;AACA;AACA;;;;;;;;;;;;;;;;;AC9KA;AACA;AACA;AACA;AACA;AAC+B;AACoB;AACnD;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,cAAc;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,yCAAQ;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,IAAI,YAAY;AACjC,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD,4DAAS;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT,KAAK,IAAI,iBAAiB;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,IAAI,iBAAiB;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;AChSA;AACA;AACA;AACA;AACA;AAC2C;AAC3C;AACA;AACA;AACA;AACO,gCAAgC,oDAAS;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,mBAAmB;AAC9B,iBAAiB;AACjB;AACA;AACA;;;;;;;;;;;;;;;AC/BA;AACA;AACA;AACA;AACA;AAC2C;AAC3C;AACA;AACA;AACA;AACO,6BAA6B,oDAAS;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,oBAAoB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,sBAAsB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,mBAAmB;AAChD;AACA;AACA,SAAS;AACT;AACA;AACA;;;;;;;;;;;;;;;;AChEA;AACA;AACA;AACA;AACA;AACmC;AACQ;AAC3C;AACA;AACA;AACA;AACO,8BAA8B,oDAAS;AAC9C;AACA;AACA;AACA;AACA;AACA,QAAQ,2CAAM,CAAC,yCAAI,kBAAkB,YAAY;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,iBAAiB;AAC5B,iBAAiB;AACjB;AACA;AACA;;;;;;;;;;;;;;AChCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,8BAA8B;AAC9C;AACA;AACA;AACA;AACA;AACA,sDAAsD,UAAU;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;ACxEA;AACA;AACA;AACA;AACA;AACoK;AACpK;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,0EAAa;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,6EAAgB;AACrD;AACA;AACA;AACA;AACA,qCAAqC,iFAAoB;AACzD;AACA;AACA;AACA,qCAAqC,8EAAiB;AACtD;AACA;AACA;AACA,qCAAqC,6EAAgB;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,oFAAuB;AAChE;AACA;AACA;AACA;AACA;AACA,gBAAgB,gHAAgH;AAChI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,0EAAa;AAC9C;AACA;AACA;AACA,eAAe,6EAAgB;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,0EAAa;AAC9C;AACA;AACA;AACA,eAAe,iFAAoB;AACnC;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;ACzLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,iBAAiB;AAClC;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,iBAAiB;AAClC;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,iBAAiB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,iBAAiB;AAClC;AACA;AACA;AACA;AACA;AACA;AACO;AACP,oBAAoB,kBAAkB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,iBAAiB;AAClC;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,iBAAiB;AAClC;AACA;AACA;AACA;AACA;AACO;AACP,mCAAmC,QAAQ;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,iBAAiB;AAClC,kBAAkB,gBAAgB;AAClC;AACA;AACA;AACA;AACA;AACA;AACO;AACP,oBAAoB,kBAAkB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,iBAAiB;AAClC,kBAAkB,gBAAgB;AAClC;AACA;AACA;AACA;AACA;AACA;AACO;AACP,oBAAoB,kBAAkB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP,2CAA2C,+BAA+B;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP,6CAA6C,+BAA+B;AAC5E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;ACrOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,kBAAkB,0CAA0C;AAC5D,KAAK;AACL;AACA;AACA;AACA;AACA;AACO;AACP,gDAAgD,+BAA+B;AAC/E;AACA;AACA;AACA;AACA;AACO;AACP,4CAA4C,+BAA+B;AAC3E;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACO;AACP,+CAA+C,+BAA+B;AAC9E;AACA;AACA;AACA;AACA;AACO;AACP,6CAA6C,+BAA+B;AAC5E;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA,+CAA+C,+BAA+B;AAC9E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACxIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,+KAA+K;AAC/L;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,+DAA+D;AAC7E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,kEAAkE;AAChF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,WAAW;AAClD,wCAAwC,YAAY;AACpD;AACA;AACA;AACA;AACA;AACA;AACA,0DAA0D,gDAAgD;AAC1G;AACA;AACA;AACA,yDAAyD,gDAAgD;AACzG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,qHAAqH;AACrI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,wIAAwI;AACxJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACzYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA,oBAAoB;AACplQA;AACA;AACA;AACA;AACA;AACA;AAC0B;AACnB,eAAe,wCAAG,QAAQ,4DAA4D,qGAAqG,gBAAgB,YAAY,iBAAiB,cAAc,mGAAmG,MAAM,0FAA0F,aAAa,WAAW,YAAY,YAAY,iBAAiB,+BAA+B,cAAc,UAAU,WAAW,kBAAkB,iBAAiB,mBAAmB,eAAe,kBAAkB,kBAAkB,wBAAwB,gBAAgB,aAAa,OAAO,eAAe,OAAO,cAAc,qBAAqB,SAAS,aAAa,sBAAsB,gGAAgG,eAAe,mBAAmB,cAAc,kBAAkB,kBAAkB,sBAAsB,wBAAwB,cAAc,6EAA6E,oCAAoC,iBAAiB,iDAAiD,gBAAgB,+BAA+B,oBAAoB,sCAAsC,UAAU,KAAK,cAAc,eAAe,mBAAmB,4CAA4C,aAAa,8BAA8B,MAAM,mBAAmB,wBAAwB;AAChiD;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACTA;AACA;AACA;AACA;AACA;AACmC;AACG;AACA;AACoB;AACwB;AAC3B;AACA;AAC4B;AACK;AACyC;AACxC;AACO;AACrB;AACP;AACpE;AACA;AACA;AACO;AACP;AACA,IAAI,4EAAa;AACjB,IAAI,4EAAa;AACjB,IAAI,4EAAa;AACjB,IAAI,4EAAa;AACjB;AACA;AACA,IAAI,4EAAa;AACjB,IAAI,4EAAa;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,OAAO;AAC1B,kBAAkB,OAAO;AACzB,mBAAmB,OAAO;AAC1B,kBAAkB,OAAO;AACzB;AACO,mBAAmB,2CAAU;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD,YAAY;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,eAAe;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,8EAAM;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,8EAAM;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,8DAAU;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,oFAAqB;AAC7D,kCAAkC,6EAAc;AAChD;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,4EAAa;AACnC,sBAAsB,4EAAa;AACnC;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,qFAAmB;AAC1D;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,iGAAyB;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,0EAAkB;AACtC;AACA,wBAAwB,0EAAkB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,wFAAa;AAClD,0DAA0D,8DAAU;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,8DAAU;AAC/B,kCAAkC,kGAAuB;AACzD;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,8DAAU;AAC/B,iCAAiC,iGAAsB;AACvD;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,8DAAU;AAC/B;AACA;AACA;AACA,qBAAqB,8DAAU;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,yCAAQ;AACrB;AACA;AACA;AACA;AACA;AACA,oEAAoE,eAAe;AACnF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,yCAAI;AACnB;AACA,sBAAsB,qEAAQ,2BAA2B;AACzD,gBAAgB,qEAAQ;AACxB,kBAAkB,4CAA4C,wCAAO,CAAC;AACtE,UAAU;AACV;AACA,uCAAuC,wBAAwB;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,yCAAI;AACnB,oBAAoB;AACpB,0BAA0B;AAC1B,4BAA4B;AAC5B,8BAA8B;AAC9B,4BAA4B;AAC5B,+BAA+B;AAC/B,2BAA2B;AAC3B,oBAAoB,iCAAiC;AACrD;AACA;AACA;AACA;AACA;AACA,eAAe,yCAAI;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,qEAAa;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4DAA4D,eAAe,IAAI,WAAW,OAAO,KAAK;AACtG;AACA,oBAAoB,iEAAM;AAC1B,SAAS;AACT;AACA;AACA;AACA;AACA,cAAc,2CAA2C,OAAO,WAAW;AAC3E,cAAc,eAAe;AAC7B,aAAa,iCAAiC,iEAAM,aAAa;AACjE,6DAA6D,YAAY,IAAI,YAAY;AACzF;AACA,wBAAwB,qBAAqB;AAC7C;AACA;AACA;AACA,+CAA+C,YAAY,IAAI,YAAY;AAC3E;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,WAAW,OAAO,KAAK;AACrC,cAAc,WAAW,+BAA+B,KAAK;AAC7D;AACA;AACA,oBAAoB,iEAAM;AAC1B,SAAS;AACT;AACA;AACA;AACA;AACA,cAAc,eAAe;AAC7B;AACA;AACA,qCAAqC,qCAAqC;AAC1E;AACA,aAAa;AACb,aAAa,iCAAiC,iEAAM,wBAAwB;AAC5E,6DAA6D,YAAY,IAAI,YAAY,KAAK,kEAAkE;AAChK;AACA,wBAAwB,qBAAqB;AAC7C;AACA;AACA;AACA;AACA,+CAA+C,YAAY,IAAI,YAAY;AAC3E;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mEAAmE,eAAe;AAClF;AACA,mEAAmE,eAAe;AAClF,iEAAiE,eAAe;AAChF;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAU;AACV,IAAI,wDAAK;AACT;AACA,kDAAU;AACV,IAAI,wDAAK;AACT;AACA,kDAAU;AACV,IAAI,2DAAQ;AACZ;AACA,kDAAU;AACV,IAAI,2DAAQ;AACZ;AACA,kDAAU;AACV,IAAI,2DAAQ,GAAG,eAAe;AAC9B;AACA,kDAAU;AACV,IAAI,2DAAQ,GAAG,0CAA0C;AACzD;AACA,kDAAU;AACV,IAAI,2DAAQ,GAAG,8BAA8B;AAC7C;AACA,kDAAU;AACV,IAAI,2DAAQ,GAAG,qCAAqC;AACpD;AACA,kDAAU;AACV,IAAI,2DAAQ,GAAG,qCAAqC;AACpD;AACA,kDAAU;AACV,IAAI,2DAAQ,GAAG,gDAAgD;AAC/D;AACA,kDAAU;AACV,IAAI,2DAAQ,GAAG,8CAA8C;AAC7D;AACA,kDAAU;AACV,IAAI,2DAAQ,GAAG,4CAA4C;AAC3D;AACA,kDAAU;AACV,IAAI,2DAAQ,GAAG,4BAA4B;AAC3C;AACA,kDAAU;AACV,IAAI,2DAAQ,GAAG,0BAA0B;AACzC;AACA,kDAAU;AACV,IAAI,2DAAQ,GAAG,wDAAwD;AACvE;AACA,kDAAU;AACV,IAAI,2DAAQ,GAAG,mDAAmD;AAClE;AACA,kDAAU;AACV,IAAI,2DAAQ,GAAG,gDAAgD;AAC/D;AACA,kDAAU;AACV,IAAI,2DAAQ,GAAG,4BAA4B;AAC3C;AACA,kDAAU;AACV,IAAI,2DAAQ,GAAG,gDAAgD;AAC/D;AACA,kDAAU;AACV,IAAI,wEAAqB,GAAG,eAAe;AAC3C;AACA,kDAAU;AACV,IAAI,wDAAK;AACT;AACA;;;;;;;;;;;;;;;;;;;;;;ACj5BA;AACA;AACA;AACA;AACA;AACmC;AACe;AACR;AACS;AACyB;AAChC;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA,kBAAkB,gCAAgC;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,aAAa;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA,kCAAkC,mDAAI;AACtC;AACA,iBAAiB,4DAAM;AACvB,SAAS,iDAAU;AACnB,IAAI,gEAAa;AACjB;AACkB;AAClB;;;;;;;;;;;;;;;ACnEA;AACA;AACA;AACA;AACA;AACA;AAC0B;AACnB,eAAe,wCAAG,SAAS,MAAM,oBAAoB,uCAAuC,aAAa,kBAAkB,mBAAmB,sCAAsC,0CAA0C,eAAe,0GAA0G,2EAA2E,2GAA2G,+EAA+E,kBAAkB,eAAe,8BAA8B,2DAA2D,WAAW,aAAa,YAAY,qBAAqB,mBAAmB,WAAW,cAAc,YAAY,YAAY,WAAW,SAAS,gHAAgH,oFAAoF,uHAAuH,wFAAwF,cAAc,YAAY,kBAAkB,WAAW,yCAAyC,aAAa,UAAU,kBAAkB,8CAA8C,YAAY,6CAA6C,MAAM,iFAAiF,QAAQ,kBAAkB,cAAc,4BAA4B,cAAc,UAAU,wBAAwB,+BAA+B,eAAe,+EAA+E,uBAAuB,kEAAkE,UAAU,6BAA6B,KAAK,mBAAmB,GAAG,oBAAoB,0BAA0B,sBAAsB,uBAAuB,oBAAoB,+EAA+E,2BAA2B,+EAA+E,qBAAqB,iFAAiF,wBAAwB,6FAA6F,+DAA+D,6BAA6B,qFAAqF,oCAAoC,qFAAqF,8BAA8B,uFAAuF,iCAAiC,2FAA2F,8DAA8D,WAAW,8BAA8B,MAAM,gBAAgB,wBAAwB,cAAc;AACrpG;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;ACTA;AACA;AACA;AACA;AACA;AACA;AACmC;AACG;AACN;AACiB;AACG;AACG;AAC4B;AAC4C;AACjC;AAC3B;AACwC;AACvB;AACP;AAC7E;AACA;AACA;AACA,uBAAuB,mGAAyB,CAAC,uFAAmB,CAAC,2FAAqB,CAAC,4EAAc,CAAC,2CAAU;AACpH;AACA;AACA;AACA,iBAAiB,YAAY;AAC7B;AACA,kBAAkB,OAAO;AACzB;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,SAAS;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,uFAAyB;AAChE;AACA,aAAa,yCAAQ;AACrB,iBAAiB,2EAAS;AAC1B;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B,eAAe,yCAAI;AACnB,8BAA8B,qEAAQ,UAAU;AAChD;AACA;AACA,qBAAqB;AACrB,sBAAsB,cAAc;AACpC,oDAAoD,KAAK;AACzD;AACA,sBAAsB,YAAY;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,YAAY;AACrC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa,2EAAS;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,4FAAiB;AAC7B;AACA;AACA;AACA;AACA,iDAAiD,eAAe;AAChE,qDAAqD,+BAA+B;AACpF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,4EAAY;AAChC;AACA;AACA,KAAK,4EAAY;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,qFAAe;AACpB,mBAAmB,0FAAc;AACjC;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK,uFAAiB;AACtB;AACA;AACA;AACA,kDAAU;AACV,IAAI,2DAAQ,GAAG,eAAe;AAC9B;AACA,kDAAU;AACV,IAAI,2DAAQ,GAAG,eAAe;AAC9B;AACA,kDAAU;AACV,IAAI,2DAAQ;AACZ;AACA,kDAAU;AACV,IAAI,wDAAK;AACT;AACA;;;;;;;;;;;;;;ACrKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+DAA+D,KAAK;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gEAAgE,eAAe;AAC/E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;ACtMA;AACA;AACA;AACA;AACA;AACmC;AACe;AACN;AACQ;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA,oCAAoC,qDAAK;AACzC;AACA,kBAAkB,6DAAM;AACxB,UAAU,iDAAU;AACpB,IAAI,gEAAa;AACjB;AACmB;AACnB;;;;;;;;;;;;;;;AChCA;AACA;AACA;AACA;AACA;AACA;AAC0B;AACnB,eAAe,wCAAG,QAAQ,aAAa,YAAY,oBAAoB,kBAAkB,aAAa,8BAA8B,MAAM,cAAc,eAAe,sBAAsB,kBAAkB,QAAQ,gBAAgB,SAAS,0CAA0C,iCAAiC,WAAW,UAAU,kBAAkB,iBAAiB,uFAAuF,QAAQ,4DAA4D,gBAAgB,0JAA0J,+BAA+B,gCAAgC,iBAAiB,uFAAuF,6CAA6C,gBAAgB,+CAA+C;AACl9B;AACA;;;;;;;;;;;;;;;;;;;;ACTA;AACA;AACA;AACA;AACA;AACmC;AACc;AACU;AACJ;AACoC;AAC/B;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA,gDAAgD;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA,CAAC,sBAAsB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,yCAAQ;AAC9B;AACA;AACA;AACA;AACA;AACO,qBAAqB,2CAAU;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,+FAAoB;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,yCAAI,wBAAwB,qgBAAgB,gBAAgB;AAChC;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,yCAAyC;AACvE,6BAA6B,YAAY;AACzC;AACA;AACA,gBAAgB,mBAAmB;AACnC,gBAAgB,YAAY;AAC5B;AACA;AACA,gBAAgB,eAAe;AAC/B,iBAAiB;AACjB;AACA;AACA,gBAAgB,gBAAgB;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,uBAAuB;AACvC,kCAAkC,aAAa,MAAM,aAAa;AAClE,gCAAgC,WAAW,MAAM,WAAW;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,eAAe;AAC5C,6BAA6B,aAAa,UAAU,iBAAiB;AACrE;AACA,SAAS;AACT;AACA;AACA,oBAAoB,iEAAM;AAC1B;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,MAAM;AACrB,gBAAgB,2BAA2B;AAC3C;AACA;AACA,cAAc,aAAa;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,yCAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAU;AACV,IAAI,2DAAQ,GAAG,8BAA8B;AAC7C;AACA,iDAAU;AACV,IAAI,wDAAK;AACT;AACA,iDAAU;AACV,IAAI,wDAAK;AACT;AACA,iDAAU;AACV,IAAI,wDAAK;AACT;AACA;;;;;;;;;;;;;;;;;;ACtaA;AACA;AACA;AACA;AACA;AACmC;AACe;AACJ;AACO;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA,sCAAsC,uDAAM;AAC5C;AACA,mBAAmB,8DAAM;AACzB,WAAW,iDAAU;AACrB,IAAI,gEAAa;AACjB;AACoB;AACpB;;;;;;;;;;;;;;;;;;;AC7BA;AACA;AACA;AACA;AACA;AACmC;AACe;AACS;AACC;AACS;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA,kDAAkD,oEAAY;AAC9D;AACA,yBAAyB,8DAAY,EAAE,qEAAM;AAC7C,iBAAiB,iDAAU;AAC3B,IAAI,gEAAa;AACjB;AAC0B;AAC1B;;;;;;;;;;;;;;;AC5CA;AACA;AACA;AACA;AACA;AACA;AAC0B;AACnB,eAAe,wCAAG,QAAQ,iJAAiJ,uGAAuG,0IAA0I,2JAA2J,yHAAyH,4HAA4H,6IAA6I,8GAA8G,+IAA+I,gHAAgH,+IAA+I,gHAAgH,mJAAmJ,oHAAoH,yJAAyJ,0HAA0H,qJAAqJ,sHAAsH,gJAAgJ,4JAA4J,qJAAqJ,gJAAgJ,iKAAiK,0JAA0J,sJAAsJ,yKAAyK,qJAAqJ,6JAA6J,iKAAiK,uJAAuJ,wHAAwH,0JAA0J,mKAAmK,yIAAyI,oIAAoI,qJAAqJ,8IAA8I,0IAA0I,kJAAkJ,mHAAmH,yIAAyI,sIAAsI,qJAAqJ,2JAA2J,4IAA4I,qJAAqJ,mHAAmH,yIAAyI,yIAAyI,qJAAqJ,2IAA2I,4GAA4G,2JAA2J,uJAAuJ,6HAA6H,iKAAiK,wJAAwJ,iIAAiI,6KAA6K,qIAAqI,iKAAiK,wJAAwJ,0KAA0K,wJAAwJ,iIAAiI,6KAA6K,yIAAyI,4FAA4F,+IAA+I,2KAA2K,gKAAgK,8IAA8I,uLAAuL,2IAA2I,8FAA8F,2MAA2M,uMAAuM,4LAA4L,gMAAgM,oFAAoF,sFAAsF,sEAAsE,sFAAsF,0FAA0F,0FAA0F,8FAA8F,qEAAqE,mEAAmE,iFAAiF,mEAAmE,uEAAuE,sGAAsG,wGAAwG,0GAA0G,wFAAwF,4FAA4F,uFAAuF,2FAA2F,0FAA0F,8FAA8F,iGAAiG,qGAAqG,oGAAoG,wGAAwG,mGAAmG,uGAAuG,gGAAgG,iFAAiF,4GAA4G,6FAA6F,gGAAgG,uGAAuG,0GAA0G,yGAAyG,4GAA4G,6FAA6F,gGAAgG,uGAAuG,kGAAkG,sGAAsG,0GAA0G,yGAAyG,oFAAoF,2FAA2F,8FAA8F,6FAA6F,gGAAgG,kGAAkG,iFAAiF,oFAAoF,2FAA2F,8FAA8F,6FAA6F,gGAAgG,kGAAkG,iFAAiF,oFAAoF,2FAA2F,sFAAsF,0FAA0F,8FAA8F,6FAA6F,wEAAwE,sEAAsE,oFAAoF,wGAAwG,0FAA0F,sEAAsE,0EAA0E,+EAA+E,kFAAkF,gFAAgF,8FAA8F,gFAAgF,oFAAoF,iFAAiF,0BAA0B,+CAA+C,4CAA4C,2CAA2C,eAAe,gDAAgD,6CAA6C;AAC9ukB;AACA;;;;;;;;;;;;;;;;;ACTA;AACA;AACA;AACA;AACA;AACqC;AACQ;AACR;AACrC;AACO,2BAA2B,8CAAM;AACxC;AACA;AACA,wBAAwB,2DAAO;AAC/B;AACA;AACA;;;;;;;;;;;;;;;ACfA;AACA;AACA;AACA;AACA;AACA;AAC0B;AACnB,eAAe,wCAAG,QAAQ,iJAAiJ,kHAAkH,iJAAiJ,kHAAkH,qJAAqJ,sHAAsH,2IAA2I,4GAA4G,uGAAuG,2JAA2J,4HAA4H,uJAAuJ,wHAAwH,uJAAuJ,kJAAkJ,mKAAmK,4IAA4I,4JAA4J,wJAAwJ,uJAAuJ,+JAA+J,mKAAmK,yJAAyJ,4JAA4J,qKAAqK,2IAA2I,sIAAsI,uJAAuJ,gIAAgI,gJAAgJ,4IAA4I,2IAA2I,wIAAwI,uJAAuJ,kIAAkI,iGAAiG,6JAA6J,8IAA8I,2IAA2I,2IAA2I,uJAAuJ,qIAAqI,iGAAiG,6JAA6J,yJAAyJ,+HAA+H,mKAAmK,0JAA0J,mIAAmI,+KAA+K,uIAAuI,mKAAmK,0JAA0J,4KAA4K,0JAA0J,mIAAmI,+KAA+K,2IAA2I,8FAA8F,sHAAsH,qFAAqF,iJAAiJ,6KAA6K,kKAAkK,gJAAgJ,yLAAyL,6IAA6I,gGAAgG,+MAA+M,2MAA2M,uMAAuM,2MAA2M,wFAAwF,4FAA4F,4FAA4F,gGAAgG,uEAAuE,qEAAqE,mFAAmF,qEAAqE,yEAAyE,yFAAyF,6FAA6F,4FAA4F,gGAAgG,mGAAmG,uGAAuG,sFAAsF,0FAA0F,sFAAsF,sGAAsG,0GAA0G,qGAAqG,yGAAyG,mFAAmF,+FAA+F,kGAAkG,yGAAyG,4FAA4F,4GAA4G,2GAA2G,+FAA+F,kGAAkG,yGAAyG,4FAA4F,4GAA4G,2GAA2G,sFAAsF,6FAA6F,gFAAgF,gGAAgG,+FAA+F,mFAAmF,sFAAsF,6FAA6F,gFAAgF,gFAAgF,gGAAgG,+FAA+F,mFAAmF,sFAAsF,6FAA6F,gFAAgF,gFAAgF,gGAAgG,+FAA+F,0EAA0E,wEAAwE,sFAAsF,0GAA0G,4FAA4F,wEAAwE,4EAA4E,iFAAiF,oEAAoE,oEAAoE,oFAAoF,kFAAkF,gGAAgG,kFAAkF,sFAAsF,mFAAmF,0BAA0B,+CAA+C,4CAA4C,2CAA2C,eAAe,gDAAgD,6CAA6C;AACxlhB;AACA;;;;;;;;;;;;;;;;;ACTA;AACA;AACA;AACA;AACA;AACuC;AACM;AACR;AACrC;AACO,6BAA6B,8CAAM;AAC1C;AACA;AACA,wBAAwB,2DAAO;AAC/B;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACfA;AACA;AACA;AACA;AACA;AACA;AACmC;AACP;AAC8B;AACwB;AAC3B;AACA;AACC;AACa;AACO;AACmD;AAC7C;AACW;AACS;AAChB;AACP;AAC8B;AACnB;AACd;AAC7B;AAC/C;AACA;AACA,wBAAwB,8EAAkB,CAAC,6FAAqB,CAAC,mGAAyB,CAAC,wFAAmB,CAAC,2FAAqB,CAAC,2CAAU;AAC/I;AACA,kBAAkB,OAAO;AACzB;AACA;AACA,iBAAiB,YAAY;AAC7B;AACA;AACA,mBAAmB,OAAO;AAC1B,kBAAkB,OAAO;AACzB;AACA,mBAAmB,OAAO;AAC1B,kBAAkB,OAAO;AACzB;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,yCAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,kFAA6B;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,6EAAU;AACtC;AACA;AACA;AACA;AACA,YAAY,yCAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,oFAAgB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,yCAAI;AACnB;AACA,wBAAwB,qEAAQ,0BAA0B;AAC1D,oBAAoB,oBAAoB;AACxC,UAAU,oBAAoB,EAAE;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,yCAAQ;AACrB;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,wDAAU;AACzB,SAAS;AACT;AACA;AACA;AACA;AACA,qBAAqB;AACrB,uBAAuB,aAAa,wCAAO;AAC3C;AACA,0BAA0B;AAC1B;AACA;AACA,kBAAkB;AAClB,yBAAyB;AACzB,qBAAqB;AACrB,uBAAuB;AACvB,sBAAsB;AACtB,sBAAsB;AACtB,mBAAmB;AACnB,uBAAuB;AACvB;AACA,4BAA4B;AAC5B,uBAAuB;AACvB,qBAAqB;AACrB,mBAAmB,iBAAiB;AACpC,WAAW;AACX;AACA,UAAU,cAAc;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,yCAAI;AACnB;AACA,gDAAgD,sBAAsB;AACtE;AACA;AACA;AACA;AACA,eAAe,yCAAI;AACnB;AACA,iDAAiD,sBAAsB;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA,eAAe,yCAAI,oBAAoB,oBAAoB,yCAAI,QAAQ,EAAE;AACzE;AACA;AACA;AACA,eAAe,yCAAI;AACnB;AACA;AACA,wBAAwB;AACxB;AACA;AACA,qBAAqB,aAAa,wCAAO;AACzC;AACA;AACA;AACA;AACA,gBAAgB,qEAAQ;AACxB,qCAAqC,iBAAiB;AACtD;AACA,qBAAqB,iBAAiB;AACtC;AACA,SAAS;AACT;AACA,gBAAgB;AAChB,iBAAiB;AACjB,uBAAuB;AACvB,0BAA0B;AAC1B,wBAAwB;AACxB,sBAAsB;AACtB,mBAAmB;AACnB,kBAAkB;AAClB,mBAAmB;AACnB,kBAAkB;AAClB,sBAAsB;AACtB,6BAA6B;AAC7B,+BAA+B,8BAA8B;AAC7D,UAAU;AACV;AACA;AACA;AACA;AACA,eAAe,yCAAI;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,6EAAU;AAClD;AACA;AACA,wCAAwC,6EAAU;AAClD;AACA;AACA;AACA,wCAAwC,6EAAU;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,mBAAmB;AACvC;AACA;AACA;AACA;AACA,gEAAgE,gGAAgB;AAChF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,yFAAkB;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,6DAAgB;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,6EAAU;AAC5C;AACA;AACA;AACA,2BAA2B,yFAAa;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,qFAAe;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,sFAAe;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,+BAA+B;AAC/E,iDAAiD,eAAe;AAChE;AACA;AACA;AACA;AACA,KAAK,6EAAY;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,qFAAe;AACpB,mBAAmB,4FAAe;AAClC;AACA,KAAK,uFAAiB;AACtB;AACA;AACA;AACA;AACA;AACA,OAAO,2CAAU;AACjB;AACA;AACA,kDAAU;AACV,IAAI,2DAAQ,GAAG,eAAe;AAC9B;AACA,kDAAU;AACV,IAAI,2DAAQ,GAAG,eAAe;AAC9B;AACA,kDAAU;AACV,IAAI,2DAAQ,GAAG,uCAAuC;AACtD;AACA,kDAAU;AACV,IAAI,2DAAQ;AACZ;AACA,kDAAU;AACV,IAAI,2DAAQ,GAAG,yCAAyC;AACxD;AACA,kDAAU;AACV,IAAI,2DAAQ,GAAG,4CAA4C;AAC3D;AACA,kDAAU;AACV,IAAI,2DAAQ,GAAG,8BAA8B;AAC7C;AACA,kDAAU;AACV,IAAI,2DAAQ,GAAG,+BAA+B;AAC9C;AACA,kDAAU;AACV,IAAI,2DAAQ,GAAG,8CAA8C;AAC7D;AACA,kDAAU;AACV,IAAI,2DAAQ,GAAG,4CAA4C;AAC3D;AACA,kDAAU;AACV,IAAI,2DAAQ,GAAG,8CAA8C;AAC7D;AACA,kDAAU;AACV,IAAI,2DAAQ,GAAG,2BAA2B;AAC1C;AACA,kDAAU;AACV,IAAI,2DAAQ,GAAG,yBAAyB;AACxC;AACA,kDAAU;AACV,IAAI,2DAAQ;AACZ;AACA,kDAAU;AACV,IAAI,2DAAQ,GAAG,2CAA2C;AAC1D;AACA,kDAAU;AACV,IAAI,wDAAK;AACT;AACA,kDAAU;AACV,IAAI,wDAAK;AACT;AACA,kDAAU;AACV,IAAI,wDAAK;AACT;AACA,kDAAU;AACV,IAAI,wDAAK;AACT;AACA,kDAAU;AACV,IAAI,wDAAK;AACT;AACA,kDAAU;AACV,IAAI,wDAAK;AACT;AACA,kDAAU;AACV,IAAI,wDAAK;AACT;AACA,kDAAU;AACV,IAAI,wDAAK;AACT;AACA,kDAAU;AACV,IAAI,wEAAqB,GAAG,qCAAqC;AACjE;AACA;;;;;;;;;;;;;;;AC9uBA;AACA;AACA;AACA;AACA;AACA;AAC0B;AACnB,eAAe,wCAAG,QAAQ,YAAY,gBAAgB,aAAa,OAAO,eAAe,aAAa,QAAQ,kBAAkB,sBAAsB,sCAAsC,kBAAkB,mBAAmB,cAAc,eAAe,kBAAkB,WAAW,aAAa,YAAY,WAAW,mBAAmB,uBAAuB,8BAA8B,UAAU,oCAAoC,0CAA0C,UAAU,uBAAuB,kBAAkB,cAAc,kBAAkB,aAAa,QAAQ,kCAAkC,2CAA2C,cAAc,UAAU,WAAW,kBAAkB,kCAAkC,eAAe,eAAe,WAAW,MAAM,oBAAoB,kBAAkB;AACv0B;AACA;;;;;;;;;;;;;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA,oBAAoB,kBAAkB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;ACtBA;AACA;AACA;AACA;AACA;AACmC;AACe;AACa;AACD;AACO;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA,sDAAsD,wEAAc;AACpE;AACA,2BAA2B,8DAAY,EAAE,uEAAM;AAC/C,mBAAmB,iDAAU;AAC7B,IAAI,gEAAa;AACjB;AAC4B;AAC5B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC5CA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD,sBAAsB;AACxE;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,sBAAsB,KAAK,gBAAgB;AACtD;AACA;AACA;AACA,WAAW,kBAAkB;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,WAAW;AACxC;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,2BAA2B;AACpD;AACA;AACA;AACA;AACA;AACwD;AACZ;AACN;AACb;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,MAAM;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,4CAA4C;AAC1D,IAAI,oBAAoB;AACxB;AACO,yBAAyB,kEAAe;AAC/C;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,gDAAM;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,8CAAQ;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,YAAY;AACpD;AACA;AACA;AACA;AACA,oBAAoB,YAAY;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;ACvOA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;AC/CA;AACA;AACA;AACA;AACA;AAC0C;AACwB;AAClE,gCAAgC,oDAAS;AACzC;AACA;AACA,8BAA8B,mDAAQ;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,kDAAQ;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,iBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACO,iBAAiB,wDAAS;AACjC;;;;;;;;;;;;;;;;ACrFA;AACA;AACA;AACA;AACA;AAC0C;AACwB;AAClE;AACA;AACA;AACA;AACA;AACA,gCAAgC,oDAAS;AACzC;AACA;AACA,8BAA8B,mDAAQ;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC;AAClC;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,KAAK,GAAG,OAAO;AAC7C,SAAS;AACT;AACA;AACA,gBAAgB,QAAQ;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,kDAAQ;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,2BAA2B;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B,OAAO;AACP;AACA;AACA,SAAS;AACT;AACO,iBAAiB,wDAAS;AACjC;;;;;;;;;;;;;;ACxGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;;;;;;;;;;;;;;;;;;;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,MAAM;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,kCAAkC;AACxD;AACA;AACA;AACA;AACA,uBAAuB,YAAY;AACnC;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,WAAW,MAAM,UAAU,KAAK,WAAW,IAAI,WAAW,MAAM,gBAAgB;AACpH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,MAAM;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,gBAAgB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,gBAAgB;AACtD;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6DAA6D,iBAAiB;AAC9E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,OAAO;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0DAA0D,gBAAgB;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,+BAA+B;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4EAA4E,IAAI;AAChF,+EAA+E,KAAK;AACpF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,eAAe;AACvD;AACA;AACA;AACA,yCAAyC,sCAAsC;AAC/E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,oCAAoC;AACrE;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,sCAAsC;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,MAAM,aAAa,MAAM;AACnE;AACA;AACA;AACA,oCAAoC,IAAI;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,MAAM,SAAS,kBAAkB;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mEAAmE;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD,MAAM;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,+BAA+B;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,EAAE;AACrwBAAwB,wBAAwB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,kBAAkB,eAAe,KAAK;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB;AACA;AACA,2BAA2B,KAAK;AAChC;AACA;AACA;AACA;AACA,kBAAkB,0BAA0B;AAC5C,WAAW,gBAAgB,IAAI,cAAc;AAC7C;AACA;AACA;AACA;AACA,uBAAuB,yBAAyB;AAChD;AACA,IAAI;AACJ;AACO;AACP;AACA;AACA;AACA;AACA;AACA,uEAAuE,UAAU;AACjF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,6IAA6I;AAC7I;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;ACn+CA;AACA;AACA;AACA;AACA;AACA;AACA;AACwF;AACxF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA,0FAA0F,MAAM;AAChG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,wBAAwB,8CAAQ;AACvC;AACA;AACA;AACA;AACA;AACA;AACO,uBAAuB,6CAAO;AACrC;AACA;AACA;AACA;AACA;AACA;AACO,0BAA0B,gDAAU;AAC3C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpJ8iB;AAC9iB;;;;;;;;;;;;;;;;ACD8C;AAC9C;;;;;;;;;;;;;;;;ACD8C;AAC9C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACD0H;AAC1H;;;;;;;;;;;;;;;;;;;;;ACDgC;AAChC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACDA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS,gBAAgB,sCAAsC,kBAAkB;AACjF,wBAAwB;AACxB;AACA;;AAEO;AACP;AACA;AACA;AACA,kBAAkB;AAClB;AACA;;AAEO;AACP;AACA,+CAA+C,OAAO;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA,2DAA2D,cAAc;AACzE;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA,2CAA2C,QAAQ;AACnD;AACA;;AAEO;AACP,kCAAkC;AAClC;;AAEO;AACP,uBAAuB,uFAAuF;AAC9G;AACA;AACA,yGAAyG;AACzG;AACA,sCAAsC,QAAQ;AAC9C;AACA,gEAAgE;AAChE;AACA,8CAA8C,yFAAyF;AACvI,8DAA8D,2CAA2C;AACzG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA,kBAAkB,yBAAyB;AAC3C;AACA;AACA;AACA;;AAEO;AACP;AACA;;AAEO;AACP;AACA,4CAA4C,yEAAyE;AACrH;;AAEO;AACP;AACA;;AAEO;AACP,0BAA0B,+DAA+D,iBAAiB;AAC1G;AACA,kCAAkC,MAAM,+BAA+B,YAAY;AACnF,iCAAiC,MAAM,mCAAmC,YAAY;AACtF,8BAA8B;AAC9B;AACA,GAAG;AACH;;AAEO;AACP,YAAY,6BAA6B,0BAA0B,cAAc,qBAAqB;AACtG,2IAA2I,cAAc;AACzJ,qBAAqB,sBAAsB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC;AACtC,iCAAiC,SAAS;AAC1C,iCAAiC,WAAW,UAAU;AACtD,wCAAwC,cAAc;AACtD;AACA,4GAA4G,OAAO;AACnH,+EAA+E,iBAAiB;AAChG,uDAAuD,gBAAgB,QAAQ;AAC/E,6CAA6C,gBAAgB,gBAAgB;AAC7E;AACA,gCAAgC;AAChC;AACA;AACA,QAAQ,YAAY,aAAa,SAAS,UAAU;AACpD,kCAAkC,SAAS;AAC3C;AACA;;AAEO;AACP;AACA;AACA;AACA,eAAe,oCAAoC;AACnD;AACA;AACA,CAAC;AACD;AACA;AACA,CAAC;;AAEM;AACP;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,MAAM;AACxB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;;AAEA;AACO;AACP,2BAA2B,sBAAsB;AACjD;AACA;AACA;;AAEA;AACO;AACP,gDAAgD,QAAQ;AACxD,uCAAuC,QAAQ;AAC/C,uDAAuD,QAAQ;AAC/D;AACA;AACA;;AAEO;AACP,2EAA2E,OAAO;AAClF;AACA;AACA;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;;AAEO;AACP;AACA;AACA,wMAAwM,cAAc;AACtN,4BAA4B,sBAAsB;AAClD,wBAAwB,YAAY,sBAAsB,qCAAqC,2CAA2C,MAAM;AAChJ,0BAA0B,MAAM,iBAAiB,YAAY;AAC7D,qBAAqB;AACrB,4BAA4B;AAC5B,2BAA2B;AAC3B,0BAA0B;AAC1B;;AAEO;AACP;AACA,eAAe,6CAA6C,UAAU,sDAAsD,cAAc;AAC1I,wBAAwB,6BAA6B,oBAAoB,uCAAuC,kBAAkB;AAClI;;AAEO;AACP;AACA;AACA,yGAAyG,uFAAuF,cAAc;AAC9M,qBAAqB,8BAA8B,gDAAgD,wDAAwD;AAC3J,2CAA2C,sCAAsC,UAAU,mBAAmB,IAAI;AAClH;;AAEO;AACP,+BAA+B,uCAAuC,YAAY,KAAK,OAAO;AAC9F;AACA;;AAEA;AACA,wCAAwC,4BAA4B;AACpE,CAAC;AACD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA,qDAAqD,cAAc;AACnE;AACA;AACA;;AAEO;AACP,2CAA2C;AAC3C;;AAEO;AACP;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,MAAM,oBAAoB,YAAY;AAC5E,qBAAqB,8CAA8C;AACnE;AACA;AACA,qBAAqB,aAAa;AAClC;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uFAAuF,SAAS,gBAAgB;AAChH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA,iEAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,EAAC;;;;;;;;;;;AChZW;AACb;AACA;AACA;AACA,8CAA6C,EAAE,aAAa,EAAC;AAC7D,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,uBAAuB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA,0BAA0B;AAC1B,sBAAsB;AACtB,KAAK;AACL;AACA;AACA;AACA;AACA,wCAAwC,cAAc,IAAI,MAAM;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C;AAC5C;AACA;AACA,iCAAiC,0BAA0B;AAC3D;AACA;AACA;AACA;AACA,uBAAuB,QAAQ,EAAE,+BAA+B;AAChE;AACA;AACA,uBAAuB,QAAQ,EAAE,+BAA+B,GAAG,2BAA2B,IAAI,QAAQ;AAC1G;AACA;AACA;AACA,qBAAqB;AACrB","sources":["webpack://sensemaking-tools-prototype/./node_modules/@lit/reactive-element/development/css-tag.js","webpack://sensemaking-tools-prototype/./node_modules/@lit/reactive-element/development/decorators/base.js","webpack://sensemaking-tools-prototype/./node_modules/@lit/reactive-element/development/decorators/custom-element.js","webpack://sensemaking-tools-prototype/./node_modules/@lit/reactive-element/development/decorators/event-options.js","webpack://sensemaking-tools-prototype/./node_modules/@lit/reactive-element/development/decorators/property.js","webpack://sensemaking-tools-prototype/./node_modules/@lit/reactive-element/development/decorators/query-all.js","webpack://sensemaking-tools-prototype/./node_modules/@lit/reactive-element/development/decorators/query-assigned-elements.js","webpack://sensemaking-tools-prototype/./node_modules/@lit/reactive-element/development/decorators/query-assigned-nodes.js","webpack://sensemaking-tools-prototype/./node_modules/@lit/reactive-element/development/decorators/query-async.js","webpack://sensemaking-tools-prototype/./node_modules/@lit/reactive-element/development/decorators/query.js","webpack://sensemaking-tools-prototype/./node_modules/@lit/reactive-element/development/decorators/state.js","webpack://sensemaking-tools-prototype/./node_modules/@lit/reactive-element/development/reactive-element.js","webpack://sensemaking-tools-prototype/./node_modules/@material/web/checkbox/checkbox.js","webpack://sensemaking-tools-prototype/./node_modules/@material/web/checkbox/internal/checkbox-styles.js","webpack://sensemaking-tools-prototype/./node_modules/@material/web/checkbox/internal/checkbox.js","webpack://sensemaking-tools-prototype/./node_modules/@material/web/elevation/elevation.js","webpack://sensemaking-tools-prototype/./node_modules/@material/web/elevation/internal/elevation-styles.js","webpack://sensemaking-tools-prototype/./node_modules/@material/web/elevation/internal/elevation.js","webpack://sensemaking-tools-prototype/./node_modules/@material/web/field/filled-field.js","webpack://sensemaking-tools-prototype/./node_modules/@material/web/field/internal/field.js","webpack://sensemaking-tools-prototype/./node_modules/@material/web/field/internal/filled-field.js","webpack://sensemaking-tools-prototype/./node_modules/@material/web/field/internal/filled-styles.js","webpack://sensemaking-tools-prototype/./node_modules/@material/web/field/internal/outlined-field.js","webpack://sensemaking-tools-prototype/./node_modules/@material/web/field/internal/outlined-styles.js","webpack://sensemaking-tools-prototype/./node_modules/@material/web/field/internal/shared-styles.js","webpack://sensemaking-tools-prototype/./node_modules/@material/web/field/outlined-field.js","webpack://sensemaking-tools-prototype/./node_modules/@material/web/focus/internal/focus-ring-styles.js","webpack://sensemaking-tools-prototype/./node_modules/@material/web/focus/internal/focus-ring.js","webpack://sensemaking-tools-prototype/./node_modules/@material/web/focus/md-focus-ring.js","webpack://sensemaking-tools-prototype/./node_modules/@material/web/internal/aria/aria.js","webpack://sensemaking-tools-prototype/./node_modules/@material/web/internal/aria/delegate.js","webpack://sensemaking-tools-prototype/./node_modules/@material/web/internal/controller/attachable-controller.js","webpack://sensemaking-tools-prototype/./node_modules/@material/web/internal/events/form-label-activation.js","webpack://sensemaking-tools-prototype/./node_modules/@material/web/internal/events/redispatch-event.js","webpack://sensemaking-tools-prototype/./node_modules/@material/web/internal/motion/animation.js","webpack://sensemaking-tools-prototype/./node_modules/@material/web/labs/behaviors/constraint-validation.js","webpack://sensemaking-tools-prototype/./node_modules/@material/web/labs/behaviors/element-internals.js","webpack://sensemaking-tools-prototype/./node_modules/@material/web/labs/behaviors/focusable.js","webpack://sensemaking-tools-prototype/./node_modules/@material/web/labs/behaviors/form-associated.js","webpack://sensemaking-tools-prototype/./node_modules/@material/web/labs/behaviors/on-report-validity.js","webpack://sensemaking-tools-prototype/./node_modules/@material/web/labs/behaviors/validators/checkbox-validator.js","webpack://sensemaking-tools-prototype/./node_modules/@material/web/labs/behaviors/validators/radio-validator.js","webpack://sensemaking-tools-prototype/./node_modules/@material/web/labs/behaviors/validators/select-validator.js","webpack://sensemaking-tools-prototype/./node_modules/@material/web/labs/behaviors/validators/validator.js","webpack://sensemaking-tools-prototype/./node_modules/@material/web/list/internal/list-controller.js","webpack://sensemaking-tools-prototype/./node_modules/@material/web/list/internal/list-navigation-helpers.js","webpack://sensemaking-tools-prototype/./node_modules/@material/web/menu/internal/controllers/shared.js","webpack://sensemaking-tools-prototype/./node_modules/@material/web/menu/internal/controllers/surfacePositionController.js","webpack://sensemaking-tools-prototype/./node_modules/@material/web/menu/internal/controllers/typeaheadController.js","webpack://sensemaking-tools-prototype/./node_modules/@material/web/menu/internal/menu-styles.js","webpack://sensemaking-tools-prototype/./node_modules/@material/web/menu/internal/menu.js","webpack://sensemaking-tools-prototype/./node_modules/@material/web/menu/menu.js","webpack://sensemaking-tools-prototype/./node_modules/@material/web/radio/internal/radio-styles.js","webpack://sensemaking-tools-prototype/./node_modules/@material/web/radio/internal/radio.js","webpack://sensemaking-tools-prototype/./node_modules/@material/web/radio/internal/single-selection-controller.js","webpack://sensemaking-tools-prototype/./node_modules/@material/web/radio/radio.js","webpack://sensemaking-tools-prototype/./node_modules/@material/web/ripple/internal/ripple-styles.js","webpack://sensemaking-tools-prototype/./node_modules/@material/web/ripple/internal/ripple.js","webpack://sensemaking-tools-prototype/./node_modules/@material/web/ripple/ripple.js","webpack://sensemaking-tools-prototype/./node_modules/@material/web/select/filled-select.js","webpack://sensemaking-tools-prototype/./node_modules/@material/web/select/internal/filled-select-styles.js","webpack://sensemaking-tools-prototype/./node_modules/@material/web/select/internal/filled-select.js","webpack://sensemaking-tools-prototype/./node_modules/@material/web/select/internal/outlined-select-styles.js","webpack://sensemaking-tools-prototype/./node_modules/@material/web/select/internal/outlined-select.js","webpack://sensemaking-tools-prototype/./node_modules/@material/web/select/internal/select.js","webpack://sensemaking-tools-prototype/./node_modules/@material/web/select/internal/shared-styles.js","webpack://sensemaking-tools-prototype/./node_modules/@material/web/select/internal/shared.js","webpack://sensemaking-tools-prototype/./node_modules/@material/web/select/outlined-select.js","webpack://sensemaking-tools-prototype/./node_modules/lit-element/development/lit-element.js","webpack://sensemaking-tools-prototype/./node_modules/lit-html/development/directive.js","webpack://sensemaking-tools-prototype/./node_modules/lit-html/development/directives/class-map.js","webpack://sensemaking-tools-prototype/./node_modules/lit-html/development/directives/style-map.js","webpack://sensemaking-tools-prototype/./node_modules/lit-html/development/is-server.js","webpack://sensemaking-tools-prototype/./node_modules/lit-html/development/lit-html.js","webpack://sensemaking-tools-prototype/./node_modules/lit-html/development/static.js","webpack://sensemaking-tools-prototype/./node_modules/lit/decorators.js","webpack://sensemaking-tools-prototype/./node_modules/lit/directives/class-map.js","webpack://sensemaking-tools-prototype/./node_modules/lit/directives/style-map.js","webpack://sensemaking-tools-prototype/./node_modules/lit/index.js","webpack://sensemaking-tools-prototype/./node_modules/lit/static-html.js","webpack://sensemaking-tools-prototype/./node_modules/tslib/tslib.es6.mjs","webpack://sensemaking-tools-prototype/./node_modules/typed-html/dist/src/elements.js"],"sourcesContent":["/**\n * @license\n * Copyright 2019 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\nconst NODE_MODE = false;\n// Allows minifiers to rename references to globalThis\nconst global = globalThis;\n/**\n * Whether the current browser supports `adoptedStyleSheets`.\n */\nexport const supportsAdoptingStyleSheets = global.ShadowRoot &&\n    (global.ShadyCSS === undefined || global.ShadyCSS.nativeShadow) &&\n    'adoptedStyleSheets' in Document.prototype &&\n    'replace' in CSSStyleSheet.prototype;\nconst constructionToken = Symbol();\nconst cssTagCache = new WeakMap();\n/**\n * A container for a string of CSS text, that may be used to create a CSSStyleSheet.\n *\n * CSSResult is the return value of `css`-tagged template literals and\n * `unsafeCSS()`. In order to ensure that CSSResults are only created via the\n * `css` tag and `unsafeCSS()`, CSSResult cannot be constructed directly.\n */\nexport class CSSResult {\n    constructor(cssText, strings, safeToken) {\n        // This property needs to remain unminified.\n        this['_$cssResult$'] = true;\n        if (safeToken !== constructionToken) {\n            throw new Error('CSSResult is not constructable. Use `unsafeCSS` or `css` instead.');\n        }\n        this.cssText = cssText;\n        this._strings = strings;\n    }\n    // This is a getter so that it's lazy. In practice, this means stylesheets\n    // are not created until the first element instance is made.\n    get styleSheet() {\n        // If `supportsAdoptingStyleSheets` is true then we assume CSSStyleSheet is\n        // constructable.\n        let styleSheet = this._styleSheet;\n        const strings = this._strings;\n        if (supportsAdoptingStyleSheets && styleSheet === undefined) {\n            const cacheable = strings !== undefined && strings.length === 1;\n            if (cacheable) {\n                styleSheet = cssTagCache.get(strings);\n            }\n            if (styleSheet === undefined) {\n                (this._styleSheet = styleSheet = new CSSStyleSheet()).replaceSync(this.cssText);\n                if (cacheable) {\n                    cssTagCache.set(strings, styleSheet);\n                }\n            }\n        }\n        return styleSheet;\n    }\n    toString() {\n        return this.cssText;\n    }\n}\nconst textFromCSSResult = (value) => {\n    // This property needs to remain unminified.\n    if (value['_$cssResult$'] === true) {\n        return value.cssText;\n    }\n    else if (typeof value === 'number') {\n        return value;\n    }\n    else {\n        throw new Error(`Value passed to 'css' function must be a 'css' function result: ` +\n            `${value}. Use 'unsafeCSS' to pass non-literal values, but take care ` +\n            `to ensure page security.`);\n    }\n};\n/**\n * Wrap a value for interpolation in a {@linkcode css} tagged template literal.\n *\n * This is unsafe because untrusted CSS text can be used to phone home\n * or exfiltrate data to an attacker controlled site. Take care to only use\n * this with trusted input.\n */\nexport const unsafeCSS = (value) => new CSSResult(typeof value === 'string' ? value : String(value), undefined, constructionToken);\n/**\n * A template literal tag which can be used with LitElement's\n * {@linkcode LitElement.styles} property to set element styles.\n *\n * For security reasons, only literal string values and number may be used in\n * embedded expressions. To incorporate non-literal values {@linkcode unsafeCSS}\n * may be used inside an expression.\n */\nexport const css = (strings, ...values) => {\n    const cssText = strings.length === 1\n        ? strings[0]\n        : values.reduce((acc, v, idx) => acc + textFromCSSResult(v) + strings[idx + 1], strings[0]);\n    return new CSSResult(cssText, strings, constructionToken);\n};\n/**\n * Applies the given styles to a `shadowRoot`. When Shadow DOM is\n * available but `adoptedStyleSheets` is not, styles are appended to the\n * `shadowRoot` to [mimic spec behavior](https://wicg.github.io/construct-stylesheets/#using-constructed-stylesheets).\n * Note, when shimming is used, any styles that are subsequently placed into\n * the shadowRoot should be placed *before* any shimmed adopted styles. This\n * will match spec behavior that gives adopted sheets precedence over styles in\n * shadowRoot.\n */\nexport const adoptStyles = (renderRoot, styles) => {\n    if (supportsAdoptingStyleSheets) {\n        renderRoot.adoptedStyleSheets = styles.map((s) => s instanceof CSSStyleSheet ? s : s.styleSheet);\n    }\n    else {\n        for (const s of styles) {\n            const style = document.createElement('style');\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            const nonce = global['litNonce'];\n            if (nonce !== undefined) {\n                style.setAttribute('nonce', nonce);\n            }\n            style.textContent = s.cssText;\n            renderRoot.appendChild(style);\n        }\n    }\n};\nconst cssResultFromStyleSheet = (sheet) => {\n    let cssText = '';\n    for (const rule of sheet.cssRules) {\n        cssText += rule.cssText;\n    }\n    return unsafeCSS(cssText);\n};\nexport const getCompatibleStyle = supportsAdoptingStyleSheets ||\n    (NODE_MODE && global.CSSStyleSheet === undefined)\n    ? (s) => s\n    : (s) => s instanceof CSSStyleSheet ? cssResultFromStyleSheet(s) : s;\n//# sourceMappingURL=css-tag.js.map","/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n/**\n * Wraps up a few best practices when returning a property descriptor from a\n * decorator.\n *\n * Marks the defined property as configurable, and enumerable, and handles\n * the case where we have a busted Reflect.decorate zombiefill (e.g. in Angular\n * apps).\n *\n * @internal\n */\nexport const desc = (obj, name, descriptor) => {\n    // For backwards compatibility, we keep them configurable and enumerable.\n    descriptor.configurable = true;\n    descriptor.enumerable = true;\n    if (\n    // We check for Reflect.decorate each time, in case the zombiefill\n    // is applied via lazy loading some Angular code.\n    Reflect.decorate &&\n        typeof name !== 'object') {\n        // If we're called as a legacy decorator, and Reflect.decorate is present\n        // then we have no guarantees that the returned descriptor will be\n        // defined on the class, so we must apply it directly ourselves.\n        Object.defineProperty(obj, name, descriptor);\n    }\n    return descriptor;\n};\n//# sourceMappingURL=base.js.map","/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n/**\n * Class decorator factory that defines the decorated class as a custom element.\n *\n * ```js\n * @customElement('my-element')\n * class MyElement extends LitElement {\n *   render() {\n *     return html``;\n *   }\n * }\n * ```\n * @category Decorator\n * @param tagName The tag name of the custom element to define.\n */\nexport const customElement = (tagName) => (classOrTarget, context) => {\n    if (context !== undefined) {\n        context.addInitializer(() => {\n            customElements.define(tagName, classOrTarget);\n        });\n    }\n    else {\n        customElements.define(tagName, classOrTarget);\n    }\n};\n//# sourceMappingURL=custom-element.js.map","/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n/**\n * Adds event listener options to a method used as an event listener in a\n * lit-html template.\n *\n * @param options An object that specifies event listener options as accepted by\n * `EventTarget#addEventListener` and `EventTarget#removeEventListener`.\n *\n * Current browsers support the `capture`, `passive`, and `once` options. See:\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Parameters\n *\n * ```ts\n * class MyElement {\n *   clicked = false;\n *\n *   render() {\n *     return html`\n *       <div @click=${this._onClick}>\n *         <button></button>\n *       </div>\n *     `;\n *   }\n *\n *   @eventOptions({capture: true})\n *   _onClick(e) {\n *     this.clicked = true;\n *   }\n * }\n * ```\n * @category Decorator\n */\nexport function eventOptions(options) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return ((protoOrValue, nameOrContext) => {\n        const method = typeof protoOrValue === 'function'\n            ? protoOrValue\n            : protoOrValue[nameOrContext];\n        Object.assign(method, options);\n    });\n}\n//# sourceMappingURL=event-options.js.map","/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n/*\n * IMPORTANT: For compatibility with tsickle and the Closure JS compiler, all\n * property decorators (but not class decorators) in this file that have\n * an @ExportDecoratedItems annotation must be defined as a regular function,\n * not an arrow function.\n */\nimport { defaultConverter, notEqual, } from '../reactive-element.js';\nconst DEV_MODE = true;\nlet issueWarning;\nif (DEV_MODE) {\n    // Ensure warnings are issued only 1x, even if multiple versions of Lit\n    // are loaded.\n    const issuedWarnings = (globalThis.litIssuedWarnings ??= new Set());\n    // Issue a warning, if we haven't already.\n    issueWarning = (code, warning) => {\n        warning += ` See https://lit.dev/msg/${code} for more information.`;\n        if (!issuedWarnings.has(warning)) {\n            console.warn(warning);\n            issuedWarnings.add(warning);\n        }\n    };\n}\nconst legacyProperty = (options, proto, name) => {\n    const hasOwnProperty = proto.hasOwnProperty(name);\n    proto.constructor.createProperty(name, hasOwnProperty ? { ...options, wrapped: true } : options);\n    // For accessors (which have a descriptor on the prototype) we need to\n    // return a descriptor, otherwise TypeScript overwrites the descriptor we\n    // define in createProperty() with the original descriptor. We don't do this\n    // for fields, which don't have a descriptor, because this could overwrite\n    // descriptor defined by other decorators.\n    return hasOwnProperty\n        ? Object.getOwnPropertyDescriptor(proto, name)\n        : undefined;\n};\n// This is duplicated from a similar variable in reactive-element.ts, but\n// actually makes sense to have this default defined with the decorator, so\n// that different decorators could have different defaults.\nconst defaultPropertyDeclaration = {\n    attribute: true,\n    type: String,\n    converter: defaultConverter,\n    reflect: false,\n    hasChanged: notEqual,\n};\n/**\n * Wraps a class accessor or setter so that `requestUpdate()` is called with the\n * property name and old value when the accessor is set.\n */\nexport const standardProperty = (options = defaultPropertyDeclaration, target, context) => {\n    const { kind, metadata } = context;\n    if (DEV_MODE && metadata == null) {\n        issueWarning('missing-class-metadata', `The class ${target} is missing decorator metadata. This ` +\n            `could mean that you're using a compiler that supports decorators ` +\n            `but doesn't support decorator metadata, such as TypeScript 5.1. ` +\n            `Please update your compiler.`);\n    }\n    // Store the property options\n    let properties = globalThis.litPropertyMetadata.get(metadata);\n    if (properties === undefined) {\n        globalThis.litPropertyMetadata.set(metadata, (properties = new Map()));\n    }\n    properties.set(context.name, options);\n    if (kind === 'accessor') {\n        // Standard decorators cannot dynamically modify the class, so we can't\n        // replace a field with accessors. The user must use the new `accessor`\n        // keyword instead.\n        const { name } = context;\n        return {\n            set(v) {\n                const oldValue = target.get.call(this);\n                target.set.call(this, v);\n                this.requestUpdate(name, oldValue, options);\n            },\n            init(v) {\n                if (v !== undefined) {\n                    this._$changeProperty(name, undefined, options);\n                }\n                return v;\n            },\n        };\n    }\n    else if (kind === 'setter') {\n        const { name } = context;\n        return function (value) {\n            const oldValue = this[name];\n            target.call(this, value);\n            this.requestUpdate(name, oldValue, options);\n        };\n    }\n    throw new Error(`Unsupported decorator location: ${kind}`);\n};\n/**\n * A class field or accessor decorator which creates a reactive property that\n * reflects a corresponding attribute value. When a decorated property is set\n * the element will update and render. A {@linkcode PropertyDeclaration} may\n * optionally be supplied to configure property features.\n *\n * This decorator should only be used for public fields. As public fields,\n * properties should be considered as primarily settable by element users,\n * either via attribute or the property itself.\n *\n * Generally, properties that are changed by the element should be private or\n * protected fields and should use the {@linkcode state} decorator.\n *\n * However, sometimes element code does need to set a public property. This\n * should typically only be done in response to user interaction, and an event\n * should be fired informing the user; for example, a checkbox sets its\n * `checked` property when clicked and fires a `changed` event. Mutating public\n * properties should typically not be done for non-primitive (object or array)\n * properties. In other cases when an element needs to manage state, a private\n * property decorated via the {@linkcode state} decorator should be used. When\n * needed, state properties can be initialized via public properties to\n * facilitate complex interactions.\n *\n * ```ts\n * class MyElement {\n *   @property({ type: Boolean })\n *   clicked = false;\n * }\n * ```\n * @category Decorator\n * @ExportDecoratedItems\n */\nexport function property(options) {\n    return (protoOrTarget, nameOrContext\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    ) => {\n        return (typeof nameOrContext === 'object'\n            ? standardProperty(options, protoOrTarget, nameOrContext)\n            : legacyProperty(options, protoOrTarget, nameOrContext));\n    };\n}\n//# sourceMappingURL=property.js.map","/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\nimport { desc } from './base.js';\n// Shared fragment used to generate empty NodeLists when a render root is\n// undefined\nlet fragment;\n/**\n * A property decorator that converts a class property into a getter\n * that executes a querySelectorAll on the element's renderRoot.\n *\n * @param selector A DOMString containing one or more selectors to match.\n *\n * See:\n * https://developer.mozilla.org/en-US/docs/Web/API/Document/querySelectorAll\n *\n * ```ts\n * class MyElement {\n *   @queryAll('div')\n *   divs: NodeListOf<HTMLDivElement>;\n *\n *   render() {\n *     return html`\n *       <div id=\"first\"></div>\n *       <div id=\"second\"></div>\n *     `;\n *   }\n * }\n * ```\n * @category Decorator\n */\nexport function queryAll(selector) {\n    return ((obj, name) => {\n        return desc(obj, name, {\n            get() {\n                const container = this.renderRoot ?? (fragment ??= document.createDocumentFragment());\n                return container.querySelectorAll(selector);\n            },\n        });\n    });\n}\n//# sourceMappingURL=query-all.js.map","/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\nimport { desc } from './base.js';\n/**\n * A property decorator that converts a class property into a getter that\n * returns the `assignedElements` of the given `slot`. Provides a declarative\n * way to use\n * [`HTMLSlotElement.assignedElements`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLSlotElement/assignedElements).\n *\n * Can be passed an optional {@linkcode QueryAssignedElementsOptions} object.\n *\n * Example usage:\n * ```ts\n * class MyElement {\n *   @queryAssignedElements({ slot: 'list' })\n *   listItems!: Array<HTMLElement>;\n *   @queryAssignedElements()\n *   unnamedSlotEls!: Array<HTMLElement>;\n *\n *   render() {\n *     return html`\n *       <slot name=\"list\"></slot>\n *       <slot></slot>\n *     `;\n *   }\n * }\n * ```\n *\n * Note, the type of this property should be annotated as `Array<HTMLElement>`.\n *\n * @category Decorator\n */\nexport function queryAssignedElements(options) {\n    return ((obj, name) => {\n        const { slot, selector } = options ?? {};\n        const slotSelector = `slot${slot ? `[name=${slot}]` : ':not([name])'}`;\n        return desc(obj, name, {\n            get() {\n                const slotEl = this.renderRoot?.querySelector(slotSelector);\n                const elements = slotEl?.assignedElements(options) ?? [];\n                return (selector === undefined\n                    ? elements\n                    : elements.filter((node) => node.matches(selector)));\n            },\n        });\n    });\n}\n//# sourceMappingURL=query-assigned-elements.js.map","/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\nimport { desc } from './base.js';\n/**\n * A property decorator that converts a class property into a getter that\n * returns the `assignedNodes` of the given `slot`.\n *\n * Can be passed an optional {@linkcode QueryAssignedNodesOptions} object.\n *\n * Example usage:\n * ```ts\n * class MyElement {\n *   @queryAssignedNodes({slot: 'list', flatten: true})\n *   listItems!: Array<Node>;\n *\n *   render() {\n *     return html`\n *       <slot name=\"list\"></slot>\n *     `;\n *   }\n * }\n * ```\n *\n * Note the type of this property should be annotated as `Array<Node>`. Use the\n * queryAssignedElements decorator to list only elements, and optionally filter\n * the element list using a CSS selector.\n *\n * @category Decorator\n */\nexport function queryAssignedNodes(options) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return ((obj, name) => {\n        const { slot } = options ?? {};\n        const slotSelector = `slot${slot ? `[name=${slot}]` : ':not([name])'}`;\n        return desc(obj, name, {\n            get() {\n                const slotEl = this.renderRoot?.querySelector(slotSelector);\n                return (slotEl?.assignedNodes(options) ?? []);\n            },\n        });\n    });\n}\n//# sourceMappingURL=query-assigned-nodes.js.map","/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\nimport { desc } from './base.js';\n// Note, in the future, we may extend this decorator to support the use case\n// where the queried element may need to do work to become ready to interact\n// with (e.g. load some implementation code). If so, we might elect to\n// add a second argument defining a function that can be run to make the\n// queried element loaded/updated/ready.\n/**\n * A property decorator that converts a class property into a getter that\n * returns a promise that resolves to the result of a querySelector on the\n * element's renderRoot done after the element's `updateComplete` promise\n * resolves. When the queried property may change with element state, this\n * decorator can be used instead of requiring users to await the\n * `updateComplete` before accessing the property.\n *\n * @param selector A DOMString containing one or more selectors to match.\n *\n * See: https://developer.mozilla.org/en-US/docs/Web/API/Document/querySelector\n *\n * ```ts\n * class MyElement {\n *   @queryAsync('#first')\n *   first: Promise<HTMLDivElement>;\n *\n *   render() {\n *     return html`\n *       <div id=\"first\"></div>\n *       <div id=\"second\"></div>\n *     `;\n *   }\n * }\n *\n * // external usage\n * async doSomethingWithFirst() {\n *  (await aMyElement.first).doSomething();\n * }\n * ```\n * @category Decorator\n */\nexport function queryAsync(selector) {\n    return ((obj, name) => {\n        return desc(obj, name, {\n            async get() {\n                await this.updateComplete;\n                return this.renderRoot?.querySelector(selector) ?? null;\n            },\n        });\n    });\n}\n//# sourceMappingURL=query-async.js.map","/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\nimport { desc } from './base.js';\nconst DEV_MODE = true;\nlet issueWarning;\nif (DEV_MODE) {\n    // Ensure warnings are issued only 1x, even if multiple versions of Lit\n    // are loaded.\n    const issuedWarnings = (globalThis.litIssuedWarnings ??= new Set());\n    // Issue a warning, if we haven't already.\n    issueWarning = (code, warning) => {\n        warning += code\n            ? ` See https://lit.dev/msg/${code} for more information.`\n            : '';\n        if (!issuedWarnings.has(warning)) {\n            console.warn(warning);\n            issuedWarnings.add(warning);\n        }\n    };\n}\n/**\n * A property decorator that converts a class property into a getter that\n * executes a querySelector on the element's renderRoot.\n *\n * @param selector A DOMString containing one or more selectors to match.\n * @param cache An optional boolean which when true performs the DOM query only\n *     once and caches the result.\n *\n * See: https://developer.mozilla.org/en-US/docs/Web/API/Document/querySelector\n *\n * ```ts\n * class MyElement {\n *   @query('#first')\n *   first: HTMLDivElement;\n *\n *   render() {\n *     return html`\n *       <div id=\"first\"></div>\n *       <div id=\"second\"></div>\n *     `;\n *   }\n * }\n * ```\n * @category Decorator\n */\nexport function query(selector, cache) {\n    return ((protoOrTarget, nameOrContext, descriptor) => {\n        const doQuery = (el) => {\n            const result = (el.renderRoot?.querySelector(selector) ?? null);\n            if (DEV_MODE && result === null && cache && !el.hasUpdated) {\n                const name = typeof nameOrContext === 'object'\n                    ? nameOrContext.name\n                    : nameOrContext;\n                issueWarning('', `@query'd field ${JSON.stringify(String(name))} with the 'cache' ` +\n                    `flag set for selector '${selector}' has been accessed before ` +\n                    `the first update and returned null. This is expected if the ` +\n                    `renderRoot tree has not been provided beforehand (e.g. via ` +\n                    `Declarative Shadow DOM). Therefore the value hasn't been cached.`);\n            }\n            // TODO: if we want to allow users to assert that the query will never\n            // return null, we need a new option and to throw here if the result\n            // is null.\n            return result;\n        };\n        if (cache) {\n            // Accessors to wrap from either:\n            //   1. The decorator target, in the case of standard decorators\n            //   2. The property descriptor, in the case of experimental decorators\n            //      on auto-accessors.\n            //   3. Functions that access our own cache-key property on the instance,\n            //      in the case of experimental decorators on fields.\n            const { get, set } = typeof nameOrContext === 'object'\n                ? protoOrTarget\n                : descriptor ??\n                    (() => {\n                        const key = DEV_MODE\n                            ? Symbol(`${String(nameOrContext)} (@query() cache)`)\n                            : Symbol();\n                        return {\n                            get() {\n                                return this[key];\n                            },\n                            set(v) {\n                                this[key] = v;\n                            },\n                        };\n                    })();\n            return desc(protoOrTarget, nameOrContext, {\n                get() {\n                    let result = get.call(this);\n                    if (result === undefined) {\n                        result = doQuery(this);\n                        if (result !== null || this.hasUpdated) {\n                            set.call(this, result);\n                        }\n                    }\n                    return result;\n                },\n            });\n        }\n        else {\n            // This object works as the return type for both standard and\n            // experimental decorators.\n            return desc(protoOrTarget, nameOrContext, {\n                get() {\n                    return doQuery(this);\n                },\n            });\n        }\n    });\n}\n//# sourceMappingURL=query.js.map","/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n/*\n * IMPORTANT: For compatibility with tsickle and the Closure JS compiler, all\n * property decorators (but not class decorators) in this file that have\n * an @ExportDecoratedItems annotation must be defined as a regular function,\n * not an arrow function.\n */\nimport { property } from './property.js';\n/**\n * Declares a private or protected reactive property that still triggers\n * updates to the element when it changes. It does not reflect from the\n * corresponding attribute.\n *\n * Properties declared this way must not be used from HTML or HTML templating\n * systems, they're solely for properties internal to the element. These\n * properties may be renamed by optimization tools like closure compiler.\n * @category Decorator\n */\nexport function state(options) {\n    return property({\n        ...options,\n        // Add both `state` and `attribute` because we found a third party\n        // controller that is keying off of PropertyOptions.state to determine\n        // whether a field is a private internal property or not.\n        state: true,\n        attribute: false,\n    });\n}\n//# sourceMappingURL=state.js.map","/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n/**\n * Use this module if you want to create your own base class extending\n * {@link ReactiveElement}.\n * @packageDocumentation\n */\nimport { getCompatibleStyle, adoptStyles, } from './css-tag.js';\n// In the Node build, this import will be injected by Rollup:\n// import {HTMLElement, customElements} from '@lit-labs/ssr-dom-shim';\nexport * from './css-tag.js';\n// TODO (justinfagnani): Add `hasOwn` here when we ship ES2022\nconst { is, defineProperty, getOwnPropertyDescriptor, getOwnPropertyNames, getOwnPropertySymbols, getPrototypeOf, } = Object;\nconst NODE_MODE = false;\n// Lets a minifier replace globalThis references with a minified name\nconst global = globalThis;\nif (NODE_MODE) {\n    global.customElements ??= customElements;\n}\nconst DEV_MODE = true;\nlet issueWarning;\nconst trustedTypes = global\n    .trustedTypes;\n// Temporary workaround for https://crbug.com/993268\n// Currently, any attribute starting with \"on\" is considered to be a\n// TrustedScript source. Such boolean attributes must be set to the equivalent\n// trusted emptyScript value.\nconst emptyStringForBooleanAttribute = trustedTypes\n    ? trustedTypes.emptyScript\n    : '';\nconst polyfillSupport = DEV_MODE\n    ? global.reactiveElementPolyfillSupportDevMode\n    : global.reactiveElementPolyfillSupport;\nif (DEV_MODE) {\n    // Ensure warnings are issued only 1x, even if multiple versions of Lit\n    // are loaded.\n    const issuedWarnings = (global.litIssuedWarnings ??=\n        new Set());\n    // Issue a warning, if we haven't already.\n    issueWarning = (code, warning) => {\n        warning += ` See https://lit.dev/msg/${code} for more information.`;\n        if (!issuedWarnings.has(warning)) {\n            console.warn(warning);\n            issuedWarnings.add(warning);\n        }\n    };\n    issueWarning('dev-mode', `Lit is in dev mode. Not recommended for production!`);\n    // Issue polyfill support warning.\n    if (global.ShadyDOM?.inUse && polyfillSupport === undefined) {\n        issueWarning('polyfill-support-missing', `Shadow DOM is being polyfilled via \\`ShadyDOM\\` but ` +\n            `the \\`polyfill-support\\` module has not been loaded.`);\n    }\n}\n/**\n * Useful for visualizing and logging insights into what the Lit template system is doing.\n *\n * Compiled out of prod mode builds.\n */\nconst debugLogEvent = DEV_MODE\n    ? (event) => {\n        const shouldEmit = global\n            .emitLitDebugLogEvents;\n        if (!shouldEmit) {\n            return;\n        }\n        global.dispatchEvent(new CustomEvent('lit-debug', {\n            detail: event,\n        }));\n    }\n    : undefined;\n/*\n * When using Closure Compiler, JSCompiler_renameProperty(property, object) is\n * replaced at compile time by the munged name for object[property]. We cannot\n * alias this function, so we have to use a small shim that has the same\n * behavior when not compiling.\n */\n/*@__INLINE__*/\nconst JSCompiler_renameProperty = (prop, _obj) => prop;\nexport const defaultConverter = {\n    toAttribute(value, type) {\n        switch (type) {\n            case Boolean:\n                value = value ? emptyStringForBooleanAttribute : null;\n                break;\n            case Object:\n            case Array:\n                // if the value is `null` or `undefined` pass this through\n                // to allow removing/no change behavior.\n                value = value == null ? value : JSON.stringify(value);\n                break;\n        }\n        return value;\n    },\n    fromAttribute(value, type) {\n        let fromValue = value;\n        switch (type) {\n            case Boolean:\n                fromValue = value !== null;\n                break;\n            case Number:\n                fromValue = value === null ? null : Number(value);\n                break;\n            case Object:\n            case Array:\n                // Do *not* generate exception when invalid JSON is set as elements\n                // don't normally complain on being mis-configured.\n                // TODO(sorvell): Do generate exception in *dev mode*.\n                try {\n                    // Assert to adhere to Bazel's \"must type assert JSON parse\" rule.\n                    fromValue = JSON.parse(value);\n                }\n                catch (e) {\n                    fromValue = null;\n                }\n                break;\n        }\n        return fromValue;\n    },\n};\n/**\n * Change function that returns true if `value` is different from `oldValue`.\n * This method is used as the default for a property's `hasChanged` function.\n */\nexport const notEqual = (value, old) => !is(value, old);\nconst defaultPropertyDeclaration = {\n    attribute: true,\n    type: String,\n    converter: defaultConverter,\n    reflect: false,\n    hasChanged: notEqual,\n};\n// Ensure metadata is enabled. TypeScript does not polyfill\n// Symbol.metadata, so we must ensure that it exists.\nSymbol.metadata ??= Symbol('metadata');\n// Map from a class's metadata object to property options\n// Note that we must use nullish-coalescing assignment so that we only use one\n// map even if we load multiple version of this module.\nglobal.litPropertyMetadata ??= new WeakMap();\n/**\n * Base element class which manages element properties and attributes. When\n * properties change, the `update` method is asynchronously called. This method\n * should be supplied by subclasses to render updates as desired.\n * @noInheritDoc\n */\nexport class ReactiveElement\n// In the Node build, this `extends` clause will be substituted with\n// `(globalThis.HTMLElement ?? HTMLElement)`.\n//\n// This way, we will first prefer any global `HTMLElement` polyfill that the\n// user has assigned, and then fall back to the `HTMLElement` shim which has\n// been imported (see note at the top of this file about how this import is\n// generated by Rollup). Note that the `HTMLElement` variable has been\n// shadowed by this import, so it no longer refers to the global.\n extends HTMLElement {\n    /**\n     * Adds an initializer function to the class that is called during instance\n     * construction.\n     *\n     * This is useful for code that runs against a `ReactiveElement`\n     * subclass, such as a decorator, that needs to do work for each\n     * instance, such as setting up a `ReactiveController`.\n     *\n     * ```ts\n     * const myDecorator = (target: typeof ReactiveElement, key: string) => {\n     *   target.addInitializer((instance: ReactiveElement) => {\n     *     // This is run during construction of the element\n     *     new MyController(instance);\n     *   });\n     * }\n     * ```\n     *\n     * Decorating a field will then cause each instance to run an initializer\n     * that adds a controller:\n     *\n     * ```ts\n     * class MyElement extends LitElement {\n     *   @myDecorator foo;\n     * }\n     * ```\n     *\n     * Initializers are stored per-constructor. Adding an initializer to a\n     * subclass does not add it to a superclass. Since initializers are run in\n     * constructors, initializers will run in order of the class hierarchy,\n     * starting with superclasses and progressing to the instance's class.\n     *\n     * @nocollapse\n     */\n    static addInitializer(initializer) {\n        this.__prepare();\n        (this._initializers ??= []).push(initializer);\n    }\n    /**\n     * Returns a list of attributes corresponding to the registered properties.\n     * @nocollapse\n     * @category attributes\n     */\n    static get observedAttributes() {\n        // Ensure we've created all properties\n        this.finalize();\n        // this.__attributeToPropertyMap is only undefined after finalize() in\n        // ReactiveElement itself. ReactiveElement.observedAttributes is only\n        // accessed with ReactiveElement as the receiver when a subclass or mixin\n        // calls super.observedAttributes\n        return (this.__attributeToPropertyMap && [...this.__attributeToPropertyMap.keys()]);\n    }\n    /**\n     * Creates a property accessor on the element prototype if one does not exist\n     * and stores a {@linkcode PropertyDeclaration} for the property with the\n     * given options. The property setter calls the property's `hasChanged`\n     * property option or uses a strict identity check to determine whether or not\n     * to request an update.\n     *\n     * This method may be overridden to customize properties; however,\n     * when doing so, it's important to call `super.createProperty` to ensure\n     * the property is setup correctly. This method calls\n     * `getPropertyDescriptor` internally to get a descriptor to install.\n     * To customize what properties do when they are get or set, override\n     * `getPropertyDescriptor`. To customize the options for a property,\n     * implement `createProperty` like this:\n     *\n     * ```ts\n     * static createProperty(name, options) {\n     *   options = Object.assign(options, {myOption: true});\n     *   super.createProperty(name, options);\n     * }\n     * ```\n     *\n     * @nocollapse\n     * @category properties\n     */\n    static createProperty(name, options = defaultPropertyDeclaration) {\n        // If this is a state property, force the attribute to false.\n        if (options.state) {\n            options.attribute = false;\n        }\n        this.__prepare();\n        this.elementProperties.set(name, options);\n        if (!options.noAccessor) {\n            const key = DEV_MODE\n                ? // Use Symbol.for in dev mode to make it easier to maintain state\n                    // when doing HMR.\n                    Symbol.for(`${String(name)} (@property() cache)`)\n                : Symbol();\n            const descriptor = this.getPropertyDescriptor(name, key, options);\n            if (descriptor !== undefined) {\n                defineProperty(this.prototype, name, descriptor);\n            }\n        }\n    }\n    /**\n     * Returns a property descriptor to be defined on the given named property.\n     * If no descriptor is returned, the property will not become an accessor.\n     * For example,\n     *\n     * ```ts\n     * class MyElement extends LitElement {\n     *   static getPropertyDescriptor(name, key, options) {\n     *     const defaultDescriptor =\n     *         super.getPropertyDescriptor(name, key, options);\n     *     const setter = defaultDescriptor.set;\n     *     return {\n     *       get: defaultDescriptor.get,\n     *       set(value) {\n     *         setter.call(this, value);\n     *         // custom action.\n     *       },\n     *       configurable: true,\n     *       enumerable: true\n     *     }\n     *   }\n     * }\n     * ```\n     *\n     * @nocollapse\n     * @category properties\n     */\n    static getPropertyDescriptor(name, key, options) {\n        const { get, set } = getOwnPropertyDescriptor(this.prototype, name) ?? {\n            get() {\n                return this[key];\n            },\n            set(v) {\n                this[key] = v;\n            },\n        };\n        if (DEV_MODE && get == null) {\n            if ('value' in (getOwnPropertyDescriptor(this.prototype, name) ?? {})) {\n                throw new Error(`Field ${JSON.stringify(String(name))} on ` +\n                    `${this.name} was declared as a reactive property ` +\n                    `but it's actually declared as a value on the prototype. ` +\n                    `Usually this is due to using @property or @state on a method.`);\n            }\n            issueWarning('reactive-property-without-getter', `Field ${JSON.stringify(String(name))} on ` +\n                `${this.name} was declared as a reactive property ` +\n                `but it does not have a getter. This will be an error in a ` +\n                `future version of Lit.`);\n        }\n        return {\n            get() {\n                return get?.call(this);\n            },\n            set(value) {\n                const oldValue = get?.call(this);\n                set.call(this, value);\n                this.requestUpdate(name, oldValue, options);\n            },\n            configurable: true,\n            enumerable: true,\n        };\n    }\n    /**\n     * Returns the property options associated with the given property.\n     * These options are defined with a `PropertyDeclaration` via the `properties`\n     * object or the `@property` decorator and are registered in\n     * `createProperty(...)`.\n     *\n     * Note, this method should be considered \"final\" and not overridden. To\n     * customize the options for a given property, override\n     * {@linkcode createProperty}.\n     *\n     * @nocollapse\n     * @final\n     * @category properties\n     */\n    static getPropertyOptions(name) {\n        return this.elementProperties.get(name) ?? defaultPropertyDeclaration;\n    }\n    /**\n     * Initializes static own properties of the class used in bookkeeping\n     * for element properties, initializers, etc.\n     *\n     * Can be called multiple times by code that needs to ensure these\n     * properties exist before using them.\n     *\n     * This method ensures the superclass is finalized so that inherited\n     * property metadata can be copied down.\n     * @nocollapse\n     */\n    static __prepare() {\n        if (this.hasOwnProperty(JSCompiler_renameProperty('elementProperties', this))) {\n            // Already prepared\n            return;\n        }\n        // Finalize any superclasses\n        const superCtor = getPrototypeOf(this);\n        superCtor.finalize();\n        // Create own set of initializers for this class if any exist on the\n        // superclass and copy them down. Note, for a small perf boost, avoid\n        // creating initializers unless needed.\n        if (superCtor._initializers !== undefined) {\n            this._initializers = [...superCtor._initializers];\n        }\n        // Initialize elementProperties from the superclass\n        this.elementProperties = new Map(superCtor.elementProperties);\n    }\n    /**\n     * Finishes setting up the class so that it's ready to be registered\n     * as a custom element and instantiated.\n     *\n     * This method is called by the ReactiveElement.observedAttributes getter.\n     * If you override the observedAttributes getter, you must either call\n     * super.observedAttributes to trigger finalization, or call finalize()\n     * yourself.\n     *\n     * @nocollapse\n     */\n    static finalize() {\n        if (this.hasOwnProperty(JSCompiler_renameProperty('finalized', this))) {\n            return;\n        }\n        this.finalized = true;\n        this.__prepare();\n        // Create properties from the static properties block:\n        if (this.hasOwnProperty(JSCompiler_renameProperty('properties', this))) {\n            const props = this.properties;\n            const propKeys = [\n                ...getOwnPropertyNames(props),\n                ...getOwnPropertySymbols(props),\n            ];\n            for (const p of propKeys) {\n                this.createProperty(p, props[p]);\n            }\n        }\n        // Create properties from standard decorator metadata:\n        const metadata = this[Symbol.metadata];\n        if (metadata !== null) {\n            const properties = litPropertyMetadata.get(metadata);\n            if (properties !== undefined) {\n                for (const [p, options] of properties) {\n                    this.elementProperties.set(p, options);\n                }\n            }\n        }\n        // Create the attribute-to-property map\n        this.__attributeToPropertyMap = new Map();\n        for (const [p, options] of this.elementProperties) {\n            const attr = this.__attributeNameForProperty(p, options);\n            if (attr !== undefined) {\n                this.__attributeToPropertyMap.set(attr, p);\n            }\n        }\n        this.elementStyles = this.finalizeStyles(this.styles);\n        if (DEV_MODE) {\n            if (this.hasOwnProperty('createProperty')) {\n                issueWarning('no-override-create-property', 'Overriding ReactiveElement.createProperty() is deprecated. ' +\n                    'The override will not be called with standard decorators');\n            }\n            if (this.hasOwnProperty('getPropertyDescriptor')) {\n                issueWarning('no-override-get-property-descriptor', 'Overriding ReactiveElement.getPropertyDescriptor() is deprecated. ' +\n                    'The override will not be called with standard decorators');\n            }\n        }\n    }\n    /**\n     * Takes the styles the user supplied via the `static styles` property and\n     * returns the array of styles to apply to the element.\n     * Override this method to integrate into a style management system.\n     *\n     * Styles are deduplicated preserving the _last_ instance in the list. This\n     * is a performance optimization to avoid duplicated styles that can occur\n     * especially when composing via subclassing. The last item is kept to try\n     * to preserve the cascade order with the assumption that it's most important\n     * that last added styles override previous styles.\n     *\n     * @nocollapse\n     * @category styles\n     */\n    static finalizeStyles(styles) {\n        const elementStyles = [];\n        if (Array.isArray(styles)) {\n            // Dedupe the flattened array in reverse order to preserve the last items.\n            // Casting to Array<unknown> works around TS error that\n            // appears to come from trying to flatten a type CSSResultArray.\n            const set = new Set(styles.flat(Infinity).reverse());\n            // Then preserve original order by adding the set items in reverse order.\n            for (const s of set) {\n                elementStyles.unshift(getCompatibleStyle(s));\n            }\n        }\n        else if (styles !== undefined) {\n            elementStyles.push(getCompatibleStyle(styles));\n        }\n        return elementStyles;\n    }\n    /**\n     * Returns the property name for the given attribute `name`.\n     * @nocollapse\n     */\n    static __attributeNameForProperty(name, options) {\n        const attribute = options.attribute;\n        return attribute === false\n            ? undefined\n            : typeof attribute === 'string'\n                ? attribute\n                : typeof name === 'string'\n                    ? name.toLowerCase()\n                    : undefined;\n    }\n    constructor() {\n        super();\n        this.__instanceProperties = undefined;\n        /**\n         * True if there is a pending update as a result of calling `requestUpdate()`.\n         * Should only be read.\n         * @category updates\n         */\n        this.isUpdatePending = false;\n        /**\n         * Is set to `true` after the first update. The element code cannot assume\n         * that `renderRoot` exists before the element `hasUpdated`.\n         * @category updates\n         */\n        this.hasUpdated = false;\n        /**\n         * Name of currently reflecting property\n         */\n        this.__reflectingProperty = null;\n        this.__initialize();\n    }\n    /**\n     * Internal only override point for customizing work done when elements\n     * are constructed.\n     */\n    __initialize() {\n        this.__updatePromise = new Promise((res) => (this.enableUpdating = res));\n        this._$changedProperties = new Map();\n        // This enqueues a microtask that ust run before the first update, so it\n        // must be called before requestUpdate()\n        this.__saveInstanceProperties();\n        // ensures first update will be caught by an early access of\n        // `updateComplete`\n        this.requestUpdate();\n        this.constructor._initializers?.forEach((i) => i(this));\n    }\n    /**\n     * Registers a `ReactiveController` to participate in the element's reactive\n     * update cycle. The element automatically calls into any registered\n     * controllers during its lifecycle callbacks.\n     *\n     * If the element is connected when `addController()` is called, the\n     * controller's `hostConnected()` callback will be immediately called.\n     * @category controllers\n     */\n    addController(controller) {\n        (this.__controllers ??= new Set()).add(controller);\n        // If a controller is added after the element has been connected,\n        // call hostConnected. Note, re-using existence of `renderRoot` here\n        // (which is set in connectedCallback) to avoid the need to track a\n        // first connected state.\n        if (this.renderRoot !== undefined && this.isConnected) {\n            controller.hostConnected?.();\n        }\n    }\n    /**\n     * Removes a `ReactiveController` from the element.\n     * @category controllers\n     */\n    removeController(controller) {\n        this.__controllers?.delete(controller);\n    }\n    /**\n     * Fixes any properties set on the instance before upgrade time.\n     * Otherwise these would shadow the accessor and break these properties.\n     * The properties are stored in a Map which is played back after the\n     * constructor runs. Note, on very old versions of Safari (<=9) or Chrome\n     * (<=41), properties created for native platform properties like (`id` or\n     * `name`) may not have default values set in the element constructor. On\n     * these browsers native properties appear on instances and therefore their\n     * default value will overwrite any element default (e.g. if the element sets\n     * this.id = 'id' in the constructor, the 'id' will become '' since this is\n     * the native platform default).\n     */\n    __saveInstanceProperties() {\n        const instanceProperties = new Map();\n        const elementProperties = this.constructor\n            .elementProperties;\n        for (const p of elementProperties.keys()) {\n            if (this.hasOwnProperty(p)) {\n                instanceProperties.set(p, this[p]);\n                delete this[p];\n            }\n        }\n        if (instanceProperties.size > 0) {\n            this.__instanceProperties = instanceProperties;\n        }\n    }\n    /**\n     * Returns the node into which the element should render and by default\n     * creates and returns an open shadowRoot. Implement to customize where the\n     * element's DOM is rendered. For example, to render into the element's\n     * childNodes, return `this`.\n     *\n     * @return Returns a node into which to render.\n     * @category rendering\n     */\n    createRenderRoot() {\n        const renderRoot = this.shadowRoot ??\n            this.attachShadow(this.constructor.shadowRootOptions);\n        adoptStyles(renderRoot, this.constructor.elementStyles);\n        return renderRoot;\n    }\n    /**\n     * On first connection, creates the element's renderRoot, sets up\n     * element styling, and enables updating.\n     * @category lifecycle\n     */\n    connectedCallback() {\n        // Create renderRoot before controllers `hostConnected`\n        this.renderRoot ??=\n            this.createRenderRoot();\n        this.enableUpdating(true);\n        this.__controllers?.forEach((c) => c.hostConnected?.());\n    }\n    /**\n     * Note, this method should be considered final and not overridden. It is\n     * overridden on the element instance with a function that triggers the first\n     * update.\n     * @category updates\n     */\n    enableUpdating(_requestedUpdate) { }\n    /**\n     * Allows for `super.disconnectedCallback()` in extensions while\n     * reserving the possibility of making non-breaking feature additions\n     * when disconnecting at some point in the future.\n     * @category lifecycle\n     */\n    disconnectedCallback() {\n        this.__controllers?.forEach((c) => c.hostDisconnected?.());\n    }\n    /**\n     * Synchronizes property values when attributes change.\n     *\n     * Specifically, when an attribute is set, the corresponding property is set.\n     * You should rarely need to implement this callback. If this method is\n     * overridden, `super.attributeChangedCallback(name, _old, value)` must be\n     * called.\n     *\n     * See [using the lifecycle callbacks](https://developer.mozilla.org/en-US/docs/Web/Web_Components/Using_custom_elements#using_the_lifecycle_callbacks)\n     * on MDN for more information about the `attributeChangedCallback`.\n     * @category attributes\n     */\n    attributeChangedCallback(name, _old, value) {\n        this._$attributeToProperty(name, value);\n    }\n    __propertyToAttribute(name, value) {\n        const elemProperties = this.constructor.elementProperties;\n        const options = elemProperties.get(name);\n        const attr = this.constructor.__attributeNameForProperty(name, options);\n        if (attr !== undefined && options.reflect === true) {\n            const converter = options.converter?.toAttribute !==\n                undefined\n                ? options.converter\n                : defaultConverter;\n            const attrValue = converter.toAttribute(value, options.type);\n            if (DEV_MODE &&\n                this.constructor.enabledWarnings.includes('migration') &&\n                attrValue === undefined) {\n                issueWarning('undefined-attribute-value', `The attribute value for the ${name} property is ` +\n                    `undefined on element ${this.localName}. The attribute will be ` +\n                    `removed, but in the previous version of \\`ReactiveElement\\`, ` +\n                    `the attribute would not have changed.`);\n            }\n            // Track if the property is being reflected to avoid\n            // setting the property again via `attributeChangedCallback`. Note:\n            // 1. this takes advantage of the fact that the callback is synchronous.\n            // 2. will behave incorrectly if multiple attributes are in the reaction\n            // stack at time of calling. However, since we process attributes\n            // in `update` this should not be possible (or an extreme corner case\n            // that we'd like to discover).\n            // mark state reflecting\n            this.__reflectingProperty = name;\n            if (attrValue == null) {\n                this.removeAttribute(attr);\n            }\n            else {\n                this.setAttribute(attr, attrValue);\n            }\n            // mark state not reflecting\n            this.__reflectingProperty = null;\n        }\n    }\n    /** @internal */\n    _$attributeToProperty(name, value) {\n        const ctor = this.constructor;\n        // Note, hint this as an `AttributeMap` so closure clearly understands\n        // the type; it has issues with tracking types through statics\n        const propName = ctor.__attributeToPropertyMap.get(name);\n        // Use tracking info to avoid reflecting a property value to an attribute\n        // if it was just set because the attribute changed.\n        if (propName !== undefined && this.__reflectingProperty !== propName) {\n            const options = ctor.getPropertyOptions(propName);\n            const converter = typeof options.converter === 'function'\n                ? { fromAttribute: options.converter }\n                : options.converter?.fromAttribute !== undefined\n                    ? options.converter\n                    : defaultConverter;\n            // mark state reflecting\n            this.__reflectingProperty = propName;\n            this[propName] = converter.fromAttribute(value, options.type\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            );\n            // mark state not reflecting\n            this.__reflectingProperty = null;\n        }\n    }\n    /**\n     * Requests an update which is processed asynchronously. This should be called\n     * when an element should update based on some state not triggered by setting\n     * a reactive property. In this case, pass no arguments. It should also be\n     * called when manually implementing a property setter. In this case, pass the\n     * property `name` and `oldValue` to ensure that any configured property\n     * options are honored.\n     *\n     * @param name name of requesting property\n     * @param oldValue old value of requesting property\n     * @param options property options to use instead of the previously\n     *     configured options\n     * @category updates\n     */\n    requestUpdate(name, oldValue, options) {\n        // If we have a property key, perform property update steps.\n        if (name !== undefined) {\n            if (DEV_MODE && name instanceof Event) {\n                issueWarning(``, `The requestUpdate() method was called with an Event as the property name. This is probably a mistake caused by binding this.requestUpdate as an event listener. Instead bind a function that will call it with no arguments: () => this.requestUpdate()`);\n            }\n            options ??= this.constructor.getPropertyOptions(name);\n            const hasChanged = options.hasChanged ?? notEqual;\n            const newValue = this[name];\n            if (hasChanged(newValue, oldValue)) {\n                this._$changeProperty(name, oldValue, options);\n            }\n            else {\n                // Abort the request if the property should not be considered changed.\n                return;\n            }\n        }\n        if (this.isUpdatePending === false) {\n            this.__updatePromise = this.__enqueueUpdate();\n        }\n    }\n    /**\n     * @internal\n     */\n    _$changeProperty(name, oldValue, options) {\n        // TODO (justinfagnani): Create a benchmark of Map.has() + Map.set(\n        // vs just Map.set()\n        if (!this._$changedProperties.has(name)) {\n            this._$changedProperties.set(name, oldValue);\n        }\n        // Add to reflecting properties set.\n        // Note, it's important that every change has a chance to add the\n        // property to `__reflectingProperties`. This ensures setting\n        // attribute + property reflects correctly.\n        if (options.reflect === true && this.__reflectingProperty !== name) {\n            (this.__reflectingProperties ??= new Set()).add(name);\n        }\n    }\n    /**\n     * Sets up the element to asynchronously update.\n     */\n    async __enqueueUpdate() {\n        this.isUpdatePending = true;\n        try {\n            // Ensure any previous update has resolved before updating.\n            // This `await` also ensures that property changes are batched.\n            await this.__updatePromise;\n        }\n        catch (e) {\n            // Refire any previous errors async so they do not disrupt the update\n            // cycle. Errors are refired so developers have a chance to observe\n            // them, and this can be done by implementing\n            // `window.onunhandledrejection`.\n            Promise.reject(e);\n        }\n        const result = this.scheduleUpdate();\n        // If `scheduleUpdate` returns a Promise, we await it. This is done to\n        // enable coordinating updates with a scheduler. Note, the result is\n        // checked to avoid delaying an additional microtask unless we need to.\n        if (result != null) {\n            await result;\n        }\n        return !this.isUpdatePending;\n    }\n    /**\n     * Schedules an element update. You can override this method to change the\n     * timing of updates by returning a Promise. The update will await the\n     * returned Promise, and you should resolve the Promise to allow the update\n     * to proceed. If this method is overridden, `super.scheduleUpdate()`\n     * must be called.\n     *\n     * For instance, to schedule updates to occur just before the next frame:\n     *\n     * ```ts\n     * override protected async scheduleUpdate(): Promise<unknown> {\n     *   await new Promise((resolve) => requestAnimationFrame(() => resolve()));\n     *   super.scheduleUpdate();\n     * }\n     * ```\n     * @category updates\n     */\n    scheduleUpdate() {\n        const result = this.performUpdate();\n        if (DEV_MODE &&\n            this.constructor.enabledWarnings.includes('async-perform-update') &&\n            typeof result?.then ===\n                'function') {\n            issueWarning('async-perform-update', `Element ${this.localName} returned a Promise from performUpdate(). ` +\n                `This behavior is deprecated and will be removed in a future ` +\n                `version of ReactiveElement.`);\n        }\n        return result;\n    }\n    /**\n     * Performs an element update. Note, if an exception is thrown during the\n     * update, `firstUpdated` and `updated` will not be called.\n     *\n     * Call `performUpdate()` to immediately process a pending update. This should\n     * generally not be needed, but it can be done in rare cases when you need to\n     * update synchronously.\n     *\n     * @category updates\n     */\n    performUpdate() {\n        // Abort any update if one is not pending when this is called.\n        // This can happen if `performUpdate` is called early to \"flush\"\n        // the update.\n        if (!this.isUpdatePending) {\n            return;\n        }\n        debugLogEvent?.({ kind: 'update' });\n        if (!this.hasUpdated) {\n            // Create renderRoot before first update. This occurs in `connectedCallback`\n            // but is done here to support out of tree calls to `enableUpdating`/`performUpdate`.\n            this.renderRoot ??=\n                this.createRenderRoot();\n            if (DEV_MODE) {\n                // Produce warning if any reactive properties on the prototype are\n                // shadowed by class fields. Instance fields set before upgrade are\n                // deleted by this point, so any own property is caused by class field\n                // initialization in the constructor.\n                const ctor = this.constructor;\n                const shadowedProperties = [...ctor.elementProperties.keys()].filter((p) => this.hasOwnProperty(p) && p in getPrototypeOf(this));\n                if (shadowedProperties.length) {\n                    throw new Error(`The following properties on element ${this.localName} will not ` +\n                        `trigger updates as expected because they are set using class ` +\n                        `fields: ${shadowedProperties.join(', ')}. ` +\n                        `Native class fields and some compiled output will overwrite ` +\n                        `accessors used for detecting changes. See ` +\n                        `https://lit.dev/msg/class-field-shadowing ` +\n                        `for more information.`);\n                }\n            }\n            // Mixin instance properties once, if they exist.\n            if (this.__instanceProperties) {\n                // TODO (justinfagnani): should we use the stored value? Could a new value\n                // have been set since we stored the own property value?\n                for (const [p, value] of this.__instanceProperties) {\n                    this[p] = value;\n                }\n                this.__instanceProperties = undefined;\n            }\n            // Trigger initial value reflection and populate the initial\n            // changedProperties map, but only for the case of experimental\n            // decorators on accessors, which will not have already populated the\n            // changedProperties map. We can't know if these accessors had\n            // initializers, so we just set them anyway - a difference from\n            // experimental decorators on fields and standard decorators on\n            // auto-accessors.\n            // For context why experimentalDecorators with auto accessors are handled\n            // specifically also see:\n            // https://github.com/lit/lit/pull/4183#issuecomment-1711959635\n            const elementProperties = this.constructor\n                .elementProperties;\n            if (elementProperties.size > 0) {\n                for (const [p, options] of elementProperties) {\n                    if (options.wrapped === true &&\n                        !this._$changedProperties.has(p) &&\n                        this[p] !== undefined) {\n                        this._$changeProperty(p, this[p], options);\n                    }\n                }\n            }\n        }\n        let shouldUpdate = false;\n        const changedProperties = this._$changedProperties;\n        try {\n            shouldUpdate = this.shouldUpdate(changedProperties);\n            if (shouldUpdate) {\n                this.willUpdate(changedProperties);\n                this.__controllers?.forEach((c) => c.hostUpdate?.());\n                this.update(changedProperties);\n            }\n            else {\n                this.__markUpdated();\n            }\n        }\n        catch (e) {\n            // Prevent `firstUpdated` and `updated` from running when there's an\n            // update exception.\n            shouldUpdate = false;\n            // Ensure element can accept additional updates after an exception.\n            this.__markUpdated();\n            throw e;\n        }\n        // The update is no longer considered pending and further updates are now allowed.\n        if (shouldUpdate) {\n            this._$didUpdate(changedProperties);\n        }\n    }\n    /**\n     * Invoked before `update()` to compute values needed during the update.\n     *\n     * Implement `willUpdate` to compute property values that depend on other\n     * properties and are used in the rest of the update process.\n     *\n     * ```ts\n     * willUpdate(changedProperties) {\n     *   // only need to check changed properties for an expensive computation.\n     *   if (changedProperties.has('firstName') || changedProperties.has('lastName')) {\n     *     this.sha = computeSHA(`${this.firstName} ${this.lastName}`);\n     *   }\n     * }\n     *\n     * render() {\n     *   return html`SHA: ${this.sha}`;\n     * }\n     * ```\n     *\n     * @category updates\n     */\n    willUpdate(_changedProperties) { }\n    // Note, this is an override point for polyfill-support.\n    // @internal\n    _$didUpdate(changedProperties) {\n        this.__controllers?.forEach((c) => c.hostUpdated?.());\n        if (!this.hasUpdated) {\n            this.hasUpdated = true;\n            this.firstUpdated(changedProperties);\n        }\n        this.updated(changedProperties);\n        if (DEV_MODE &&\n            this.isUpdatePending &&\n            this.constructor.enabledWarnings.includes('change-in-update')) {\n            issueWarning('change-in-update', `Element ${this.localName} scheduled an update ` +\n                `(generally because a property was set) ` +\n                `after an update completed, causing a new update to be scheduled. ` +\n                `This is inefficient and should be avoided unless the next update ` +\n                `can only be scheduled as a side effect of the previous update.`);\n        }\n    }\n    __markUpdated() {\n        this._$changedProperties = new Map();\n        this.isUpdatePending = false;\n    }\n    /**\n     * Returns a Promise that resolves when the element has completed updating.\n     * The Promise value is a boolean that is `true` if the element completed the\n     * update without triggering another update. The Promise result is `false` if\n     * a property was set inside `updated()`. If the Promise is rejected, an\n     * exception was thrown during the update.\n     *\n     * To await additional asynchronous work, override the `getUpdateComplete`\n     * method. For example, it is sometimes useful to await a rendered element\n     * before fulfilling this Promise. To do this, first await\n     * `super.getUpdateComplete()`, then any subsequent state.\n     *\n     * @return A promise of a boolean that resolves to true if the update completed\n     *     without triggering another update.\n     * @category updates\n     */\n    get updateComplete() {\n        return this.getUpdateComplete();\n    }\n    /**\n     * Override point for the `updateComplete` promise.\n     *\n     * It is not safe to override the `updateComplete` getter directly due to a\n     * limitation in TypeScript which means it is not possible to call a\n     * superclass getter (e.g. `super.updateComplete.then(...)`) when the target\n     * language is ES5 (https://github.com/microsoft/TypeScript/issues/338).\n     * This method should be overridden instead. For example:\n     *\n     * ```ts\n     * class MyElement extends LitElement {\n     *   override async getUpdateComplete() {\n     *     const result = await super.getUpdateComplete();\n     *     await this._myChild.updateComplete;\n     *     return result;\n     *   }\n     * }\n     * ```\n     *\n     * @return A promise of a boolean that resolves to true if the update completed\n     *     without triggering another update.\n     * @category updates\n     */\n    getUpdateComplete() {\n        return this.__updatePromise;\n    }\n    /**\n     * Controls whether or not `update()` should be called when the element requests\n     * an update. By default, this method always returns `true`, but this can be\n     * customized to control when to update.\n     *\n     * @param _changedProperties Map of changed properties with old values\n     * @category updates\n     */\n    shouldUpdate(_changedProperties) {\n        return true;\n    }\n    /**\n     * Updates the element. This method reflects property values to attributes.\n     * It can be overridden to render and keep updated element DOM.\n     * Setting properties inside this method will *not* trigger\n     * another update.\n     *\n     * @param _changedProperties Map of changed properties with old values\n     * @category updates\n     */\n    update(_changedProperties) {\n        // The forEach() expression will only run when when __reflectingProperties is\n        // defined, and it returns undefined, setting __reflectingProperties to\n        // undefined\n        this.__reflectingProperties &&= this.__reflectingProperties.forEach((p) => this.__propertyToAttribute(p, this[p]));\n        this.__markUpdated();\n    }\n    /**\n     * Invoked whenever the element is updated. Implement to perform\n     * post-updating tasks via DOM APIs, for example, focusing an element.\n     *\n     * Setting properties inside this method will trigger the element to update\n     * again after this update cycle completes.\n     *\n     * @param _changedProperties Map of changed properties with old values\n     * @category updates\n     */\n    updated(_changedProperties) { }\n    /**\n     * Invoked when the element is first updated. Implement to perform one time\n     * work on the element after update.\n     *\n     * ```ts\n     * firstUpdated() {\n     *   this.renderRoot.getElementById('my-text-area').focus();\n     * }\n     * ```\n     *\n     * Setting properties inside this method will trigger the element to update\n     * again after this update cycle completes.\n     *\n     * @param _changedProperties Map of changed properties with old values\n     * @category updates\n     */\n    firstUpdated(_changedProperties) { }\n}\n/**\n * Memoized list of all element styles.\n * Created lazily on user subclasses when finalizing the class.\n * @nocollapse\n * @category styles\n */\nReactiveElement.elementStyles = [];\n/**\n * Options used when calling `attachShadow`. Set this property to customize\n * the options for the shadowRoot; for example, to create a closed\n * shadowRoot: `{mode: 'closed'}`.\n *\n * Note, these options are used in `createRenderRoot`. If this method\n * is customized, options should be respected if possible.\n * @nocollapse\n * @category rendering\n */\nReactiveElement.shadowRootOptions = { mode: 'open' };\n// Assigned here to work around a jscompiler bug with static fields\n// when compiling to ES5.\n// https://github.com/google/closure-compiler/issues/3177\nReactiveElement[JSCompiler_renameProperty('elementProperties', ReactiveElement)] = new Map();\nReactiveElement[JSCompiler_renameProperty('finalized', ReactiveElement)] = new Map();\n// Apply polyfills if available\npolyfillSupport?.({ ReactiveElement });\n// Dev mode warnings...\nif (DEV_MODE) {\n    // Default warning set.\n    ReactiveElement.enabledWarnings = [\n        'change-in-update',\n        'async-perform-update',\n    ];\n    const ensureOwnWarnings = function (ctor) {\n        if (!ctor.hasOwnProperty(JSCompiler_renameProperty('enabledWarnings', ctor))) {\n            ctor.enabledWarnings = ctor.enabledWarnings.slice();\n        }\n    };\n    ReactiveElement.enableWarning = function (warning) {\n        ensureOwnWarnings(this);\n        if (!this.enabledWarnings.includes(warning)) {\n            this.enabledWarnings.push(warning);\n        }\n    };\n    ReactiveElement.disableWarning = function (warning) {\n        ensureOwnWarnings(this);\n        const i = this.enabledWarnings.indexOf(warning);\n        if (i >= 0) {\n            this.enabledWarnings.splice(i, 1);\n        }\n    };\n}\n// IMPORTANT: do not change the property name or the assignment expression.\n// This line will be used in regexes to search for ReactiveElement usage.\n(global.reactiveElementVersions ??= []).push('2.0.4');\nif (DEV_MODE && global.reactiveElementVersions.length > 1) {\n    issueWarning('multiple-versions', `Multiple versions of Lit loaded. Loading multiple versions ` +\n        `is not recommended.`);\n}\n//# sourceMappingURL=reactive-element.js.map","/**\n * @license\n * Copyright 2018 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { __decorate } from \"tslib\";\nimport { customElement } from 'lit/decorators.js';\nimport { Checkbox } from './internal/checkbox.js';\nimport { styles } from './internal/checkbox-styles.js';\n/**\n * @summary Checkboxes allow users to select one or more items from a set.\n * Checkboxes can turn an option on or off.\n *\n * @description\n * Use checkboxes to:\n * - Select one or more options from a list\n * - Present a list containing sub-selections\n * - Turn an item on or off in a desktop environment\n *\n * @final\n * @suppress {visibility}\n */\nlet MdCheckbox = class MdCheckbox extends Checkbox {\n};\nMdCheckbox.styles = [styles];\nMdCheckbox = __decorate([\n    customElement('md-checkbox')\n], MdCheckbox);\nexport { MdCheckbox };\n//# sourceMappingURL=checkbox.js.map","/**\n * @license\n * Copyright 2024 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n// Generated stylesheet for ./checkbox/internal/checkbox-styles.css.\nimport { css } from 'lit';\nexport const styles = css `:host{border-start-start-radius:var(--md-checkbox-container-shape-start-start, var(--md-checkbox-container-shape, 2px));border-start-end-radius:var(--md-checkbox-container-shape-start-end, var(--md-checkbox-container-shape, 2px));border-end-end-radius:var(--md-checkbox-container-shape-end-end, var(--md-checkbox-container-shape, 2px));border-end-start-radius:var(--md-checkbox-container-shape-end-start, var(--md-checkbox-container-shape, 2px));display:inline-flex;height:var(--md-checkbox-container-size, 18px);position:relative;vertical-align:top;width:var(--md-checkbox-container-size, 18px);-webkit-tap-highlight-color:rgba(0,0,0,0);cursor:pointer}:host([disabled]){cursor:default}:host([touch-target=wrapper]){margin:max(0px,(48px - var(--md-checkbox-container-size, 18px))/2)}md-focus-ring{height:44px;inset:unset;width:44px}input{appearance:none;height:48px;margin:0;opacity:0;outline:none;position:absolute;width:48px;z-index:1;cursor:inherit}:host([touch-target=none]) input{height:100%;width:100%}.container{border-radius:inherit;display:flex;height:100%;place-content:center;place-items:center;position:relative;width:100%}.outline,.background,.icon{inset:0;position:absolute}.outline,.background{border-radius:inherit}.outline{border-color:var(--md-checkbox-outline-color, var(--md-sys-color-on-surface-variant, #49454f));border-style:solid;border-width:var(--md-checkbox-outline-width, 2px);box-sizing:border-box}.background{background-color:var(--md-checkbox-selected-container-color, var(--md-sys-color-primary, #6750a4))}.background,.icon{opacity:0;transition-duration:150ms,50ms;transition-property:transform,opacity;transition-timing-function:cubic-bezier(0.3, 0, 0.8, 0.15),linear;transform:scale(0.6)}:where(.selected) :is(.background,.icon){opacity:1;transition-duration:350ms,50ms;transition-timing-function:cubic-bezier(0.05, 0.7, 0.1, 1),linear;transform:scale(1)}md-ripple{border-radius:var(--md-checkbox-state-layer-shape, var(--md-sys-shape-corner-full, 9999px));height:var(--md-checkbox-state-layer-size, 40px);inset:unset;width:var(--md-checkbox-state-layer-size, 40px);--md-ripple-hover-color: var(--md-checkbox-hover-state-layer-color, var(--md-sys-color-on-surface, #1d1b20));--md-ripple-hover-opacity: var(--md-checkbox-hover-state-layer-opacity, 0.08);--md-ripple-pressed-color: var(--md-checkbox-pressed-state-layer-color, var(--md-sys-color-primary, #6750a4));--md-ripple-pressed-opacity: var(--md-checkbox-pressed-state-layer-opacity, 0.12)}.selected md-ripple{--md-ripple-hover-color: var(--md-checkbox-selected-hover-state-layer-color, var(--md-sys-color-primary, #6750a4));--md-ripple-hover-opacity: var(--md-checkbox-selected-hover-state-layer-opacity, 0.08);--md-ripple-pressed-color: var(--md-checkbox-selected-pressed-state-layer-color, var(--md-sys-color-on-surface, #1d1b20));--md-ripple-pressed-opacity: var(--md-checkbox-selected-pressed-state-layer-opacity, 0.12)}.icon{fill:var(--md-checkbox-selected-icon-color, var(--md-sys-color-on-primary, #fff));height:var(--md-checkbox-icon-size, 18px);width:var(--md-checkbox-icon-size, 18px)}.mark.short{height:2px;transition-property:transform,height;width:2px}.mark.long{height:2px;transition-property:transform,width;width:10px}.mark{animation-duration:150ms;animation-timing-function:cubic-bezier(0.3, 0, 0.8, 0.15);transition-duration:150ms;transition-timing-function:cubic-bezier(0.3, 0, 0.8, 0.15)}.selected .mark{animation-duration:350ms;animation-timing-function:cubic-bezier(0.05, 0.7, 0.1, 1);transition-duration:350ms;transition-timing-function:cubic-bezier(0.05, 0.7, 0.1, 1)}.checked .mark,.prev-checked.unselected .mark{transform:scaleY(-1) translate(7px, -14px) rotate(45deg)}.checked .mark.short,.prev-checked.unselected .mark.short{height:5.6568542495px}.checked .mark.long,.prev-checked.unselected .mark.long{width:11.313708499px}.indeterminate .mark,.prev-indeterminate.unselected .mark{transform:scaleY(-1) translate(4px, -10px) rotate(0deg)}.prev-unselected .mark{transition-property:none}.prev-unselected.checked .mark.long{animation-name:prev-unselected-to-checked}@keyframes prev-unselected-to-checked{from{width:0}}:where(:hover) .outline{border-color:var(--md-checkbox-hover-outline-color, var(--md-sys-color-on-surface, #1d1b20));border-width:var(--md-checkbox-hover-outline-width, 2px)}:where(:hover) .background{background:var(--md-checkbox-selected-hover-container-color, var(--md-sys-color-primary, #6750a4))}:where(:hover) .icon{fill:var(--md-checkbox-selected-hover-icon-color, var(--md-sys-color-on-primary, #fff))}:where(:focus-within) .outline{border-color:var(--md-checkbox-focus-outline-color, var(--md-sys-color-on-surface, #1d1b20));border-width:var(--md-checkbox-focus-outline-width, 2px)}:where(:focus-within) .background{background:var(--md-checkbox-selected-focus-container-color, var(--md-sys-color-primary, #6750a4))}:where(:focus-within) .icon{fill:var(--md-checkbox-selected-focus-icon-color, var(--md-sys-color-on-primary, #fff))}:where(:active) .outline{border-color:var(--md-checkbox-pressed-outline-color, var(--md-sys-color-on-surface, #1d1b20));border-width:var(--md-checkbox-pressed-outline-width, 2px)}:where(:active) .background{background:var(--md-checkbox-selected-pressed-container-color, var(--md-sys-color-primary, #6750a4))}:where(:active) .icon{fill:var(--md-checkbox-selected-pressed-icon-color, var(--md-sys-color-on-primary, #fff))}:where(.disabled,.prev-disabled) :is(.background,.icon,.mark){animation-duration:0s;transition-duration:0s}:where(.disabled) .outline{border-color:var(--md-checkbox-disabled-outline-color, var(--md-sys-color-on-surface, #1d1b20));border-width:var(--md-checkbox-disabled-outline-width, 2px);opacity:var(--md-checkbox-disabled-container-opacity, 0.38)}:where(.selected.disabled) .outline{visibility:hidden}:where(.selected.disabled) .background{background:var(--md-checkbox-selected-disabled-container-color, var(--md-sys-color-on-surface, #1d1b20));opacity:var(--md-checkbox-selected-disabled-container-opacity, 0.38)}:where(.disabled) .icon{fill:var(--md-checkbox-selected-disabled-icon-color, var(--md-sys-color-surface, #fef7ff))}@media(forced-colors: active){.background{background-color:CanvasText}.selected.disabled .background{background-color:GrayText;opacity:1}.outline{border-color:CanvasText}.disabled .outline{border-color:GrayText;opacity:1}.icon{fill:Canvas}}\n`;\n//# sourceMappingURL=checkbox-styles.js.map","/**\n * @license\n * Copyright 2019 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { __decorate } from \"tslib\";\nimport '../../focus/md-focus-ring.js';\nimport '../../ripple/ripple.js';\nimport { html, isServer, LitElement, nothing } from 'lit';\nimport { property, query, state } from 'lit/decorators.js';\nimport { classMap } from 'lit/directives/class-map.js';\nimport { mixinDelegatesAria } from '../../internal/aria/delegate.js';\nimport { dispatchActivationClick, isActivationClick, } from '../../internal/events/form-label-activation.js';\nimport { redispatchEvent } from '../../internal/events/redispatch-event.js';\nimport { createValidator, getValidityAnchor, mixinConstraintValidation, } from '../../labs/behaviors/constraint-validation.js';\nimport { mixinElementInternals } from '../../labs/behaviors/element-internals.js';\nimport { getFormState, getFormValue, mixinFormAssociated, } from '../../labs/behaviors/form-associated.js';\nimport { CheckboxValidator } from '../../labs/behaviors/validators/checkbox-validator.js';\n// Separate variable needed for closure.\nconst checkboxBaseClass = mixinDelegatesAria(mixinConstraintValidation(mixinFormAssociated(mixinElementInternals(LitElement))));\n/**\n * A checkbox component.\n *\n *\n * @fires change {Event} The native `change` event on\n * [`<input>`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/change_event)\n * --bubbles\n * @fires input {InputEvent} The native `input` event on\n * [`<input>`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/input_event)\n * --bubbles --composed\n */\nexport class Checkbox extends checkboxBaseClass {\n    constructor() {\n        super();\n        /**\n         * Whether or not the checkbox is selected.\n         */\n        this.checked = false;\n        /**\n         * Whether or not the checkbox is indeterminate.\n         *\n         * https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/checkbox#indeterminate_state_checkboxes\n         */\n        this.indeterminate = false;\n        /**\n         * When true, require the checkbox to be selected when participating in\n         * form submission.\n         *\n         * https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/checkbox#validation\n         */\n        this.required = false;\n        /**\n         * The value of the checkbox that is submitted with a form when selected.\n         *\n         * https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/checkbox#value\n         */\n        this.value = 'on';\n        this.prevChecked = false;\n        this.prevDisabled = false;\n        this.prevIndeterminate = false;\n        if (!isServer) {\n            this.addEventListener('click', (event) => {\n                if (!isActivationClick(event) || !this.input) {\n                    return;\n                }\n                this.focus();\n                dispatchActivationClick(this.input);\n            });\n        }\n    }\n    update(changed) {\n        if (changed.has('checked') ||\n            changed.has('disabled') ||\n            changed.has('indeterminate')) {\n            this.prevChecked = changed.get('checked') ?? this.checked;\n            this.prevDisabled = changed.get('disabled') ?? this.disabled;\n            this.prevIndeterminate =\n                changed.get('indeterminate') ?? this.indeterminate;\n        }\n        super.update(changed);\n    }\n    render() {\n        const prevNone = !this.prevChecked && !this.prevIndeterminate;\n        const prevChecked = this.prevChecked && !this.prevIndeterminate;\n        const prevIndeterminate = this.prevIndeterminate;\n        const isChecked = this.checked && !this.indeterminate;\n        const isIndeterminate = this.indeterminate;\n        const containerClasses = classMap({\n            'disabled': this.disabled,\n            'selected': isChecked || isIndeterminate,\n            'unselected': !isChecked && !isIndeterminate,\n            'checked': isChecked,\n            'indeterminate': isIndeterminate,\n            'prev-unselected': prevNone,\n            'prev-checked': prevChecked,\n            'prev-indeterminate': prevIndeterminate,\n            'prev-disabled': this.prevDisabled,\n        });\n        // Needed for closure conformance\n        const { ariaLabel, ariaInvalid } = this;\n        // Note: <input> needs to be rendered before the <svg> for\n        // form.reportValidity() to work in Chrome.\n        return html `\n      <div class=\"container ${containerClasses}\">\n        <input\n          type=\"checkbox\"\n          id=\"input\"\n          aria-checked=${isIndeterminate ? 'mixed' : nothing}\n          aria-label=${ariaLabel || nothing}\n          aria-invalid=${ariaInvalid || nothing}\n          ?disabled=${this.disabled}\n          ?required=${this.required}\n          .indeterminate=${this.indeterminate}\n          .checked=${this.checked}\n          @input=${this.handleInput}\n          @change=${this.handleChange} />\n\n        <div class=\"outline\"></div>\n        <div class=\"background\"></div>\n        <md-focus-ring part=\"focus-ring\" for=\"input\"></md-focus-ring>\n        <md-ripple for=\"input\" ?disabled=${this.disabled}></md-ripple>\n        <svg class=\"icon\" viewBox=\"0 0 18 18\" aria-hidden=\"true\">\n          <rect class=\"mark short\" />\n          <rect class=\"mark long\" />\n        </svg>\n      </div>\n    `;\n    }\n    handleInput(event) {\n        const target = event.target;\n        this.checked = target.checked;\n        this.indeterminate = target.indeterminate;\n        // <input> 'input' event bubbles and is composed, don't re-dispatch it.\n    }\n    handleChange(event) {\n        // <input> 'change' event is not composed, re-dispatch it.\n        redispatchEvent(this, event);\n    }\n    [getFormValue]() {\n        if (!this.checked || this.indeterminate) {\n            return null;\n        }\n        return this.value;\n    }\n    [getFormState]() {\n        return String(this.checked);\n    }\n    formResetCallback() {\n        // The checked property does not reflect, so the original attribute set by\n        // the user is used to determine the default value.\n        this.checked = this.hasAttribute('checked');\n    }\n    formStateRestoreCallback(state) {\n        this.checked = state === 'true';\n    }\n    [createValidator]() {\n        return new CheckboxValidator(() => this);\n    }\n    [getValidityAnchor]() {\n        return this.input;\n    }\n}\n/** @nocollapse */\nCheckbox.shadowRootOptions = {\n    ...LitElement.shadowRootOptions,\n    delegatesFocus: true,\n};\n__decorate([\n    property({ type: Boolean })\n], Checkbox.prototype, \"checked\", void 0);\n__decorate([\n    property({ type: Boolean })\n], Checkbox.prototype, \"indeterminate\", void 0);\n__decorate([\n    property({ type: Boolean })\n], Checkbox.prototype, \"required\", void 0);\n__decorate([\n    property()\n], Checkbox.prototype, \"value\", void 0);\n__decorate([\n    state()\n], Checkbox.prototype, \"prevChecked\", void 0);\n__decorate([\n    state()\n], Checkbox.prototype, \"prevDisabled\", void 0);\n__decorate([\n    state()\n], Checkbox.prototype, \"prevIndeterminate\", void 0);\n__decorate([\n    query('input')\n], Checkbox.prototype, \"input\", void 0);\n//# sourceMappingURL=checkbox.js.map","/**\n * @license\n * Copyright 2022 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { __decorate } from \"tslib\";\nimport { customElement } from 'lit/decorators.js';\nimport { Elevation } from './internal/elevation.js';\nimport { styles } from './internal/elevation-styles.js';\n/**\n * The `<md-elevation>` custom element with default styles.\n *\n * Elevation is the relative distance between two surfaces along the z-axis.\n *\n * @final\n * @suppress {visibility}\n */\nlet MdElevation = class MdElevation extends Elevation {\n};\nMdElevation.styles = [styles];\nMdElevation = __decorate([\n    customElement('md-elevation')\n], MdElevation);\nexport { MdElevation };\n//# sourceMappingURL=elevation.js.map","/**\n * @license\n * Copyright 2024 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n// Generated stylesheet for ./elevation/internal/elevation-styles.css.\nimport { css } from 'lit';\nexport const styles = css `:host,.shadow,.shadow::before,.shadow::after{border-radius:inherit;inset:0;position:absolute;transition-duration:inherit;transition-property:inherit;transition-timing-function:inherit}:host{display:flex;pointer-events:none;transition-property:box-shadow,opacity}.shadow::before,.shadow::after{content:\"\";transition-property:box-shadow,opacity;--_level: var(--md-elevation-level, 0);--_shadow-color: var(--md-elevation-shadow-color, var(--md-sys-color-shadow, #000))}.shadow::before{box-shadow:0px calc(1px*(clamp(0,var(--_level),1) + clamp(0,var(--_level) - 3,1) + 2*clamp(0,var(--_level) - 4,1))) calc(1px*(2*clamp(0,var(--_level),1) + clamp(0,var(--_level) - 2,1) + clamp(0,var(--_level) - 4,1))) 0px var(--_shadow-color);opacity:.3}.shadow::after{box-shadow:0px calc(1px*(clamp(0,var(--_level),1) + clamp(0,var(--_level) - 1,1) + 2*clamp(0,var(--_level) - 2,3))) calc(1px*(3*clamp(0,var(--_level),2) + 2*clamp(0,var(--_level) - 2,3))) calc(1px*(clamp(0,var(--_level),4) + 2*clamp(0,var(--_level) - 4,1))) var(--_shadow-color);opacity:.15}\n`;\n//# sourceMappingURL=elevation-styles.js.map","/**\n * @license\n * Copyright 2022 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { html, LitElement } from 'lit';\n/**\n * A component for elevation.\n */\nexport class Elevation extends LitElement {\n    connectedCallback() {\n        super.connectedCallback();\n        // Needed for VoiceOver, which will create a \"group\" if the element is a\n        // sibling to other content.\n        this.setAttribute('aria-hidden', 'true');\n    }\n    render() {\n        return html `<span class=\"shadow\"></span>`;\n    }\n}\n//# sourceMappingURL=elevation.js.map","/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { __decorate } from \"tslib\";\nimport { customElement } from 'lit/decorators.js';\nimport { FilledField } from './internal/filled-field.js';\nimport { styles as filledStyles } from './internal/filled-styles.js';\nimport { styles as sharedStyles } from './internal/shared-styles.js';\n/**\n * TODO(b/228525797): add docs\n * @final\n * @suppress {visibility}\n */\nlet MdFilledField = class MdFilledField extends FilledField {\n};\nMdFilledField.styles = [sharedStyles, filledStyles];\nMdFilledField = __decorate([\n    customElement('md-filled-field')\n], MdFilledField);\nexport { MdFilledField };\n//# sourceMappingURL=filled-field.js.map","/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { __decorate } from \"tslib\";\nimport { html, LitElement, nothing, render, } from 'lit';\nimport { property, query, queryAssignedElements, state } from 'lit/decorators.js';\nimport { classMap } from 'lit/directives/class-map.js';\nimport { EASING } from '../../internal/motion/animation.js';\n/**\n * A field component.\n */\nexport class Field extends LitElement {\n    constructor() {\n        super(...arguments);\n        this.disabled = false;\n        this.error = false;\n        this.focused = false;\n        this.label = '';\n        this.noAsterisk = false;\n        this.populated = false;\n        this.required = false;\n        this.resizable = false;\n        this.supportingText = '';\n        this.errorText = '';\n        this.count = -1;\n        this.max = -1;\n        /**\n         * Whether or not the field has leading content.\n         */\n        this.hasStart = false;\n        /**\n         * Whether or not the field has trailing content.\n         */\n        this.hasEnd = false;\n        this.isAnimating = false;\n        /**\n         * When set to true, the error text's `role=\"alert\"` will be removed, then\n         * re-added after an animation frame. This will re-announce an error message\n         * to screen readers.\n         */\n        this.refreshErrorAlert = false;\n        this.disableTransitions = false;\n    }\n    get counterText() {\n        // Count and max are typed as number, but can be set to null when Lit removes\n        // their attributes. These getters coerce back to a number for calculations.\n        const countAsNumber = this.count ?? -1;\n        const maxAsNumber = this.max ?? -1;\n        // Counter does not show if count is negative, or max is negative or 0.\n        if (countAsNumber < 0 || maxAsNumber <= 0) {\n            return '';\n        }\n        return `${countAsNumber} / ${maxAsNumber}`;\n    }\n    get supportingOrErrorText() {\n        return this.error && this.errorText ? this.errorText : this.supportingText;\n    }\n    /**\n     * Re-announces the field's error supporting text to screen readers.\n     *\n     * Error text announces to screen readers anytime it is visible and changes.\n     * Use the method to re-announce the message when the text has not changed,\n     * but announcement is still needed (such as for `reportValidity()`).\n     */\n    reannounceError() {\n        this.refreshErrorAlert = true;\n    }\n    update(props) {\n        // Client-side property updates\n        const isDisabledChanging = props.has('disabled') && props.get('disabled') !== undefined;\n        if (isDisabledChanging) {\n            this.disableTransitions = true;\n        }\n        // When disabling, remove focus styles if focused.\n        if (this.disabled && this.focused) {\n            props.set('focused', true);\n            this.focused = false;\n        }\n        // Animate if focused or populated change.\n        this.animateLabelIfNeeded({\n            wasFocused: props.get('focused'),\n            wasPopulated: props.get('populated'),\n        });\n        super.update(props);\n    }\n    render() {\n        const floatingLabel = this.renderLabel(/*isFloating*/ true);\n        const restingLabel = this.renderLabel(/*isFloating*/ false);\n        const outline = this.renderOutline?.(floatingLabel);\n        const classes = {\n            'disabled': this.disabled,\n            'disable-transitions': this.disableTransitions,\n            'error': this.error && !this.disabled,\n            'focused': this.focused,\n            'with-start': this.hasStart,\n            'with-end': this.hasEnd,\n            'populated': this.populated,\n            'resizable': this.resizable,\n            'required': this.required,\n            'no-label': !this.label,\n        };\n        return html `\n      <div class=\"field ${classMap(classes)}\">\n        <div class=\"container-overflow\">\n          ${this.renderBackground?.()}\n          <slot name=\"container\"></slot>\n          ${this.renderStateLayer?.()} ${this.renderIndicator?.()} ${outline}\n          <div class=\"container\">\n            <div class=\"start\">\n              <slot name=\"start\"></slot>\n            </div>\n            <div class=\"middle\">\n              <div class=\"label-wrapper\">\n                ${restingLabel} ${outline ? nothing : floatingLabel}\n              </div>\n              <div class=\"content\">\n                <slot></slot>\n              </div>\n            </div>\n            <div class=\"end\">\n              <slot name=\"end\"></slot>\n            </div>\n          </div>\n        </div>\n        ${this.renderSupportingText()}\n      </div>\n    `;\n    }\n    updated(changed) {\n        if (changed.has('supportingText') ||\n            changed.has('errorText') ||\n            changed.has('count') ||\n            changed.has('max')) {\n            this.updateSlottedAriaDescribedBy();\n        }\n        if (this.refreshErrorAlert) {\n            // The past render cycle removed the role=\"alert\" from the error message.\n            // Re-add it after an animation frame to re-announce the error.\n            requestAnimationFrame(() => {\n                this.refreshErrorAlert = false;\n            });\n        }\n        if (this.disableTransitions) {\n            requestAnimationFrame(() => {\n                this.disableTransitions = false;\n            });\n        }\n    }\n    renderSupportingText() {\n        const { supportingOrErrorText, counterText } = this;\n        if (!supportingOrErrorText && !counterText) {\n            return nothing;\n        }\n        // Always render the supporting text span so that our `space-around`\n        // container puts the counter at the end.\n        const start = html `<span>${supportingOrErrorText}</span>`;\n        // Conditionally render counter so we don't render the extra `gap`.\n        // TODO(b/244473435): add aria-label and announcements\n        const end = counterText\n            ? html `<span class=\"counter\">${counterText}</span>`\n            : nothing;\n        // Announce if there is an error and error text visible.\n        // If refreshErrorAlert is true, do not announce. This will remove the\n        // role=\"alert\" attribute. Another render cycle will happen after an\n        // animation frame to re-add the role.\n        const shouldErrorAnnounce = this.error && this.errorText && !this.refreshErrorAlert;\n        const role = shouldErrorAnnounce ? 'alert' : nothing;\n        return html `\n      <div class=\"supporting-text\" role=${role}>${start}${end}</div>\n      <slot\n        name=\"aria-describedby\"\n        @slotchange=${this.updateSlottedAriaDescribedBy}></slot>\n    `;\n    }\n    updateSlottedAriaDescribedBy() {\n        for (const element of this.slottedAriaDescribedBy) {\n            render(html `${this.supportingOrErrorText} ${this.counterText}`, element);\n            element.setAttribute('hidden', '');\n        }\n    }\n    renderLabel(isFloating) {\n        if (!this.label) {\n            return nothing;\n        }\n        let visible;\n        if (isFloating) {\n            // Floating label is visible when focused/populated or when animating.\n            visible = this.focused || this.populated || this.isAnimating;\n        }\n        else {\n            // Resting label is visible when unfocused. It is never visible while\n            // animating.\n            visible = !this.focused && !this.populated && !this.isAnimating;\n        }\n        const classes = {\n            'hidden': !visible,\n            'floating': isFloating,\n            'resting': !isFloating,\n        };\n        // Add '*' if a label is present and the field is required\n        const labelText = `${this.label}${this.required && !this.noAsterisk ? '*' : ''}`;\n        return html `\n      <span class=\"label ${classMap(classes)}\" aria-hidden=${!visible}\n        >${labelText}</span\n      >\n    `;\n    }\n    animateLabelIfNeeded({ wasFocused, wasPopulated, }) {\n        if (!this.label) {\n            return;\n        }\n        wasFocused ??= this.focused;\n        wasPopulated ??= this.populated;\n        const wasFloating = wasFocused || wasPopulated;\n        const shouldBeFloating = this.focused || this.populated;\n        if (wasFloating === shouldBeFloating) {\n            return;\n        }\n        this.isAnimating = true;\n        this.labelAnimation?.cancel();\n        // Only one label is visible at a time for clearer text rendering.\n        // The floating label is visible and used during animation. At the end of\n        // the animation, it will either remain visible (if floating) or hide and\n        // the resting label will be shown.\n        //\n        // We don't use forward filling because if the dimensions of the text field\n        // change (leading icon removed, density changes, etc), then the animation\n        // will be inaccurate.\n        //\n        // Re-calculating the animation each time will prevent any visual glitches\n        // from appearing.\n        // TODO(b/241113345): use animation tokens\n        this.labelAnimation = this.floatingLabelEl?.animate(this.getLabelKeyframes(), { duration: 150, easing: EASING.STANDARD });\n        this.labelAnimation?.addEventListener('finish', () => {\n            // At the end of the animation, update the visible label.\n            this.isAnimating = false;\n        });\n    }\n    getLabelKeyframes() {\n        const { floatingLabelEl, restingLabelEl } = this;\n        if (!floatingLabelEl || !restingLabelEl) {\n            return [];\n        }\n        const { x: floatingX, y: floatingY, height: floatingHeight, } = floatingLabelEl.getBoundingClientRect();\n        const { x: restingX, y: restingY, height: restingHeight, } = restingLabelEl.getBoundingClientRect();\n        const floatingScrollWidth = floatingLabelEl.scrollWidth;\n        const restingScrollWidth = restingLabelEl.scrollWidth;\n        // Scale by width ratio instead of font size since letter-spacing will scale\n        // incorrectly. Using the width we can better approximate the adjusted\n        // scale and compensate for tracking and overflow.\n        // (use scrollWidth instead of width to account for clipped labels)\n        const scale = restingScrollWidth / floatingScrollWidth;\n        const xDelta = restingX - floatingX;\n        // The line-height of the resting and floating label are different. When\n        // we move the floating label down to the resting label's position, it won't\n        // exactly match because of this. We need to adjust by half of what the\n        // final scaled floating label's height will be.\n        const yDelta = restingY -\n            floatingY +\n            Math.round((restingHeight - floatingHeight * scale) / 2);\n        // Create the two transforms: floating to resting (using the calculations\n        // above), and resting to floating (re-setting the transform to initial\n        // values).\n        const restTransform = `translateX(${xDelta}px) translateY(${yDelta}px) scale(${scale})`;\n        const floatTransform = `translateX(0) translateY(0) scale(1)`;\n        // Constrain the floating labels width to a scaled percentage of the\n        // resting label's width. This will prevent long clipped labels from\n        // overflowing the container.\n        const restingClientWidth = restingLabelEl.clientWidth;\n        const isRestingClipped = restingScrollWidth > restingClientWidth;\n        const width = isRestingClipped ? `${restingClientWidth / scale}px` : '';\n        if (this.focused || this.populated) {\n            return [\n                { transform: restTransform, width },\n                { transform: floatTransform, width },\n            ];\n        }\n        return [\n            { transform: floatTransform, width },\n            { transform: restTransform, width },\n        ];\n    }\n    getSurfacePositionClientRect() {\n        return this.containerEl.getBoundingClientRect();\n    }\n}\n__decorate([\n    property({ type: Boolean })\n], Field.prototype, \"disabled\", void 0);\n__decorate([\n    property({ type: Boolean })\n], Field.prototype, \"error\", void 0);\n__decorate([\n    property({ type: Boolean })\n], Field.prototype, \"focused\", void 0);\n__decorate([\n    property()\n], Field.prototype, \"label\", void 0);\n__decorate([\n    property({ type: Boolean, attribute: 'no-asterisk' })\n], Field.prototype, \"noAsterisk\", void 0);\n__decorate([\n    property({ type: Boolean })\n], Field.prototype, \"populated\", void 0);\n__decorate([\n    property({ type: Boolean })\n], Field.prototype, \"required\", void 0);\n__decorate([\n    property({ type: Boolean })\n], Field.prototype, \"resizable\", void 0);\n__decorate([\n    property({ attribute: 'supporting-text' })\n], Field.prototype, \"supportingText\", void 0);\n__decorate([\n    property({ attribute: 'error-text' })\n], Field.prototype, \"errorText\", void 0);\n__decorate([\n    property({ type: Number })\n], Field.prototype, \"count\", void 0);\n__decorate([\n    property({ type: Number })\n], Field.prototype, \"max\", void 0);\n__decorate([\n    property({ type: Boolean, attribute: 'has-start' })\n], Field.prototype, \"hasStart\", void 0);\n__decorate([\n    property({ type: Boolean, attribute: 'has-end' })\n], Field.prototype, \"hasEnd\", void 0);\n__decorate([\n    queryAssignedElements({ slot: 'aria-describedby' })\n], Field.prototype, \"slottedAriaDescribedBy\", void 0);\n__decorate([\n    state()\n], Field.prototype, \"isAnimating\", void 0);\n__decorate([\n    state()\n], Field.prototype, \"refreshErrorAlert\", void 0);\n__decorate([\n    state()\n], Field.prototype, \"disableTransitions\", void 0);\n__decorate([\n    query('.label.floating')\n], Field.prototype, \"floatingLabelEl\", void 0);\n__decorate([\n    query('.label.resting')\n], Field.prototype, \"restingLabelEl\", void 0);\n__decorate([\n    query('.container')\n], Field.prototype, \"containerEl\", void 0);\n//# sourceMappingURL=field.js.map","/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { html } from 'lit';\nimport { Field } from './field.js';\n/**\n * A filled field component.\n */\nexport class FilledField extends Field {\n    renderBackground() {\n        return html ` <div class=\"background\"></div> `;\n    }\n    renderStateLayer() {\n        return html ` <div class=\"state-layer\"></div> `;\n    }\n    renderIndicator() {\n        return html `<div class=\"active-indicator\"></div>`;\n    }\n}\n//# sourceMappingURL=filled-field.js.map","/**\n * @license\n * Copyright 2024 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n// Generated stylesheet for ./field/internal/filled-styles.css.\nimport { css } from 'lit';\nexport const styles = css `@layer styles{:host{--_active-indicator-color: var(--md-filled-field-active-indicator-color, var(--md-sys-color-on-surface-variant, #49454f));--_active-indicator-height: var(--md-filled-field-active-indicator-height, 1px);--_bottom-space: var(--md-filled-field-bottom-space, 16px);--_container-color: var(--md-filled-field-container-color, var(--md-sys-color-surface-container-highest, #e6e0e9));--_content-color: var(--md-filled-field-content-color, var(--md-sys-color-on-surface, #1d1b20));--_content-font: var(--md-filled-field-content-font, var(--md-sys-typescale-body-large-font, var(--md-ref-typeface-plain, Roboto)));--_content-line-height: var(--md-filled-field-content-line-height, var(--md-sys-typescale-body-large-line-height, 1.5rem));--_content-size: var(--md-filled-field-content-size, var(--md-sys-typescale-body-large-size, 1rem));--_content-space: var(--md-filled-field-content-space, 16px);--_content-weight: var(--md-filled-field-content-weight, var(--md-sys-typescale-body-large-weight, var(--md-ref-typeface-weight-regular, 400)));--_disabled-active-indicator-color: var(--md-filled-field-disabled-active-indicator-color, var(--md-sys-color-on-surface, #1d1b20));--_disabled-active-indicator-height: var(--md-filled-field-disabled-active-indicator-height, 1px);--_disabled-active-indicator-opacity: var(--md-filled-field-disabled-active-indicator-opacity, 0.38);--_disabled-container-color: var(--md-filled-field-disabled-container-color, var(--md-sys-color-on-surface, #1d1b20));--_disabled-container-opacity: var(--md-filled-field-disabled-container-opacity, 0.04);--_disabled-content-color: var(--md-filled-field-disabled-content-color, var(--md-sys-color-on-surface, #1d1b20));--_disabled-content-opacity: var(--md-filled-field-disabled-content-opacity, 0.38);--_disabled-label-text-color: var(--md-filled-field-disabled-label-text-color, var(--md-sys-color-on-surface, #1d1b20));--_disabled-label-text-opacity: var(--md-filled-field-disabled-label-text-opacity, 0.38);--_disabled-leading-content-color: var(--md-filled-field-disabled-leading-content-color, var(--md-sys-color-on-surface, #1d1b20));--_disabled-leading-content-opacity: var(--md-filled-field-disabled-leading-content-opacity, 0.38);--_disabled-supporting-text-color: var(--md-filled-field-disabled-supporting-text-color, var(--md-sys-color-on-surface, #1d1b20));--_disabled-supporting-text-opacity: var(--md-filled-field-disabled-supporting-text-opacity, 0.38);--_disabled-trailing-content-color: var(--md-filled-field-disabled-trailing-content-color, var(--md-sys-color-on-surface, #1d1b20));--_disabled-trailing-content-opacity: var(--md-filled-field-disabled-trailing-content-opacity, 0.38);--_error-active-indicator-color: var(--md-filled-field-error-active-indicator-color, var(--md-sys-color-error, #b3261e));--_error-content-color: var(--md-filled-field-error-content-color, var(--md-sys-color-on-surface, #1d1b20));--_error-focus-active-indicator-color: var(--md-filled-field-error-focus-active-indicator-color, var(--md-sys-color-error, #b3261e));--_error-focus-content-color: var(--md-filled-field-error-focus-content-color, var(--md-sys-color-on-surface-variant, #49454f));--_error-focus-label-text-color: var(--md-filled-field-error-focus-label-text-color, var(--md-sys-color-error, #b3261e));--_error-focus-leading-content-color: var(--md-filled-field-error-focus-leading-content-color, var(--md-sys-color-on-surface-variant, #49454f));--_error-focus-supporting-text-color: var(--md-filled-field-error-focus-supporting-text-color, var(--md-sys-color-error, #b3261e));--_error-focus-trailing-content-color: var(--md-filled-field-error-focus-trailing-content-color, var(--md-sys-color-error, #b3261e));--_error-hover-active-indicator-color: var(--md-filled-field-error-hover-active-indicator-color, var(--md-sys-color-on-error-container, #410e0b));--_error-hover-content-color: var(--md-filled-field-error-hover-content-color, var(--md-sys-color-on-surface, #1d1b20));--_error-hover-label-text-color: var(--md-filled-field-error-hover-label-text-color, var(--md-sys-color-on-error-container, #410e0b));--_error-hover-leading-content-color: var(--md-filled-field-error-hover-leading-content-color, var(--md-sys-color-on-surface-variant, #49454f));--_error-hover-state-layer-color: var(--md-filled-field-error-hover-state-layer-color, var(--md-sys-color-on-surface, #1d1b20));--_error-hover-state-layer-opacity: var(--md-filled-field-error-hover-state-layer-opacity, 0.08);--_error-hover-supporting-text-color: var(--md-filled-field-error-hover-supporting-text-color, var(--md-sys-color-error, #b3261e));--_error-hover-trailing-content-color: var(--md-filled-field-error-hover-trailing-content-color, var(--md-sys-color-on-error-container, #410e0b));--_error-label-text-color: var(--md-filled-field-error-label-text-color, var(--md-sys-color-error, #b3261e));--_error-leading-content-color: var(--md-filled-field-error-leading-content-color, var(--md-sys-color-on-surface-variant, #49454f));--_error-supporting-text-color: var(--md-filled-field-error-supporting-text-color, var(--md-sys-color-error, #b3261e));--_error-trailing-content-color: var(--md-filled-field-error-trailing-content-color, var(--md-sys-color-error, #b3261e));--_focus-active-indicator-color: var(--md-filled-field-focus-active-indicator-color, var(--md-sys-color-primary, #6750a4));--_focus-active-indicator-height: var(--md-filled-field-focus-active-indicator-height, 3px);--_focus-content-color: var(--md-filled-field-focus-content-color, var(--md-sys-color-on-surface, #1d1b20));--_focus-label-text-color: var(--md-filled-field-focus-label-text-color, var(--md-sys-color-primary, #6750a4));--_focus-leading-content-color: var(--md-filled-field-focus-leading-content-color, var(--md-sys-color-on-surface-variant, #49454f));--_focus-supporting-text-color: var(--md-filled-field-focus-supporting-text-color, var(--md-sys-color-on-surface-variant, #49454f));--_focus-trailing-content-color: var(--md-filled-field-focus-trailing-content-color, var(--md-sys-color-on-surface-variant, #49454f));--_hover-active-indicator-color: var(--md-filled-field-hover-active-indicator-color, var(--md-sys-color-on-surface, #1d1b20));--_hover-active-indicator-height: var(--md-filled-field-hover-active-indicator-height, 1px);--_hover-content-color: var(--md-filled-field-hover-content-color, var(--md-sys-color-on-surface, #1d1b20));--_hover-label-text-color: var(--md-filled-field-hover-label-text-color, var(--md-sys-color-on-surface-variant, #49454f));--_hover-leading-content-color: var(--md-filled-field-hover-leading-content-color, var(--md-sys-color-on-surface-variant, #49454f));--_hover-state-layer-color: var(--md-filled-field-hover-state-layer-color, var(--md-sys-color-on-surface, #1d1b20));--_hover-state-layer-opacity: var(--md-filled-field-hover-state-layer-opacity, 0.08);--_hover-supporting-text-color: var(--md-filled-field-hover-supporting-text-color, var(--md-sys-color-on-surface-variant, #49454f));--_hover-trailing-content-color: var(--md-filled-field-hover-trailing-content-color, var(--md-sys-color-on-surface-variant, #49454f));--_label-text-color: var(--md-filled-field-label-text-color, var(--md-sys-color-on-surface-variant, #49454f));--_label-text-font: var(--md-filled-field-label-text-font, var(--md-sys-typescale-body-large-font, var(--md-ref-typeface-plain, Roboto)));--_label-text-line-height: var(--md-filled-field-label-text-line-height, var(--md-sys-typescale-body-large-line-height, 1.5rem));--_label-text-populated-line-height: var(--md-filled-field-label-text-populated-line-height, var(--md-sys-typescale-body-small-line-height, 1rem));--_label-text-populated-size: var(--md-filled-field-label-text-populated-size, var(--md-sys-typescale-body-small-size, 0.75rem));--_label-text-size: var(--md-filled-field-label-text-size, var(--md-sys-typescale-body-large-size, 1rem));--_label-text-weight: var(--md-filled-field-label-text-weight, var(--md-sys-typescale-body-large-weight, var(--md-ref-typeface-weight-regular, 400)));--_leading-content-color: var(--md-filled-field-leading-content-color, var(--md-sys-color-on-surface-variant, #49454f));--_leading-space: var(--md-filled-field-leading-space, 16px);--_supporting-text-color: var(--md-filled-field-supporting-text-color, var(--md-sys-color-on-surface-variant, #49454f));--_supporting-text-font: var(--md-filled-field-supporting-text-font, var(--md-sys-typescale-body-small-font, var(--md-ref-typeface-plain, Roboto)));--_supporting-text-leading-space: var(--md-filled-field-supporting-text-leading-space, 16px);--_supporting-text-line-height: var(--md-filled-field-supporting-text-line-height, var(--md-sys-typescale-body-small-line-height, 1rem));--_supporting-text-size: var(--md-filled-field-supporting-text-size, var(--md-sys-typescale-body-small-size, 0.75rem));--_supporting-text-top-space: var(--md-filled-field-supporting-text-top-space, 4px);--_supporting-text-trailing-space: var(--md-filled-field-supporting-text-trailing-space, 16px);--_supporting-text-weight: var(--md-filled-field-supporting-text-weight, var(--md-sys-typescale-body-small-weight, var(--md-ref-typeface-weight-regular, 400)));--_top-space: var(--md-filled-field-top-space, 16px);--_trailing-content-color: var(--md-filled-field-trailing-content-color, var(--md-sys-color-on-surface-variant, #49454f));--_trailing-space: var(--md-filled-field-trailing-space, 16px);--_with-label-bottom-space: var(--md-filled-field-with-label-bottom-space, 8px);--_with-label-top-space: var(--md-filled-field-with-label-top-space, 8px);--_with-leading-content-leading-space: var(--md-filled-field-with-leading-content-leading-space, 12px);--_with-trailing-content-trailing-space: var(--md-filled-field-with-trailing-content-trailing-space, 12px);--_container-shape-start-start: var(--md-filled-field-container-shape-start-start, var(--md-filled-field-container-shape, var(--md-sys-shape-corner-extra-small, 4px)));--_container-shape-start-end: var(--md-filled-field-container-shape-start-end, var(--md-filled-field-container-shape, var(--md-sys-shape-corner-extra-small, 4px)));--_container-shape-end-end: var(--md-filled-field-container-shape-end-end, var(--md-filled-field-container-shape, var(--md-sys-shape-corner-none, 0px)));--_container-shape-end-start: var(--md-filled-field-container-shape-end-start, var(--md-filled-field-container-shape, var(--md-sys-shape-corner-none, 0px)))}.background,.state-layer{border-radius:inherit;inset:0;pointer-events:none;position:absolute}.background{background:var(--_container-color)}.state-layer{visibility:hidden}.field:not(.disabled):hover .state-layer{visibility:visible}.label.floating{position:absolute;top:var(--_with-label-top-space)}.field:not(.with-start) .label-wrapper{margin-inline-start:var(--_leading-space)}.field:not(.with-end) .label-wrapper{margin-inline-end:var(--_trailing-space)}.active-indicator{inset:auto 0 0 0;pointer-events:none;position:absolute;width:100%;z-index:1}.active-indicator::before,.active-indicator::after{border-bottom:var(--_active-indicator-height) solid var(--_active-indicator-color);inset:auto 0 0 0;content:\"\";position:absolute;width:100%}.active-indicator::after{opacity:0;transition:opacity 150ms cubic-bezier(0.2, 0, 0, 1)}.focused .active-indicator::after{opacity:1}.field:not(.with-start) .content ::slotted(*){padding-inline-start:var(--_leading-space)}.field:not(.with-end) .content ::slotted(*){padding-inline-end:var(--_trailing-space)}.field:not(.no-label) .content ::slotted(:not(textarea)){padding-bottom:var(--_with-label-bottom-space);padding-top:calc(var(--_with-label-top-space) + var(--_label-text-populated-line-height))}.field:not(.no-label) .content ::slotted(textarea){margin-bottom:var(--_with-label-bottom-space);margin-top:calc(var(--_with-label-top-space) + var(--_label-text-populated-line-height))}:hover .active-indicator::before{border-bottom-color:var(--_hover-active-indicator-color);border-bottom-width:var(--_hover-active-indicator-height)}.active-indicator::after{border-bottom-color:var(--_focus-active-indicator-color);border-bottom-width:var(--_focus-active-indicator-height)}:hover .state-layer{background:var(--_hover-state-layer-color);opacity:var(--_hover-state-layer-opacity)}.disabled .active-indicator::before{border-bottom-color:var(--_disabled-active-indicator-color);border-bottom-width:var(--_disabled-active-indicator-height);opacity:var(--_disabled-active-indicator-opacity)}.disabled .background{background:var(--_disabled-container-color);opacity:var(--_disabled-container-opacity)}.error .active-indicator::before{border-bottom-color:var(--_error-active-indicator-color)}.error:hover .active-indicator::before{border-bottom-color:var(--_error-hover-active-indicator-color)}.error:hover .state-layer{background:var(--_error-hover-state-layer-color);opacity:var(--_error-hover-state-layer-opacity)}.error .active-indicator::after{border-bottom-color:var(--_error-focus-active-indicator-color)}.resizable .container{bottom:var(--_focus-active-indicator-height);clip-path:inset(var(--_focus-active-indicator-height) 0 0 0)}.resizable .container>*{top:var(--_focus-active-indicator-height)}}@layer hcm{@media(forced-colors: active){.disabled .active-indicator::before{border-color:GrayText;opacity:1}}}\n`;\n//# sourceMappingURL=filled-styles.js.map","/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { html } from 'lit';\nimport { Field } from './field.js';\n/**\n * An outlined field component.\n */\nexport class OutlinedField extends Field {\n    renderOutline(floatingLabel) {\n        return html `\n      <div class=\"outline\">\n        <div class=\"outline-start\"></div>\n        <div class=\"outline-notch\">\n          <div class=\"outline-panel-inactive\"></div>\n          <div class=\"outline-panel-active\"></div>\n          <div class=\"outline-label\">${floatingLabel}</div>\n        </div>\n        <div class=\"outline-end\"></div>\n      </div>\n    `;\n    }\n}\n//# sourceMappingURL=outlined-field.js.map","/**\n * @license\n * Copyright 2024 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n// Generated stylesheet for ./field/internal/outlined-styles.css.\nimport { css } from 'lit';\nexport const styles = css `@layer styles{:host{--_bottom-space: var(--md-outlined-field-bottom-space, 16px);--_content-color: var(--md-outlined-field-content-color, var(--md-sys-color-on-surface, #1d1b20));--_content-font: var(--md-outlined-field-content-font, var(--md-sys-typescale-body-large-font, var(--md-ref-typeface-plain, Roboto)));--_content-line-height: var(--md-outlined-field-content-line-height, var(--md-sys-typescale-body-large-line-height, 1.5rem));--_content-size: var(--md-outlined-field-content-size, var(--md-sys-typescale-body-large-size, 1rem));--_content-space: var(--md-outlined-field-content-space, 16px);--_content-weight: var(--md-outlined-field-content-weight, var(--md-sys-typescale-body-large-weight, var(--md-ref-typeface-weight-regular, 400)));--_disabled-content-color: var(--md-outlined-field-disabled-content-color, var(--md-sys-color-on-surface, #1d1b20));--_disabled-content-opacity: var(--md-outlined-field-disabled-content-opacity, 0.38);--_disabled-label-text-color: var(--md-outlined-field-disabled-label-text-color, var(--md-sys-color-on-surface, #1d1b20));--_disabled-label-text-opacity: var(--md-outlined-field-disabled-label-text-opacity, 0.38);--_disabled-leading-content-color: var(--md-outlined-field-disabled-leading-content-color, var(--md-sys-color-on-surface, #1d1b20));--_disabled-leading-content-opacity: var(--md-outlined-field-disabled-leading-content-opacity, 0.38);--_disabled-outline-color: var(--md-outlined-field-disabled-outline-color, var(--md-sys-color-on-surface, #1d1b20));--_disabled-outline-opacity: var(--md-outlined-field-disabled-outline-opacity, 0.12);--_disabled-outline-width: var(--md-outlined-field-disabled-outline-width, 1px);--_disabled-supporting-text-color: var(--md-outlined-field-disabled-supporting-text-color, var(--md-sys-color-on-surface, #1d1b20));--_disabled-supporting-text-opacity: var(--md-outlined-field-disabled-supporting-text-opacity, 0.38);--_disabled-trailing-content-color: var(--md-outlined-field-disabled-trailing-content-color, var(--md-sys-color-on-surface, #1d1b20));--_disabled-trailing-content-opacity: var(--md-outlined-field-disabled-trailing-content-opacity, 0.38);--_error-content-color: var(--md-outlined-field-error-content-color, var(--md-sys-color-on-surface, #1d1b20));--_error-focus-content-color: var(--md-outlined-field-error-focus-content-color, var(--md-sys-color-on-surface, #1d1b20));--_error-focus-label-text-color: var(--md-outlined-field-error-focus-label-text-color, var(--md-sys-color-error, #b3261e));--_error-focus-leading-content-color: var(--md-outlined-field-error-focus-leading-content-color, var(--md-sys-color-on-surface-variant, #49454f));--_error-focus-outline-color: var(--md-outlined-field-error-focus-outline-color, var(--md-sys-color-error, #b3261e));--_error-focus-supporting-text-color: var(--md-outlined-field-error-focus-supporting-text-color, var(--md-sys-color-error, #b3261e));--_error-focus-trailing-content-color: var(--md-outlined-field-error-focus-trailing-content-color, var(--md-sys-color-error, #b3261e));--_error-hover-content-color: var(--md-outlined-field-error-hover-content-color, var(--md-sys-color-on-surface, #1d1b20));--_error-hover-label-text-color: var(--md-outlined-field-error-hover-label-text-color, var(--md-sys-color-on-error-container, #410e0b));--_error-hover-leading-content-color: var(--md-outlined-field-error-hover-leading-content-color, var(--md-sys-color-on-surface-variant, #49454f));--_error-hover-outline-color: var(--md-outlined-field-error-hover-outline-color, var(--md-sys-color-on-error-container, #410e0b));--_error-hover-supporting-text-color: var(--md-outlined-field-error-hover-supporting-text-color, var(--md-sys-color-error, #b3261e));--_error-hover-trailing-content-color: var(--md-outlined-field-error-hover-trailing-content-color, var(--md-sys-color-on-error-container, #410e0b));--_error-label-text-color: var(--md-outlined-field-error-label-text-color, var(--md-sys-color-error, #b3261e));--_error-leading-content-color: var(--md-outlined-field-error-leading-content-color, var(--md-sys-color-on-surface-variant, #49454f));--_error-outline-color: var(--md-outlined-field-error-outline-color, var(--md-sys-color-error, #b3261e));--_error-supporting-text-color: var(--md-outlined-field-error-supporting-text-color, var(--md-sys-color-error, #b3261e));--_error-trailing-content-color: var(--md-outlined-field-error-trailing-content-color, var(--md-sys-color-error, #b3261e));--_focus-content-color: var(--md-outlined-field-focus-content-color, var(--md-sys-color-on-surface, #1d1b20));--_focus-label-text-color: var(--md-outlined-field-focus-label-text-color, var(--md-sys-color-primary, #6750a4));--_focus-leading-content-color: var(--md-outlined-field-focus-leading-content-color, var(--md-sys-color-on-surface-variant, #49454f));--_focus-outline-color: var(--md-outlined-field-focus-outline-color, var(--md-sys-color-primary, #6750a4));--_focus-outline-width: var(--md-outlined-field-focus-outline-width, 3px);--_focus-supporting-text-color: var(--md-outlined-field-focus-supporting-text-color, var(--md-sys-color-on-surface-variant, #49454f));--_focus-trailing-content-color: var(--md-outlined-field-focus-trailing-content-color, var(--md-sys-color-on-surface-variant, #49454f));--_hover-content-color: var(--md-outlined-field-hover-content-color, var(--md-sys-color-on-surface, #1d1b20));--_hover-label-text-color: var(--md-outlined-field-hover-label-text-color, var(--md-sys-color-on-surface, #1d1b20));--_hover-leading-content-color: var(--md-outlined-field-hover-leading-content-color, var(--md-sys-color-on-surface-variant, #49454f));--_hover-outline-color: var(--md-outlined-field-hover-outline-color, var(--md-sys-color-on-surface, #1d1b20));--_hover-outline-width: var(--md-outlined-field-hover-outline-width, 1px);--_hover-supporting-text-color: var(--md-outlined-field-hover-supporting-text-color, var(--md-sys-color-on-surface-variant, #49454f));--_hover-trailing-content-color: var(--md-outlined-field-hover-trailing-content-color, var(--md-sys-color-on-surface-variant, #49454f));--_label-text-color: var(--md-outlined-field-label-text-color, var(--md-sys-color-on-surface-variant, #49454f));--_label-text-font: var(--md-outlined-field-label-text-font, var(--md-sys-typescale-body-large-font, var(--md-ref-typeface-plain, Roboto)));--_label-text-line-height: var(--md-outlined-field-label-text-line-height, var(--md-sys-typescale-body-large-line-height, 1.5rem));--_label-text-padding-bottom: var(--md-outlined-field-label-text-padding-bottom, 8px);--_label-text-populated-line-height: var(--md-outlined-field-label-text-populated-line-height, var(--md-sys-typescale-body-small-line-height, 1rem));--_label-text-populated-size: var(--md-outlined-field-label-text-populated-size, var(--md-sys-typescale-body-small-size, 0.75rem));--_label-text-size: var(--md-outlined-field-label-text-size, var(--md-sys-typescale-body-large-size, 1rem));--_label-text-weight: var(--md-outlined-field-label-text-weight, var(--md-sys-typescale-body-large-weight, var(--md-ref-typeface-weight-regular, 400)));--_leading-content-color: var(--md-outlined-field-leading-content-color, var(--md-sys-color-on-surface-variant, #49454f));--_leading-space: var(--md-outlined-field-leading-space, 16px);--_outline-color: var(--md-outlined-field-outline-color, var(--md-sys-color-outline, #79747e));--_outline-label-padding: var(--md-outlined-field-outline-label-padding, 4px);--_outline-width: var(--md-outlined-field-outline-width, 1px);--_supporting-text-color: var(--md-outlined-field-supporting-text-color, var(--md-sys-color-on-surface-variant, #49454f));--_supporting-text-font: var(--md-outlined-field-supporting-text-font, var(--md-sys-typescale-body-small-font, var(--md-ref-typeface-plain, Roboto)));--_supporting-text-leading-space: var(--md-outlined-field-supporting-text-leading-space, 16px);--_supporting-text-line-height: var(--md-outlined-field-supporting-text-line-height, var(--md-sys-typescale-body-small-line-height, 1rem));--_supporting-text-size: var(--md-outlined-field-supporting-text-size, var(--md-sys-typescale-body-small-size, 0.75rem));--_supporting-text-top-space: var(--md-outlined-field-supporting-text-top-space, 4px);--_supporting-text-trailing-space: var(--md-outlined-field-supporting-text-trailing-space, 16px);--_supporting-text-weight: var(--md-outlined-field-supporting-text-weight, var(--md-sys-typescale-body-small-weight, var(--md-ref-typeface-weight-regular, 400)));--_top-space: var(--md-outlined-field-top-space, 16px);--_trailing-content-color: var(--md-outlined-field-trailing-content-color, var(--md-sys-color-on-surface-variant, #49454f));--_trailing-space: var(--md-outlined-field-trailing-space, 16px);--_with-leading-content-leading-space: var(--md-outlined-field-with-leading-content-leading-space, 12px);--_with-trailing-content-trailing-space: var(--md-outlined-field-with-trailing-content-trailing-space, 12px);--_container-shape-start-start: var(--md-outlined-field-container-shape-start-start, var(--md-outlined-field-container-shape, var(--md-sys-shape-corner-extra-small, 4px)));--_container-shape-start-end: var(--md-outlined-field-container-shape-start-end, var(--md-outlined-field-container-shape, var(--md-sys-shape-corner-extra-small, 4px)));--_container-shape-end-end: var(--md-outlined-field-container-shape-end-end, var(--md-outlined-field-container-shape, var(--md-sys-shape-corner-extra-small, 4px)));--_container-shape-end-start: var(--md-outlined-field-container-shape-end-start, var(--md-outlined-field-container-shape, var(--md-sys-shape-corner-extra-small, 4px)))}.outline{border-color:var(--_outline-color);border-radius:inherit;display:flex;pointer-events:none;height:100%;position:absolute;width:100%;z-index:1}.outline-start::before,.outline-start::after,.outline-panel-inactive::before,.outline-panel-inactive::after,.outline-panel-active::before,.outline-panel-active::after,.outline-end::before,.outline-end::after{border:inherit;content:\"\";inset:0;position:absolute}.outline-start,.outline-end{border:inherit;border-radius:inherit;box-sizing:border-box;position:relative}.outline-start::before,.outline-start::after,.outline-end::before,.outline-end::after{border-bottom-style:solid;border-top-style:solid}.outline-start::after,.outline-end::after{opacity:0;transition:opacity 150ms cubic-bezier(0.2, 0, 0, 1)}.focused .outline-start::after,.focused .outline-end::after{opacity:1}.outline-start::before,.outline-start::after{border-inline-start-style:solid;border-inline-end-style:none;border-start-start-radius:inherit;border-start-end-radius:0;border-end-start-radius:inherit;border-end-end-radius:0;margin-inline-end:var(--_outline-label-padding)}.outline-end{flex-grow:1;margin-inline-start:calc(-1*var(--_outline-label-padding))}.outline-end::before,.outline-end::after{border-inline-start-style:none;border-inline-end-style:solid;border-start-start-radius:0;border-start-end-radius:inherit;border-end-start-radius:0;border-end-end-radius:inherit}.outline-notch{align-items:flex-start;border:inherit;display:flex;margin-inline-start:calc(-1*var(--_outline-label-padding));margin-inline-end:var(--_outline-label-padding);max-width:calc(100% - var(--_leading-space) - var(--_trailing-space));padding:0 var(--_outline-label-padding);position:relative}.no-label .outline-notch{display:none}.outline-panel-inactive,.outline-panel-active{border:inherit;border-bottom-style:solid;inset:0;position:absolute}.outline-panel-inactive::before,.outline-panel-inactive::after,.outline-panel-active::before,.outline-panel-active::after{border-top-style:solid;border-bottom:none;bottom:auto;transform:scaleX(1);transition:transform 150ms cubic-bezier(0.2, 0, 0, 1)}.outline-panel-inactive::before,.outline-panel-active::before{right:50%;transform-origin:top left}.outline-panel-inactive::after,.outline-panel-active::after{left:50%;transform-origin:top right}.populated .outline-panel-inactive::before,.populated .outline-panel-inactive::after,.populated .outline-panel-active::before,.populated .outline-panel-active::after,.focused .outline-panel-inactive::before,.focused .outline-panel-inactive::after,.focused .outline-panel-active::before,.focused .outline-panel-active::after{transform:scaleX(0)}.outline-panel-active{opacity:0;transition:opacity 150ms cubic-bezier(0.2, 0, 0, 1)}.focused .outline-panel-active{opacity:1}.outline-label{display:flex;max-width:100%;transform:translateY(calc(-100% + var(--_label-text-padding-bottom)))}.outline-start,.field:not(.with-start) .content ::slotted(*){padding-inline-start:max(var(--_leading-space),max(var(--_container-shape-start-start),var(--_container-shape-end-start)) + var(--_outline-label-padding))}.field:not(.with-start) .label-wrapper{margin-inline-start:max(var(--_leading-space),max(var(--_container-shape-start-start),var(--_container-shape-end-start)) + var(--_outline-label-padding))}.field:not(.with-end) .content ::slotted(*){padding-inline-end:max(var(--_trailing-space),max(var(--_container-shape-start-end),var(--_container-shape-end-end)))}.field:not(.with-end) .label-wrapper{margin-inline-end:max(var(--_trailing-space),max(var(--_container-shape-start-end),var(--_container-shape-end-end)))}.outline-start::before,.outline-end::before,.outline-panel-inactive,.outline-panel-inactive::before,.outline-panel-inactive::after{border-width:var(--_outline-width)}:hover .outline{border-color:var(--_hover-outline-color);color:var(--_hover-outline-color)}:hover .outline-start::before,:hover .outline-end::before,:hover .outline-panel-inactive,:hover .outline-panel-inactive::before,:hover .outline-panel-inactive::after{border-width:var(--_hover-outline-width)}.focused .outline{border-color:var(--_focus-outline-color);color:var(--_focus-outline-color)}.outline-start::after,.outline-end::after,.outline-panel-active,.outline-panel-active::before,.outline-panel-active::after{border-width:var(--_focus-outline-width)}.disabled .outline{border-color:var(--_disabled-outline-color);color:var(--_disabled-outline-color)}.disabled .outline-start,.disabled .outline-end,.disabled .outline-panel-inactive{opacity:var(--_disabled-outline-opacity)}.disabled .outline-start::before,.disabled .outline-end::before,.disabled .outline-panel-inactive,.disabled .outline-panel-inactive::before,.disabled .outline-panel-inactive::after{border-width:var(--_disabled-outline-width)}.error .outline{border-color:var(--_error-outline-color);color:var(--_error-outline-color)}.error:hover .outline{border-color:var(--_error-hover-outline-color);color:var(--_error-hover-outline-color)}.error.focused .outline{border-color:var(--_error-focus-outline-color);color:var(--_error-focus-outline-color)}.resizable .container{bottom:var(--_focus-outline-width);inset-inline-end:var(--_focus-outline-width);clip-path:inset(var(--_focus-outline-width) 0 0 var(--_focus-outline-width))}.resizable .container>*{top:var(--_focus-outline-width);inset-inline-start:var(--_focus-outline-width)}.resizable .container:dir(rtl){clip-path:inset(var(--_focus-outline-width) var(--_focus-outline-width) 0 0)}}@layer hcm{@media(forced-colors: active){.disabled .outline{border-color:GrayText;color:GrayText}.disabled :is(.outline-start,.outline-end,.outline-panel-inactive){opacity:1}}}\n`;\n//# sourceMappingURL=outlined-styles.js.map","/**\n * @license\n * Copyright 2024 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n// Generated stylesheet for ./field/internal/shared-styles.css.\nimport { css } from 'lit';\nexport const styles = css `:host{display:inline-flex;resize:both}.field{display:flex;flex:1;flex-direction:column;writing-mode:horizontal-tb;max-width:100%}.container-overflow{border-start-start-radius:var(--_container-shape-start-start);border-start-end-radius:var(--_container-shape-start-end);border-end-end-radius:var(--_container-shape-end-end);border-end-start-radius:var(--_container-shape-end-start);display:flex;height:100%;position:relative}.container{align-items:center;border-radius:inherit;display:flex;flex:1;max-height:100%;min-height:100%;min-width:min-content;position:relative}.field,.container-overflow{resize:inherit}.resizable:not(.disabled) .container{resize:inherit;overflow:hidden}.disabled{pointer-events:none}slot[name=container]{border-radius:inherit}slot[name=container]::slotted(*){border-radius:inherit;inset:0;pointer-events:none;position:absolute}@layer styles{.start,.middle,.end{display:flex;box-sizing:border-box;height:100%;position:relative}.start{color:var(--_leading-content-color)}.end{color:var(--_trailing-content-color)}.start,.end{align-items:center;justify-content:center}.with-start .start{margin-inline:var(--_with-leading-content-leading-space) var(--_content-space)}.with-end .end{margin-inline:var(--_content-space) var(--_with-trailing-content-trailing-space)}.middle{align-items:stretch;align-self:baseline;flex:1}.content{color:var(--_content-color);display:flex;flex:1;opacity:0;transition:opacity 83ms cubic-bezier(0.2, 0, 0, 1)}.no-label .content,.focused .content,.populated .content{opacity:1;transition-delay:67ms}:is(.disabled,.disable-transitions) .content{transition:none}.content ::slotted(*){all:unset;color:currentColor;font-family:var(--_content-font);font-size:var(--_content-size);line-height:var(--_content-line-height);font-weight:var(--_content-weight);width:100%;overflow-wrap:revert;white-space:revert}.content ::slotted(:not(textarea)){padding-top:var(--_top-space);padding-bottom:var(--_bottom-space)}.content ::slotted(textarea){margin-top:var(--_top-space);margin-bottom:var(--_bottom-space)}:hover .content{color:var(--_hover-content-color)}:hover .start{color:var(--_hover-leading-content-color)}:hover .end{color:var(--_hover-trailing-content-color)}.focused .content{color:var(--_focus-content-color)}.focused .start{color:var(--_focus-leading-content-color)}.focused .end{color:var(--_focus-trailing-content-color)}.disabled .content{color:var(--_disabled-content-color)}.disabled.no-label .content,.disabled.focused .content,.disabled.populated .content{opacity:var(--_disabled-content-opacity)}.disabled .start{color:var(--_disabled-leading-content-color);opacity:var(--_disabled-leading-content-opacity)}.disabled .end{color:var(--_disabled-trailing-content-color);opacity:var(--_disabled-trailing-content-opacity)}.error .content{color:var(--_error-content-color)}.error .start{color:var(--_error-leading-content-color)}.error .end{color:var(--_error-trailing-content-color)}.error:hover .content{color:var(--_error-hover-content-color)}.error:hover .start{color:var(--_error-hover-leading-content-color)}.error:hover .end{color:var(--_error-hover-trailing-content-color)}.error.focused .content{color:var(--_error-focus-content-color)}.error.focused .start{color:var(--_error-focus-leading-content-color)}.error.focused .end{color:var(--_error-focus-trailing-content-color)}}@layer hcm{@media(forced-colors: active){.disabled :is(.start,.content,.end){color:GrayText;opacity:1}}}@layer styles{.label{box-sizing:border-box;color:var(--_label-text-color);overflow:hidden;max-width:100%;text-overflow:ellipsis;white-space:nowrap;z-index:1;font-family:var(--_label-text-font);font-size:var(--_label-text-size);line-height:var(--_label-text-line-height);font-weight:var(--_label-text-weight);width:min-content}.label-wrapper{inset:0;pointer-events:none;position:absolute}.label.resting{position:absolute;top:var(--_top-space)}.label.floating{font-size:var(--_label-text-populated-size);line-height:var(--_label-text-populated-line-height);transform-origin:top left}.label.hidden{opacity:0}.no-label .label{display:none}.label-wrapper{inset:0;position:absolute;text-align:initial}:hover .label{color:var(--_hover-label-text-color)}.focused .label{color:var(--_focus-label-text-color)}.disabled .label{color:var(--_disabled-label-text-color)}.disabled .label:not(.hidden){opacity:var(--_disabled-label-text-opacity)}.error .label{color:var(--_error-label-text-color)}.error:hover .label{color:var(--_error-hover-label-text-color)}.error.focused .label{color:var(--_error-focus-label-text-color)}}@layer hcm{@media(forced-colors: active){.disabled .label:not(.hidden){color:GrayText;opacity:1}}}@layer styles{.supporting-text{color:var(--_supporting-text-color);display:flex;font-family:var(--_supporting-text-font);font-size:var(--_supporting-text-size);line-height:var(--_supporting-text-line-height);font-weight:var(--_supporting-text-weight);gap:16px;justify-content:space-between;padding-inline-start:var(--_supporting-text-leading-space);padding-inline-end:var(--_supporting-text-trailing-space);padding-top:var(--_supporting-text-top-space)}.supporting-text :nth-child(2){flex-shrink:0}:hover .supporting-text{color:var(--_hover-supporting-text-color)}.focus .supporting-text{color:var(--_focus-supporting-text-color)}.disabled .supporting-text{color:var(--_disabled-supporting-text-color);opacity:var(--_disabled-supporting-text-opacity)}.error .supporting-text{color:var(--_error-supporting-text-color)}.error:hover .supporting-text{color:var(--_error-hover-supporting-text-color)}.error.focus .supporting-text{color:var(--_error-focus-supporting-text-color)}}@layer hcm{@media(forced-colors: active){.disabled .supporting-text{color:GrayText;opacity:1}}}\n`;\n//# sourceMappingURL=shared-styles.js.map","/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { __decorate } from \"tslib\";\nimport { customElement } from 'lit/decorators.js';\nimport { OutlinedField } from './internal/outlined-field.js';\nimport { styles as outlinedStyles } from './internal/outlined-styles.js';\nimport { styles as sharedStyles } from './internal/shared-styles.js';\n/**\n * TODO(b/228525797): add docs\n * @final\n * @suppress {visibility}\n */\nlet MdOutlinedField = class MdOutlinedField extends OutlinedField {\n};\nMdOutlinedField.styles = [sharedStyles, outlinedStyles];\nMdOutlinedField = __decorate([\n    customElement('md-outlined-field')\n], MdOutlinedField);\nexport { MdOutlinedField };\n//# sourceMappingURL=outlined-field.js.map","/**\n * @license\n * Copyright 2024 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n// Generated stylesheet for ./focus/internal/focus-ring-styles.css.\nimport { css } from 'lit';\nexport const styles = css `:host{animation-delay:0s,calc(var(--md-focus-ring-duration, 600ms)*.25);animation-duration:calc(var(--md-focus-ring-duration, 600ms)*.25),calc(var(--md-focus-ring-duration, 600ms)*.75);animation-timing-function:cubic-bezier(0.2, 0, 0, 1);box-sizing:border-box;color:var(--md-focus-ring-color, var(--md-sys-color-secondary, #625b71));display:none;pointer-events:none;position:absolute}:host([visible]){display:flex}:host(:not([inward])){animation-name:outward-grow,outward-shrink;border-end-end-radius:calc(var(--md-focus-ring-shape-end-end, var(--md-focus-ring-shape, var(--md-sys-shape-corner-full, 9999px))) + var(--md-focus-ring-outward-offset, 2px));border-end-start-radius:calc(var(--md-focus-ring-shape-end-start, var(--md-focus-ring-shape, var(--md-sys-shape-corner-full, 9999px))) + var(--md-focus-ring-outward-offset, 2px));border-start-end-radius:calc(var(--md-focus-ring-shape-start-end, var(--md-focus-ring-shape, var(--md-sys-shape-corner-full, 9999px))) + var(--md-focus-ring-outward-offset, 2px));border-start-start-radius:calc(var(--md-focus-ring-shape-start-start, var(--md-focus-ring-shape, var(--md-sys-shape-corner-full, 9999px))) + var(--md-focus-ring-outward-offset, 2px));inset:calc(-1*var(--md-focus-ring-outward-offset, 2px));outline:var(--md-focus-ring-width, 3px) solid currentColor}:host([inward]){animation-name:inward-grow,inward-shrink;border-end-end-radius:calc(var(--md-focus-ring-shape-end-end, var(--md-focus-ring-shape, var(--md-sys-shape-corner-full, 9999px))) - var(--md-focus-ring-inward-offset, 0px));border-end-start-radius:calc(var(--md-focus-ring-shape-end-start, var(--md-focus-ring-shape, var(--md-sys-shape-corner-full, 9999px))) - var(--md-focus-ring-inward-offset, 0px));border-start-end-radius:calc(var(--md-focus-ring-shape-start-end, var(--md-focus-ring-shape, var(--md-sys-shape-corner-full, 9999px))) - var(--md-focus-ring-inward-offset, 0px));border-start-start-radius:calc(var(--md-focus-ring-shape-start-start, var(--md-focus-ring-shape, var(--md-sys-shape-corner-full, 9999px))) - var(--md-focus-ring-inward-offset, 0px));border:var(--md-focus-ring-width, 3px) solid currentColor;inset:var(--md-focus-ring-inward-offset, 0px)}@keyframes outward-grow{from{outline-width:0}to{outline-width:var(--md-focus-ring-active-width, 8px)}}@keyframes outward-shrink{from{outline-width:var(--md-focus-ring-active-width, 8px)}}@keyframes inward-grow{from{border-width:0}to{border-width:var(--md-focus-ring-active-width, 8px)}}@keyframes inward-shrink{from{border-width:var(--md-focus-ring-active-width, 8px)}}@media(prefers-reduced-motion){:host{animation:none}}\n`;\n//# sourceMappingURL=focus-ring-styles.js.map","/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { __decorate } from \"tslib\";\nimport { isServer, LitElement } from 'lit';\nimport { property } from 'lit/decorators.js';\nimport { AttachableController, } from '../../internal/controller/attachable-controller.js';\n/**\n * Events that the focus ring listens to.\n */\nconst EVENTS = ['focusin', 'focusout', 'pointerdown'];\n/**\n * A focus ring component.\n *\n * @fires visibility-changed {Event} Fired whenever `visible` changes.\n */\nexport class FocusRing extends LitElement {\n    constructor() {\n        super(...arguments);\n        /**\n         * Makes the focus ring visible.\n         */\n        this.visible = false;\n        /**\n         * Makes the focus ring animate inwards instead of outwards.\n         */\n        this.inward = false;\n        this.attachableController = new AttachableController(this, this.onControlChange.bind(this));\n    }\n    get htmlFor() {\n        return this.attachableController.htmlFor;\n    }\n    set htmlFor(htmlFor) {\n        this.attachableController.htmlFor = htmlFor;\n    }\n    get control() {\n        return this.attachableController.control;\n    }\n    set control(control) {\n        this.attachableController.control = control;\n    }\n    attach(control) {\n        this.attachableController.attach(control);\n    }\n    detach() {\n        this.attachableController.detach();\n    }\n    connectedCallback() {\n        super.connectedCallback();\n        // Needed for VoiceOver, which will create a \"group\" if the element is a\n        // sibling to other content.\n        this.setAttribute('aria-hidden', 'true');\n    }\n    /** @private */\n    handleEvent(event) {\n        if (event[HANDLED_BY_FOCUS_RING]) {\n            // This ensures the focus ring does not activate when multiple focus rings\n            // are used within a single component.\n            return;\n        }\n        switch (event.type) {\n            default:\n                return;\n            case 'focusin':\n                this.visible = this.control?.matches(':focus-visible') ?? false;\n                break;\n            case 'focusout':\n            case 'pointerdown':\n                this.visible = false;\n                break;\n        }\n        event[HANDLED_BY_FOCUS_RING] = true;\n    }\n    onControlChange(prev, next) {\n        if (isServer)\n            return;\n        for (const event of EVENTS) {\n            prev?.removeEventListener(event, this);\n            next?.addEventListener(event, this);\n        }\n    }\n    update(changed) {\n        if (changed.has('visible')) {\n            // This logic can be removed once the `:has` selector has been introduced\n            // to Firefox. This is necessary to allow correct submenu styles.\n            this.dispatchEvent(new Event('visibility-changed'));\n        }\n        super.update(changed);\n    }\n}\n__decorate([\n    property({ type: Boolean, reflect: true })\n], FocusRing.prototype, \"visible\", void 0);\n__decorate([\n    property({ type: Boolean, reflect: true })\n], FocusRing.prototype, \"inward\", void 0);\nconst HANDLED_BY_FOCUS_RING = Symbol('handledByFocusRing');\n//# sourceMappingURL=focus-ring.js.map","/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { __decorate } from \"tslib\";\nimport { customElement } from 'lit/decorators.js';\nimport { FocusRing } from './internal/focus-ring.js';\nimport { styles } from './internal/focus-ring-styles.js';\n/**\n * TODO(b/267336424): add docs\n *\n * @final\n * @suppress {visibility}\n */\nlet MdFocusRing = class MdFocusRing extends FocusRing {\n};\nMdFocusRing.styles = [styles];\nMdFocusRing = __decorate([\n    customElement('md-focus-ring')\n], MdFocusRing);\nexport { MdFocusRing };\n//# sourceMappingURL=md-focus-ring.js.map","/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n/**\n * Accessibility Object Model reflective aria properties.\n */\nexport const ARIA_PROPERTIES = [\n    'role',\n    'ariaAtomic',\n    'ariaAutoComplete',\n    'ariaBusy',\n    'ariaChecked',\n    'ariaColCount',\n    'ariaColIndex',\n    'ariaColSpan',\n    'ariaCurrent',\n    'ariaDisabled',\n    'ariaExpanded',\n    'ariaHasPopup',\n    'ariaHidden',\n    'ariaInvalid',\n    'ariaKeyShortcuts',\n    'ariaLabel',\n    'ariaLevel',\n    'ariaLive',\n    'ariaModal',\n    'ariaMultiLine',\n    'ariaMultiSelectable',\n    'ariaOrientation',\n    'ariaPlaceholder',\n    'ariaPosInSet',\n    'ariaPressed',\n    'ariaReadOnly',\n    'ariaRequired',\n    'ariaRoleDescription',\n    'ariaRowCount',\n    'ariaRowIndex',\n    'ariaRowSpan',\n    'ariaSelected',\n    'ariaSetSize',\n    'ariaSort',\n    'ariaValueMax',\n    'ariaValueMin',\n    'ariaValueNow',\n    'ariaValueText',\n];\n/**\n * Accessibility Object Model aria attributes.\n */\nexport const ARIA_ATTRIBUTES = ARIA_PROPERTIES.map(ariaPropertyToAttribute);\n/**\n * Checks if an attribute is one of the AOM aria attributes.\n *\n * @example\n * isAriaAttribute('aria-label'); // true\n *\n * @param attribute The attribute to check.\n * @return True if the attribute is an aria attribute, or false if not.\n */\nexport function isAriaAttribute(attribute) {\n    return ARIA_ATTRIBUTES.includes(attribute);\n}\n/**\n * Converts an AOM aria property into its corresponding attribute.\n *\n * @example\n * ariaPropertyToAttribute('ariaLabel'); // 'aria-label'\n *\n * @param property The aria property.\n * @return The aria attribute.\n */\nexport function ariaPropertyToAttribute(property) {\n    return property\n        .replace('aria', 'aria-')\n        // IDREF attributes also include an \"Element\" or \"Elements\" suffix\n        .replace(/Elements?/g, '')\n        .toLowerCase();\n}\n//# sourceMappingURL=aria.js.map","/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { isServer } from 'lit';\nimport { ARIA_PROPERTIES, ariaPropertyToAttribute, isAriaAttribute, } from './aria.js';\n// Private symbols\nconst privateIgnoreAttributeChangesFor = Symbol('privateIgnoreAttributeChangesFor');\n/**\n * Mixes in aria delegation for elements that delegate focus and aria to inner\n * shadow root elements.\n *\n * This mixin fixes invalid aria announcements with shadow roots, caused by\n * duplicate aria attributes on both the host and the inner shadow root element.\n *\n * Note: this mixin **does not yet support** ID reference attributes, such as\n * `aria-labelledby` or `aria-controls`.\n *\n * @example\n * ```ts\n * class MyButton extends mixinDelegatesAria(LitElement) {\n *   static shadowRootOptions = {mode: 'open', delegatesFocus: true};\n *\n *   render() {\n *     return html`\n *       <button aria-label=${this.ariaLabel || nothing}>\n *         <slot></slot>\n *       </button>\n *     `;\n *   }\n * }\n * ```\n * ```html\n * <my-button aria-label=\"Plus one\">+1</my-button>\n * ```\n *\n * Use `ARIAMixinStrict` for lit analyzer strict types, such as the \"role\"\n * attribute.\n *\n * @example\n * ```ts\n * return html`\n *   <button role=${(this as ARIAMixinStrict).role || nothing}>\n *     <slot></slot>\n *   </button>\n * `;\n * ```\n *\n * In the future, updates to the Accessibility Object Model (AOM) will provide\n * built-in aria delegation features that will replace this mixin.\n *\n * @param base The class to mix functionality into.\n * @return The provided class with aria delegation mixed in.\n */\nexport function mixinDelegatesAria(base) {\n    var _a;\n    if (isServer) {\n        // Don't shift attributes when running with lit-ssr. The SSR renderer\n        // implements a subset of DOM APIs, including the methods this mixin\n        // overrides, causing errors. We don't need to shift on the server anyway\n        // since elements will shift attributes immediately once they hydrate.\n        return base;\n    }\n    class WithDelegatesAriaElement extends base {\n        constructor() {\n            super(...arguments);\n            this[_a] = new Set();\n        }\n        attributeChangedCallback(name, oldValue, newValue) {\n            if (!isAriaAttribute(name)) {\n                super.attributeChangedCallback(name, oldValue, newValue);\n                return;\n            }\n            if (this[privateIgnoreAttributeChangesFor].has(name)) {\n                return;\n            }\n            // Don't trigger another `attributeChangedCallback` once we remove the\n            // aria attribute from the host. We check the explicit name of the\n            // attribute to ignore since `attributeChangedCallback` can be called\n            // multiple times out of an expected order when hydrating an element with\n            // multiple attributes.\n            this[privateIgnoreAttributeChangesFor].add(name);\n            this.removeAttribute(name);\n            this[privateIgnoreAttributeChangesFor].delete(name);\n            const dataProperty = ariaAttributeToDataProperty(name);\n            if (newValue === null) {\n                delete this.dataset[dataProperty];\n            }\n            else {\n                this.dataset[dataProperty] = newValue;\n            }\n            this.requestUpdate(ariaAttributeToDataProperty(name), oldValue);\n        }\n        getAttribute(name) {\n            if (isAriaAttribute(name)) {\n                return super.getAttribute(ariaAttributeToDataAttribute(name));\n            }\n            return super.getAttribute(name);\n        }\n        removeAttribute(name) {\n            super.removeAttribute(name);\n            if (isAriaAttribute(name)) {\n                super.removeAttribute(ariaAttributeToDataAttribute(name));\n                // Since `aria-*` attributes are already removed`, we need to request\n                // an update because `attributeChangedCallback` will not be called.\n                this.requestUpdate();\n            }\n        }\n    }\n    _a = privateIgnoreAttributeChangesFor;\n    setupDelegatesAriaProperties(WithDelegatesAriaElement);\n    return WithDelegatesAriaElement;\n}\n/**\n * Overrides the constructor's native `ARIAMixin` properties to ensure that\n * aria properties reflect the values that were shifted to a data attribute.\n *\n * @param ctor The `ReactiveElement` constructor to patch.\n */\nfunction setupDelegatesAriaProperties(ctor) {\n    for (const ariaProperty of ARIA_PROPERTIES) {\n        // The casing between ariaProperty and the dataProperty may be different.\n        // ex: aria-haspopup -> ariaHasPopup\n        const ariaAttribute = ariaPropertyToAttribute(ariaProperty);\n        // ex: aria-haspopup -> data-aria-haspopup\n        const dataAttribute = ariaAttributeToDataAttribute(ariaAttribute);\n        // ex: aria-haspopup -> dataset.ariaHaspopup\n        const dataProperty = ariaAttributeToDataProperty(ariaAttribute);\n        // Call `ReactiveElement.createProperty()` so that the `aria-*` and `data-*`\n        // attributes are added to the `static observedAttributes` array. This\n        // triggers `attributeChangedCallback` for the delegates aria mixin to\n        // handle.\n        ctor.createProperty(ariaProperty, {\n            attribute: ariaAttribute,\n            noAccessor: true,\n        });\n        ctor.createProperty(Symbol(dataAttribute), {\n            attribute: dataAttribute,\n            noAccessor: true,\n        });\n        // Re-define the `ARIAMixin` properties to handle data attribute shifting.\n        // It is safe to use `Object.defineProperty` here because the properties\n        // are native and not renamed.\n        // tslint:disable-next-line:ban-unsafe-reflection\n        Object.defineProperty(ctor.prototype, ariaProperty, {\n            configurable: true,\n            enumerable: true,\n            get() {\n                return this.dataset[dataProperty] ?? null;\n            },\n            set(value) {\n                const prevValue = this.dataset[dataProperty] ?? null;\n                if (value === prevValue) {\n                    return;\n                }\n                if (value === null) {\n                    delete this.dataset[dataProperty];\n                }\n                else {\n                    this.dataset[dataProperty] = value;\n                }\n                this.requestUpdate(ariaProperty, prevValue);\n            },\n        });\n    }\n}\nfunction ariaAttributeToDataAttribute(ariaAttribute) {\n    // aria-haspopup -> data-aria-haspopup\n    return `data-${ariaAttribute}`;\n}\nfunction ariaAttributeToDataProperty(ariaAttribute) {\n    // aria-haspopup -> dataset.ariaHaspopup\n    return ariaAttribute.replace(/-\\w/, (dashLetter) => dashLetter[1].toUpperCase());\n}\n//# sourceMappingURL=delegate.js.map","/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { isServer } from 'lit';\n/**\n * A key to retrieve an `Attachable` element's `AttachableController` from a\n * global `MutationObserver`.\n */\nconst ATTACHABLE_CONTROLLER = Symbol('attachableController');\nlet FOR_ATTRIBUTE_OBSERVER;\nif (!isServer) {\n    /**\n     * A global `MutationObserver` that reacts to `for` attribute changes on\n     * `Attachable` elements. If the `for` attribute changes, the controller will\n     * re-attach to the new referenced element.\n     */\n    FOR_ATTRIBUTE_OBSERVER = new MutationObserver((records) => {\n        for (const record of records) {\n            // When a control's `for` attribute changes, inform its\n            // `AttachableController` to update to a new control.\n            record.target[ATTACHABLE_CONTROLLER]?.hostConnected();\n        }\n    });\n}\n/**\n * A controller that provides an implementation for `Attachable` elements.\n *\n * @example\n * ```ts\n * class MyElement extends LitElement implements Attachable {\n *   get control() { return this.attachableController.control; }\n *\n *   private readonly attachableController = new AttachableController(\n *     this,\n *     (previousControl, newControl) => {\n *       previousControl?.removeEventListener('click', this.handleClick);\n *       newControl?.addEventListener('click', this.handleClick);\n *     }\n *   );\n *\n *   // Implement remaining `Attachable` properties/methods that call the\n *   // controller's properties/methods.\n * }\n * ```\n */\nexport class AttachableController {\n    get htmlFor() {\n        return this.host.getAttribute('for');\n    }\n    set htmlFor(htmlFor) {\n        if (htmlFor === null) {\n            this.host.removeAttribute('for');\n        }\n        else {\n            this.host.setAttribute('for', htmlFor);\n        }\n    }\n    get control() {\n        if (this.host.hasAttribute('for')) {\n            if (!this.htmlFor || !this.host.isConnected) {\n                return null;\n            }\n            return this.host.getRootNode().querySelector(`#${this.htmlFor}`);\n        }\n        return this.currentControl || this.host.parentElement;\n    }\n    set control(control) {\n        if (control) {\n            this.attach(control);\n        }\n        else {\n            this.detach();\n        }\n    }\n    /**\n     * Creates a new controller for an `Attachable` element.\n     *\n     * @param host The `Attachable` element.\n     * @param onControlChange A callback with two parameters for the previous and\n     *     next control. An `Attachable` element may perform setup or teardown\n     *     logic whenever the control changes.\n     */\n    constructor(host, onControlChange) {\n        this.host = host;\n        this.onControlChange = onControlChange;\n        this.currentControl = null;\n        host.addController(this);\n        host[ATTACHABLE_CONTROLLER] = this;\n        FOR_ATTRIBUTE_OBSERVER?.observe(host, { attributeFilter: ['for'] });\n    }\n    attach(control) {\n        if (control === this.currentControl) {\n            return;\n        }\n        this.setCurrentControl(control);\n        // When imperatively attaching, remove the `for` attribute so\n        // that the attached control is used instead of a referenced one.\n        this.host.removeAttribute('for');\n    }\n    detach() {\n        this.setCurrentControl(null);\n        // When imperatively detaching, add an empty `for=\"\"` attribute. This will\n        // ensure the control is `null` rather than the `parentElement`.\n        this.host.setAttribute('for', '');\n    }\n    /** @private */\n    hostConnected() {\n        this.setCurrentControl(this.control);\n    }\n    /** @private */\n    hostDisconnected() {\n        this.setCurrentControl(null);\n    }\n    setCurrentControl(control) {\n        this.onControlChange(this.currentControl, control);\n        this.currentControl = control;\n    }\n}\n//# sourceMappingURL=attachable-controller.js.map","/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n/**\n * Dispatches a click event to the given element that triggers a native action,\n * but is not composed and therefore is not seen outside the element.\n *\n * This is useful for responding to an external click event on the host element\n * that should trigger an internal action like a button click.\n *\n * Note, a helper is provided because setting this up correctly is a bit tricky.\n * In particular, calling `click` on an element creates a composed event, which\n * is not desirable, and a manually dispatched event must specifically be a\n * `MouseEvent` to trigger a native action.\n *\n * @example\n * hostClickListener = (event: MouseEvent) {\n *   if (isActivationClick(event)) {\n *     this.dispatchActivationClick(this.buttonElement);\n *   }\n * }\n *\n */\nexport function dispatchActivationClick(element) {\n    const event = new MouseEvent('click', { bubbles: true });\n    element.dispatchEvent(event);\n    return event;\n}\n/**\n * Returns true if the click event should trigger an activation behavior. The\n * behavior is defined by the element and is whatever it should do when\n * clicked.\n *\n * Typically when an element needs to handle a click, the click is generated\n * from within the element and an event listener within the element implements\n * the needed behavior; however, it's possible to fire a click directly\n * at the element that the element should handle. This method helps\n * distinguish these \"external\" clicks.\n *\n * An \"external\" click can be triggered in a number of ways: via a click\n * on an associated label for a form  associated element, calling\n * `element.click()`, or calling\n * `element.dispatchEvent(new MouseEvent('click', ...))`.\n *\n * Also works around Firefox issue\n * https://bugzilla.mozilla.org/show_bug.cgi?id=1804576 by squelching\n * events for a microtask after called.\n *\n * @example\n * hostClickListener = (event: MouseEvent) {\n *   if (isActivationClick(event)) {\n *     this.dispatchActivationClick(this.buttonElement);\n *   }\n * }\n *\n */\nexport function isActivationClick(event) {\n    // Event must start at the event target.\n    if (event.currentTarget !== event.target) {\n        return false;\n    }\n    // Event must not be retargeted from shadowRoot.\n    if (event.composedPath()[0] !== event.target) {\n        return false;\n    }\n    // Target must not be disabled; this should only occur for a synthetically\n    // dispatched click.\n    if (event.target.disabled) {\n        return false;\n    }\n    // This is an activation if the event should not be squelched.\n    return !squelchEvent(event);\n}\n// TODO(https://bugzilla.mozilla.org/show_bug.cgi?id=1804576)\n//  Remove when Firefox bug is addressed.\nfunction squelchEvent(event) {\n    const squelched = isSquelchingEvents;\n    if (squelched) {\n        event.preventDefault();\n        event.stopImmediatePropagation();\n    }\n    squelchEventsForMicrotask();\n    return squelched;\n}\n// Ignore events for one microtask only.\nlet isSquelchingEvents = false;\nasync function squelchEventsForMicrotask() {\n    isSquelchingEvents = true;\n    // Need to pause for just one microtask.\n    // tslint:disable-next-line\n    await null;\n    isSquelchingEvents = false;\n}\n//# sourceMappingURL=form-label-activation.js.map","/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n/**\n * Re-dispatches an event from the provided element.\n *\n * This function is useful for forwarding non-composed events, such as `change`\n * events.\n *\n * @example\n * class MyInput extends LitElement {\n *   render() {\n *     return html`<input @change=${this.redispatchEvent}>`;\n *   }\n *\n *   protected redispatchEvent(event: Event) {\n *     redispatchEvent(this, event);\n *   }\n * }\n *\n * @param element The element to dispatch the event from.\n * @param event The event to re-dispatch.\n * @return Whether or not the event was dispatched (if cancelable).\n */\nexport function redispatchEvent(element, event) {\n    // For bubbling events in SSR light DOM (or composed), stop their propagation\n    // and dispatch the copy.\n    if (event.bubbles && (!element.shadowRoot || event.composed)) {\n        event.stopPropagation();\n    }\n    const copy = Reflect.construct(event.constructor, [event.type, event]);\n    const dispatched = element.dispatchEvent(copy);\n    if (!dispatched) {\n        event.preventDefault();\n    }\n    return dispatched;\n}\n//# sourceMappingURL=redispatch-event.js.map","/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n/**\n * Easing functions to use for web animations.\n *\n * **NOTE:** `EASING.EMPHASIZED` is approximated with unknown accuracy.\n *\n * TODO(b/241113345): replace with tokens\n */\nexport const EASING = {\n    STANDARD: 'cubic-bezier(0.2, 0, 0, 1)',\n    STANDARD_ACCELERATE: 'cubic-bezier(.3,0,1,1)',\n    STANDARD_DECELERATE: 'cubic-bezier(0,0,0,1)',\n    EMPHASIZED: 'cubic-bezier(.3,0,0,1)',\n    EMPHASIZED_ACCELERATE: 'cubic-bezier(.3,0,.8,.15)',\n    EMPHASIZED_DECELERATE: 'cubic-bezier(.05,.7,.1,1)',\n};\n/**\n * Creates an `AnimationSignal` that can be used to cancel a previous task.\n *\n * @example\n * class MyClass {\n *   private labelAnimationSignal = createAnimationSignal();\n *\n *   private async animateLabel() {\n *     // Start of the task. Previous tasks will be canceled.\n *     const signal = this.labelAnimationSignal.start();\n *\n *     // Do async work...\n *     if (signal.aborted) {\n *       // Use AbortSignal to check if a request was made to abort after some\n *       // asynchronous work.\n *       return;\n *     }\n *\n *     const animation = this.animate(...);\n *     // Add event listeners to be notified when the task should be canceled.\n *     signal.addEventListener('abort', () => {\n *       animation.cancel();\n *     });\n *\n *     animation.addEventListener('finish', () => {\n *       // Tell the signal that the current task is finished.\n *       this.labelAnimationSignal.finish();\n *     });\n *   }\n * }\n *\n * @return An `AnimationSignal`.\n */\nexport function createAnimationSignal() {\n    // The current animation's AbortController\n    let animationAbortController = null;\n    return {\n        start() {\n            // Tell the previous animation to cancel.\n            animationAbortController?.abort();\n            // Set up a new AbortController for the current animation.\n            animationAbortController = new AbortController();\n            // Provide the AbortSignal so that the caller can check aborted status\n            // and add listeners.\n            return animationAbortController.signal;\n        },\n        finish() {\n            animationAbortController = null;\n        },\n    };\n}\n/**\n * Returns a function which can be used to throttle function calls\n * mapped to a key via a given function that should produce a promise that\n * determines the throttle amount (defaults to requestAnimationFrame).\n */\nexport function createThrottle() {\n    const stack = new Set();\n    return async (key = '', cb, timeout = async () => {\n        await new Promise(requestAnimationFrame);\n    }) => {\n        if (!stack.has(key)) {\n            stack.add(key);\n            await timeout();\n            if (stack.has(key)) {\n                stack.delete(key);\n                cb();\n            }\n        }\n    };\n}\n/**\n * Parses an number in milliseconds from a css time value\n */\nexport function msFromTimeCSSValue(value) {\n    const match = value.trim().match(/([\\d.]+)(\\s*s$)?/);\n    const time = match?.[1];\n    const seconds = match?.[2];\n    return Number(time ?? 0) * (seconds ? 1000 : 1);\n}\n//# sourceMappingURL=animation.js.map","/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { isServer } from 'lit';\nimport { internals } from './element-internals.js';\n/**\n * A symbol property used to create a constraint validation `Validator`.\n * Required for all `mixinConstraintValidation()` elements.\n */\nexport const createValidator = Symbol('createValidator');\n/**\n * A symbol property used to return an anchor for constraint validation popups.\n * Required for all `mixinConstraintValidation()` elements.\n */\nexport const getValidityAnchor = Symbol('getValidityAnchor');\n// Private symbol members, used to avoid name clashing.\nconst privateValidator = Symbol('privateValidator');\nconst privateSyncValidity = Symbol('privateSyncValidity');\nconst privateCustomValidationMessage = Symbol('privateCustomValidationMessage');\n/**\n * Mixes in constraint validation APIs for an element.\n *\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/Constraint_validation\n * for more details.\n *\n * Implementations must provide a validator to cache and compute its validity,\n * along with a shadow root element to anchor validation popups to.\n *\n * @example\n * ```ts\n * const baseClass = mixinConstraintValidation(\n *   mixinFormAssociated(mixinElementInternals(LitElement))\n * );\n *\n * class MyCheckbox extends baseClass {\n *   \\@property({type: Boolean}) checked = false;\n *   \\@property({type: Boolean}) required = false;\n *\n *   [createValidator]() {\n *     return new CheckboxValidator(() => this);\n *   }\n *\n *   [getValidityAnchor]() {\n *     return this.renderRoot.querySelector('.root');\n *   }\n * }\n * ```\n *\n * @param base The class to mix functionality into.\n * @return The provided class with `ConstraintValidation` mixed in.\n */\nexport function mixinConstraintValidation(base) {\n    var _a;\n    class ConstraintValidationElement extends base {\n        constructor() {\n            super(...arguments);\n            /**\n             * Needed for Safari, see https://bugs.webkit.org/show_bug.cgi?id=261432\n             * Replace with this[internals].validity.customError when resolved.\n             */\n            this[_a] = '';\n        }\n        get validity() {\n            this[privateSyncValidity]();\n            return this[internals].validity;\n        }\n        get validationMessage() {\n            this[privateSyncValidity]();\n            return this[internals].validationMessage;\n        }\n        get willValidate() {\n            this[privateSyncValidity]();\n            return this[internals].willValidate;\n        }\n        checkValidity() {\n            this[privateSyncValidity]();\n            return this[internals].checkValidity();\n        }\n        reportValidity() {\n            this[privateSyncValidity]();\n            return this[internals].reportValidity();\n        }\n        setCustomValidity(error) {\n            this[privateCustomValidationMessage] = error;\n            this[privateSyncValidity]();\n        }\n        requestUpdate(name, oldValue, options) {\n            super.requestUpdate(name, oldValue, options);\n            this[privateSyncValidity]();\n        }\n        firstUpdated(changed) {\n            super.firstUpdated(changed);\n            // Sync the validity again when the element first renders, since the\n            // validity anchor is now available.\n            //\n            // Elements that `delegatesFocus: true` to an `<input>` will throw an\n            // error in Chrome and Safari when a form tries to submit or call\n            // `form.reportValidity()`:\n            // \"An invalid form control with name='' is not focusable\"\n            //\n            // The validity anchor MUST be provided in `internals.setValidity()` and\n            // MUST be the `<input>` element rendered.\n            //\n            // See https://lit.dev/playground/#gist=6c26e418e0010f7a5aac15005cde8bde\n            // for a reproduction.\n            this[privateSyncValidity]();\n        }\n        [(_a = privateCustomValidationMessage, privateSyncValidity)]() {\n            if (isServer) {\n                return;\n            }\n            if (!this[privateValidator]) {\n                this[privateValidator] = this[createValidator]();\n            }\n            const { validity, validationMessage: nonCustomValidationMessage } = this[privateValidator].getValidity();\n            const customError = !!this[privateCustomValidationMessage];\n            const validationMessage = this[privateCustomValidationMessage] || nonCustomValidationMessage;\n            this[internals].setValidity({ ...validity, customError }, validationMessage, this[getValidityAnchor]() ?? undefined);\n        }\n        [createValidator]() {\n            throw new Error('Implement [createValidator]');\n        }\n        [getValidityAnchor]() {\n            throw new Error('Implement [getValidityAnchor]');\n        }\n    }\n    return ConstraintValidationElement;\n}\n//# sourceMappingURL=constraint-validation.js.map","/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n/**\n * A unique symbol used for protected access to an instance's\n * `ElementInternals`.\n *\n * @example\n * ```ts\n * class MyElement extends mixinElementInternals(LitElement) {\n *   constructor() {\n *     super();\n *     this[internals].role = 'button';\n *   }\n * }\n * ```\n */\nexport const internals = Symbol('internals');\n// Private symbols\nconst privateInternals = Symbol('privateInternals');\n/**\n * Mixes in an attached `ElementInternals` instance.\n *\n * This mixin is only needed when other shared code needs access to a\n * component's `ElementInternals`, such as form-associated mixins.\n *\n * @param base The class to mix functionality into.\n * @return The provided class with `WithElementInternals` mixed in.\n */\nexport function mixinElementInternals(base) {\n    class WithElementInternalsElement extends base {\n        get [internals]() {\n            // Create internals in getter so that it can be used in methods called on\n            // construction in `ReactiveElement`, such as `requestUpdate()`.\n            if (!this[privateInternals]) {\n                // Cast needed for closure\n                this[privateInternals] = this.attachInternals();\n            }\n            return this[privateInternals];\n        }\n    }\n    return WithElementInternalsElement;\n}\n//# sourceMappingURL=element-internals.js.map","/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { __decorate } from \"tslib\";\nimport { property } from 'lit/decorators.js';\n/**\n * A property symbol that indicates whether or not a `Focusable` element can be\n * focused.\n */\nexport const isFocusable = Symbol('isFocusable');\nconst privateIsFocusable = Symbol('privateIsFocusable');\nconst externalTabIndex = Symbol('externalTabIndex');\nconst isUpdatingTabIndex = Symbol('isUpdatingTabIndex');\nconst updateTabIndex = Symbol('updateTabIndex');\n/**\n * Mixes in focusable functionality for a class.\n *\n * Elements can enable and disable their focusability with the `isFocusable`\n * symbol property. Changing `tabIndex` will trigger a lit render, meaning\n * `this.tabIndex` can be used in template expressions.\n *\n * This mixin will preserve externally-set tabindices. If an element turns off\n * focusability, but a user sets `tabindex=\"0\"`, it will still be focusable.\n *\n * To remove user overrides and restore focusability control to the element,\n * remove the `tabindex` attribute.\n *\n * @param base The class to mix functionality into.\n * @return The provided class with `Focusable` mixed in.\n */\nexport function mixinFocusable(base) {\n    var _a, _b, _c;\n    class FocusableElement extends base {\n        constructor() {\n            super(...arguments);\n            this[_a] = true;\n            this[_b] = null;\n            this[_c] = false;\n        }\n        get [isFocusable]() {\n            return this[privateIsFocusable];\n        }\n        set [isFocusable](value) {\n            if (this[isFocusable] === value) {\n                return;\n            }\n            this[privateIsFocusable] = value;\n            this[updateTabIndex]();\n        }\n        connectedCallback() {\n            super.connectedCallback();\n            this[updateTabIndex]();\n        }\n        attributeChangedCallback(name, old, value) {\n            if (name !== 'tabindex') {\n                super.attributeChangedCallback(name, old, value);\n                return;\n            }\n            this.requestUpdate('tabIndex', Number(old ?? -1));\n            if (this[isUpdatingTabIndex]) {\n                // Not an externally-initiated update.\n                return;\n            }\n            if (!this.hasAttribute('tabindex')) {\n                // User removed the attribute, can now use internal tabIndex\n                this[externalTabIndex] = null;\n                this[updateTabIndex]();\n                return;\n            }\n            this[externalTabIndex] = this.tabIndex;\n        }\n        [(_a = privateIsFocusable, _b = externalTabIndex, _c = isUpdatingTabIndex, updateTabIndex)]() {\n            const internalTabIndex = this[isFocusable] ? 0 : -1;\n            const computedTabIndex = this[externalTabIndex] ?? internalTabIndex;\n            this[isUpdatingTabIndex] = true;\n            this.tabIndex = computedTabIndex;\n            this[isUpdatingTabIndex] = false;\n        }\n    }\n    __decorate([\n        property({ noAccessor: true })\n    ], FocusableElement.prototype, \"tabIndex\", void 0);\n    return FocusableElement;\n}\n//# sourceMappingURL=focusable.js.map","/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { __decorate } from \"tslib\";\nimport { property } from 'lit/decorators.js';\nimport { internals } from './element-internals.js';\n/**\n * A symbol property to retrieve the form value for an element.\n */\nexport const getFormValue = Symbol('getFormValue');\n/**\n * A symbol property to retrieve the form state for an element.\n */\nexport const getFormState = Symbol('getFormState');\n/**\n * Mixes in form-associated behavior for a class. This allows an element to add\n * values to `<form>` elements.\n *\n * Implementing classes should provide a `[formValue]` to return the current\n * value of the element, as well as reset and restore callbacks.\n *\n * @example\n * ```ts\n * const base = mixinFormAssociated(mixinElementInternals(LitElement));\n *\n * class MyControl extends base {\n *   \\@property()\n *   value = '';\n *\n *   override [getFormValue]() {\n *     return this.value;\n *   }\n *\n *   override formResetCallback() {\n *     const defaultValue = this.getAttribute('value');\n *     this.value = defaultValue;\n *   }\n *\n *   override formStateRestoreCallback(state: string) {\n *     this.value = state;\n *   }\n * }\n * ```\n *\n * Elements may optionally provide a `[formState]` if their values do not\n * represent the state of the component.\n *\n * @example\n * ```ts\n * const base = mixinFormAssociated(mixinElementInternals(LitElement));\n *\n * class MyCheckbox extends base {\n *   \\@property()\n *   value = 'on';\n *\n *   \\@property({type: Boolean})\n *   checked = false;\n *\n *   override [getFormValue]() {\n *     return this.checked ? this.value : null;\n *   }\n *\n *   override [getFormState]() {\n *     return String(this.checked);\n *   }\n *\n *   override formResetCallback() {\n *     const defaultValue = this.hasAttribute('checked');\n *     this.checked = defaultValue;\n *   }\n *\n *   override formStateRestoreCallback(state: string) {\n *     this.checked = Boolean(state);\n *   }\n * }\n * ```\n *\n * IMPORTANT: Requires declares for lit-analyzer\n * @example\n * ```ts\n * const base = mixinFormAssociated(mixinElementInternals(LitElement));\n * class MyControl extends base {\n *   // Writable mixin properties for lit-html binding, needed for lit-analyzer\n *   declare disabled: boolean;\n *   declare name: string;\n * }\n * ```\n *\n * @param base The class to mix functionality into. The base class must use\n *     `mixinElementInternals()`.\n * @return The provided class with `FormAssociated` mixed in.\n */\nexport function mixinFormAssociated(base) {\n    class FormAssociatedElement extends base {\n        get form() {\n            return this[internals].form;\n        }\n        get labels() {\n            return this[internals].labels;\n        }\n        // Use @property for the `name` and `disabled` properties to add them to the\n        // `observedAttributes` array and trigger `attributeChangedCallback()`.\n        //\n        // We don't use Lit's default getter/setter (`noAccessor: true`) because\n        // the attributes need to be updated synchronously to work with synchronous\n        // form APIs, and Lit updates attributes async by default.\n        get name() {\n            return this.getAttribute('name') ?? '';\n        }\n        set name(name) {\n            // Note: setting name to null or empty does not remove the attribute.\n            this.setAttribute('name', name);\n            // We don't need to call `requestUpdate()` since it's called synchronously\n            // in `attributeChangedCallback()`.\n        }\n        get disabled() {\n            return this.hasAttribute('disabled');\n        }\n        set disabled(disabled) {\n            this.toggleAttribute('disabled', disabled);\n            // We don't need to call `requestUpdate()` since it's called synchronously\n            // in `attributeChangedCallback()`.\n        }\n        attributeChangedCallback(name, old, value) {\n            // Manually `requestUpdate()` for `name` and `disabled` when their\n            // attribute or property changes.\n            // The properties update their attributes, so this callback is invoked\n            // immediately when the properties are set. We call `requestUpdate()` here\n            // instead of letting Lit set the properties from the attribute change.\n            // That would cause the properties to re-set the attribute and invoke this\n            // callback again in a loop. This leads to stale state when Lit tries to\n            // determine if a property changed or not.\n            if (name === 'name' || name === 'disabled') {\n                // Disabled's value is only false if the attribute is missing and null.\n                const oldValue = name === 'disabled' ? old !== null : old;\n                // Trigger a lit update when the attribute changes.\n                this.requestUpdate(name, oldValue);\n                return;\n            }\n            super.attributeChangedCallback(name, old, value);\n        }\n        requestUpdate(name, oldValue, options) {\n            super.requestUpdate(name, oldValue, options);\n            // If any properties change, update the form value, which may have changed\n            // as well.\n            // Update the form value synchronously in `requestUpdate()` rather than\n            // `update()` or `updated()`, which are async. This is necessary to ensure\n            // that form data is updated in time for synchronous event listeners.\n            this[internals].setFormValue(this[getFormValue](), this[getFormState]());\n        }\n        [getFormValue]() {\n            // Closure does not allow abstract symbol members, so a default\n            // implementation is needed.\n            throw new Error('Implement [getFormValue]');\n        }\n        [getFormState]() {\n            return this[getFormValue]();\n        }\n        formDisabledCallback(disabled) {\n            this.disabled = disabled;\n        }\n    }\n    /** @nocollapse */\n    FormAssociatedElement.formAssociated = true;\n    __decorate([\n        property({ noAccessor: true })\n    ], FormAssociatedElement.prototype, \"name\", null);\n    __decorate([\n        property({ type: Boolean, noAccessor: true })\n    ], FormAssociatedElement.prototype, \"disabled\", null);\n    return FormAssociatedElement;\n}\n//# sourceMappingURL=form-associated.js.map","/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { isServer } from 'lit';\nimport { internals } from './element-internals.js';\n/**\n * A symbol property used for a callback when validity has been reported.\n */\nexport const onReportValidity = Symbol('onReportValidity');\n// Private symbol members, used to avoid name clashing.\nconst privateCleanupFormListeners = Symbol('privateCleanupFormListeners');\nconst privateDoNotReportInvalid = Symbol('privateDoNotReportInvalid');\nconst privateIsSelfReportingValidity = Symbol('privateIsSelfReportingValidity');\nconst privateCallOnReportValidity = Symbol('privateCallOnReportValidity');\n/**\n * Mixes in a callback for constraint validation when validity should be\n * styled and reported to the user.\n *\n * This is commonly used in text-field-like controls that display error styles\n * and error messages.\n *\n * @example\n * ```ts\n * const baseClass = mixinOnReportValidity(\n *   mixinConstraintValidation(\n *     mixinFormAssociated(mixinElementInternals(LitElement)),\n *   ),\n * );\n *\n * class MyField extends baseClass {\n *   \\@property({type: Boolean}) error = false;\n *   \\@property() errorMessage = '';\n *\n *   [onReportValidity](invalidEvent: Event | null) {\n *     this.error = !!invalidEvent;\n *     this.errorMessage = this.validationMessage;\n *\n *     // Optionally prevent platform popup from displaying\n *     invalidEvent?.preventDefault();\n *   }\n * }\n * ```\n *\n * @param base The class to mix functionality into.\n * @return The provided class with `OnReportValidity` mixed in.\n */\nexport function mixinOnReportValidity(base) {\n    var _a, _b, _c;\n    class OnReportValidityElement extends base {\n        // Mixins must have a constructor with `...args: any[]`\n        // tslint:disable-next-line:no-any\n        constructor(...args) {\n            super(...args);\n            /**\n             * Used to clean up event listeners when a new form is associated.\n             */\n            this[_a] = new AbortController();\n            /**\n             * Used to determine if an invalid event should report validity. Invalid\n             * events from `checkValidity()` do not trigger reporting.\n             */\n            this[_b] = false;\n            /**\n             * Used to determine if the control is reporting validity from itself, or\n             * if a `<form>` is causing the validity report. Forms have different\n             * control focusing behavior.\n             */\n            this[_c] = false;\n            if (isServer) {\n                return;\n            }\n            this.addEventListener('invalid', (invalidEvent) => {\n                // Listen for invalid events dispatched by a `<form>` when it tries to\n                // submit and the element is invalid. We ignore events dispatched when\n                // calling `checkValidity()` as well as untrusted events, since the\n                // `reportValidity()` and `<form>`-dispatched events are always\n                // trusted.\n                if (this[privateDoNotReportInvalid] || !invalidEvent.isTrusted) {\n                    return;\n                }\n                this.addEventListener('invalid', () => {\n                    // A normal bubbling phase event listener. By adding it here, we\n                    // ensure it's the last event listener that is called during the\n                    // bubbling phase.\n                    this[privateCallOnReportValidity](invalidEvent);\n                }, { once: true });\n            }, {\n                // Listen during the capture phase, which will happen before the\n                // bubbling phase. That way, we can add a final event listener that\n                // will run after other event listeners, and we can check if it was\n                // default prevented. This works because invalid does not bubble.\n                capture: true,\n            });\n        }\n        checkValidity() {\n            this[privateDoNotReportInvalid] = true;\n            const valid = super.checkValidity();\n            this[privateDoNotReportInvalid] = false;\n            return valid;\n        }\n        reportValidity() {\n            this[privateIsSelfReportingValidity] = true;\n            const valid = super.reportValidity();\n            // Constructor's invalid listener will handle reporting invalid events.\n            if (valid) {\n                this[privateCallOnReportValidity](null);\n            }\n            this[privateIsSelfReportingValidity] = false;\n            return valid;\n        }\n        [(_a = privateCleanupFormListeners, _b = privateDoNotReportInvalid, _c = privateIsSelfReportingValidity, privateCallOnReportValidity)](invalidEvent) {\n            // Since invalid events do not bubble to parent listeners, and because\n            // our invalid listeners are added lazily after other listeners, we can\n            // reliably read `defaultPrevented` synchronously without worrying\n            // about waiting for another listener that could cancel it.\n            const wasCanceled = invalidEvent?.defaultPrevented;\n            if (wasCanceled) {\n                return;\n            }\n            this[onReportValidity](invalidEvent);\n            // If an implementation calls invalidEvent.preventDefault() to stop the\n            // platform popup from displaying, focusing is also prevented, so we need\n            // to manually focus.\n            const implementationCanceledFocus = !wasCanceled && invalidEvent?.defaultPrevented;\n            if (!implementationCanceledFocus) {\n                return;\n            }\n            // The control should be focused when:\n            // - `control.reportValidity()` is called (self-reporting).\n            // - a form is reporting validity for its controls and this is the first\n            //   invalid control.\n            if (this[privateIsSelfReportingValidity] ||\n                isFirstInvalidControlInForm(this[internals].form, this)) {\n                this.focus();\n            }\n        }\n        [onReportValidity](invalidEvent) {\n            throw new Error('Implement [onReportValidity]');\n        }\n        formAssociatedCallback(form) {\n            // can't use super.formAssociatedCallback?.() due to closure\n            if (super.formAssociatedCallback) {\n                super.formAssociatedCallback(form);\n            }\n            // Clean up previous form listeners.\n            this[privateCleanupFormListeners].abort();\n            if (!form) {\n                return;\n            }\n            this[privateCleanupFormListeners] = new AbortController();\n            // Add a listener that fires when the form runs constraint validation and\n            // the control is valid, so that it may remove its error styles.\n            //\n            // This happens on `form.reportValidity()` and `form.requestSubmit()`\n            // (both when the submit fails and passes).\n            addFormReportValidListener(this, form, () => {\n                this[privateCallOnReportValidity](null);\n            }, this[privateCleanupFormListeners].signal);\n        }\n    }\n    return OnReportValidityElement;\n}\n/**\n * Add a listener that fires when a form runs constraint validation on a control\n * and it is valid. This is needed to clear previously invalid styles.\n *\n * @param control The control of the form to listen for valid events.\n * @param form The control's form that can run constraint validation.\n * @param onControlValid A listener that is called when the form runs constraint\n *     validation and the control is valid.\n * @param cleanup A cleanup signal to remove the listener.\n */\nfunction addFormReportValidListener(control, form, onControlValid, cleanup) {\n    const validateHooks = getFormValidateHooks(form);\n    // When a form validates its controls, check if an invalid event is dispatched\n    // on the control. If it is not, then inform the control to report its valid\n    // state.\n    let controlFiredInvalid = false;\n    let cleanupInvalidListener;\n    let isNextSubmitFromHook = false;\n    validateHooks.addEventListener('before', () => {\n        isNextSubmitFromHook = true;\n        cleanupInvalidListener = new AbortController();\n        controlFiredInvalid = false;\n        control.addEventListener('invalid', () => {\n            controlFiredInvalid = true;\n        }, {\n            signal: cleanupInvalidListener.signal,\n        });\n    }, { signal: cleanup });\n    validateHooks.addEventListener('after', () => {\n        isNextSubmitFromHook = false;\n        cleanupInvalidListener?.abort();\n        if (controlFiredInvalid) {\n            return;\n        }\n        onControlValid();\n    }, { signal: cleanup });\n    // The above hooks handle imperatively submitting the form, but not\n    // declaratively submitting the form. This happens when:\n    // 1. A non-custom element `<button type=\"submit\">` is clicked.\n    // 2. Enter is pressed on a non-custom element text editable `<input>`.\n    form.addEventListener('submit', () => {\n        // This submit was from `form.requestSubmit()`, which already calls the\n        // listener.\n        if (isNextSubmitFromHook) {\n            return;\n        }\n        onControlValid();\n    }, {\n        signal: cleanup,\n    });\n    // Note: it is a known limitation that we cannot detect if a form tries to\n    // submit declaratively, but fails to do so because an unrelated sibling\n    // control failed its constraint validation.\n    //\n    // Since we cannot detect when that happens, a previously invalid control may\n    // not clear its error styling when it becomes valid again.\n    //\n    // To work around this, call `form.reportValidity()` when submitting a form\n    // declaratively. This can be down on the `<button type=\"submit\">`'s click or\n    // the text editable `<input>`'s 'Enter' keydown.\n}\nconst FORM_VALIDATE_HOOKS = new WeakMap();\n/**\n * Get a hooks `EventTarget` that dispatches 'before' and 'after' events that\n * fire before a form runs constraint validation and immediately after it\n * finishes running constraint validation on its controls.\n *\n * This happens during `form.reportValidity()` and `form.requestSubmit()`.\n *\n * @param form The form to get or set up hooks for.\n * @return A hooks `EventTarget` to add listeners to.\n */\nfunction getFormValidateHooks(form) {\n    if (!FORM_VALIDATE_HOOKS.has(form)) {\n        // Patch form methods to add event listener hooks. These are needed to react\n        // to form behaviors that do not dispatch events, such as a form asking its\n        // controls to report their validity.\n        //\n        // We should only patch the methods once, since multiple controls and other\n        // forces may want to patch this method. We cannot reliably clean it up if\n        // there are multiple patched and re-patched methods referring holding\n        // references to each other.\n        //\n        // Instead, we never clean up the patch but add and clean up event listeners\n        // added to the hooks after the patch.\n        const hooks = new EventTarget();\n        FORM_VALIDATE_HOOKS.set(form, hooks);\n        // Add hooks to support notifying before and after a form has run constraint\n        // validation on its controls.\n        // Note: `form.submit()` does not run constraint validation per spec.\n        for (const methodName of ['reportValidity', 'requestSubmit']) {\n            const superMethod = form[methodName];\n            form[methodName] = function () {\n                hooks.dispatchEvent(new Event('before'));\n                const result = Reflect.apply(superMethod, this, arguments);\n                hooks.dispatchEvent(new Event('after'));\n                return result;\n            };\n        }\n    }\n    return FORM_VALIDATE_HOOKS.get(form);\n}\n/**\n * Checks if a control is the first invalid control in a form.\n *\n * @param form The control's form. When `null`, the control doesn't have a form\n *     and the method returns true.\n * @param control The control to check.\n * @return True if there is no form or if the control is the form's first\n *     invalid control.\n */\nfunction isFirstInvalidControlInForm(form, control) {\n    if (!form) {\n        return true;\n    }\n    let firstInvalidControl;\n    for (const element of form.elements) {\n        if (element.matches(':invalid')) {\n            firstInvalidControl = element;\n            break;\n        }\n    }\n    return firstInvalidControl === control;\n}\n//# sourceMappingURL=on-report-validity.js.map","/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { Validator } from './validator.js';\n/**\n * A validator that provides constraint validation that emulates\n * `<input type=\"checkbox\">` validation.\n */\nexport class CheckboxValidator extends Validator {\n    computeValidity(state) {\n        if (!this.checkboxControl) {\n            // Lazily create the platform input\n            this.checkboxControl = document.createElement('input');\n            this.checkboxControl.type = 'checkbox';\n        }\n        this.checkboxControl.checked = state.checked;\n        this.checkboxControl.required = state.required;\n        return {\n            validity: this.checkboxControl.validity,\n            validationMessage: this.checkboxControl.validationMessage,\n        };\n    }\n    equals(prev, next) {\n        return prev.checked === next.checked && prev.required === next.required;\n    }\n    copy({ checked, required }) {\n        return { checked, required };\n    }\n}\n//# sourceMappingURL=checkbox-validator.js.map","/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { Validator } from './validator.js';\n/**\n * A validator that provides constraint validation that emulates\n * `<input type=\"radio\">` validation.\n */\nexport class RadioValidator extends Validator {\n    computeValidity(states) {\n        if (!this.radioElement) {\n            // Lazily create the radio element\n            this.radioElement = document.createElement('input');\n            this.radioElement.type = 'radio';\n            // A name is required for validation to run\n            this.radioElement.name = 'group';\n        }\n        let isRequired = false;\n        let isChecked = false;\n        for (const { checked, required } of states) {\n            if (required) {\n                isRequired = true;\n            }\n            if (checked) {\n                isChecked = true;\n            }\n        }\n        // Firefox v119 doesn't compute grouped radio validation correctly while\n        // they are detached from the DOM, which is why we don't render multiple\n        // virtual <input>s. Instead, we can check the required/checked states and\n        // grab the i18n'd validation message if the value is missing.\n        this.radioElement.checked = isChecked;\n        this.radioElement.required = isRequired;\n        return {\n            validity: {\n                valueMissing: isRequired && !isChecked,\n            },\n            validationMessage: this.radioElement.validationMessage,\n        };\n    }\n    equals(prevGroup, nextGroup) {\n        if (prevGroup.length !== nextGroup.length) {\n            return false;\n        }\n        for (let i = 0; i < prevGroup.length; i++) {\n            const prev = prevGroup[i];\n            const next = nextGroup[i];\n            if (prev.checked !== next.checked || prev.required !== next.required) {\n                return false;\n            }\n        }\n        return true;\n    }\n    copy(states) {\n        // Cast as unknown since typescript does not have enough information to\n        // infer that the array always has at least one element.\n        return states.map(({ checked, required }) => ({\n            checked,\n            required,\n        }));\n    }\n}\n//# sourceMappingURL=radio-validator.js.map","/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { html, render } from 'lit';\nimport { Validator } from './validator.js';\n/**\n * A validator that provides constraint validation that emulates `<select>`\n * validation.\n */\nexport class SelectValidator extends Validator {\n    computeValidity(state) {\n        if (!this.selectControl) {\n            // Lazily create the platform select\n            this.selectControl = document.createElement('select');\n        }\n        render(html `<option value=${state.value}></option>`, this.selectControl);\n        this.selectControl.value = state.value;\n        this.selectControl.required = state.required;\n        return {\n            validity: this.selectControl.validity,\n            validationMessage: this.selectControl.validationMessage,\n        };\n    }\n    equals(prev, next) {\n        return prev.value === next.value && prev.required === next.required;\n    }\n    copy({ value, required }) {\n        return { value, required };\n    }\n}\n//# sourceMappingURL=select-validator.js.map","/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n/**\n * A class that computes and caches `ValidityStateFlags` for a component with\n * a given `State` interface.\n *\n * Cached performance before computing validity is important since constraint\n * validation must be checked frequently and synchronously when properties\n * change.\n *\n * @template State The expected interface of properties relevant to constraint\n *     validation.\n */\nexport class Validator {\n    /**\n     * Creates a new validator.\n     *\n     * @param getCurrentState A callback that returns the current state of\n     *     constraint validation-related properties.\n     */\n    constructor(getCurrentState) {\n        this.getCurrentState = getCurrentState;\n        /**\n         * The current validity state and message. This is cached and returns if\n         * constraint validation state does not change.\n         */\n        this.currentValidity = {\n            validity: {},\n            validationMessage: '',\n        };\n    }\n    /**\n     * Returns the current `ValidityStateFlags` and validation message for the\n     * validator.\n     *\n     * If the constraint validation state has not changed, this will return a\n     * cached result. This is important since `getValidity()` can be called\n     * frequently in response to synchronous property changes.\n     *\n     * @return The current validity and validation message.\n     */\n    getValidity() {\n        const state = this.getCurrentState();\n        const hasStateChanged = !this.prevState || !this.equals(this.prevState, state);\n        if (!hasStateChanged) {\n            return this.currentValidity;\n        }\n        const { validity, validationMessage } = this.computeValidity(state);\n        this.prevState = this.copy(state);\n        this.currentValidity = {\n            validationMessage,\n            validity: {\n                // Change any `ValidityState` instances into `ValidityStateFlags` since\n                // `ValidityState` cannot be easily `{...spread}`.\n                badInput: validity.badInput,\n                customError: validity.customError,\n                patternMismatch: validity.patternMismatch,\n                rangeOverflow: validity.rangeOverflow,\n                rangeUnderflow: validity.rangeUnderflow,\n                stepMismatch: validity.stepMismatch,\n                tooLong: validity.tooLong,\n                tooShort: validity.tooShort,\n                typeMismatch: validity.typeMismatch,\n                valueMissing: validity.valueMissing,\n            },\n        };\n        return this.currentValidity;\n    }\n}\n//# sourceMappingURL=validator.js.map","/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { activateFirstItem, activateLastItem, activateNextItem, activatePreviousItem, getActiveItem, getFirstActivatableItem, } from './list-navigation-helpers.js';\n// TODO: move this file to List and make List use this\n/**\n * Default keys that trigger navigation.\n */\n// tslint:disable:enforce-name-casing Following Enum style\nexport const NavigableKeys = {\n    ArrowDown: 'ArrowDown',\n    ArrowLeft: 'ArrowLeft',\n    ArrowUp: 'ArrowUp',\n    ArrowRight: 'ArrowRight',\n    Home: 'Home',\n    End: 'End',\n};\n/**\n * A controller that handles list keyboard navigation and item management.\n */\nexport class ListController {\n    constructor(config) {\n        /**\n         * Handles keyboard navigation. Should be bound to the node that will act as\n         * the List.\n         */\n        this.handleKeydown = (event) => {\n            const key = event.key;\n            if (event.defaultPrevented || !this.isNavigableKey(key)) {\n                return;\n            }\n            // do not use this.items directly in upcoming calculations so we don't\n            // re-query the DOM unnecessarily\n            const items = this.items;\n            if (!items.length) {\n                return;\n            }\n            const activeItemRecord = getActiveItem(items, this.isActivatable);\n            event.preventDefault();\n            const isRtl = this.isRtl();\n            const inlinePrevious = isRtl\n                ? NavigableKeys.ArrowRight\n                : NavigableKeys.ArrowLeft;\n            const inlineNext = isRtl\n                ? NavigableKeys.ArrowLeft\n                : NavigableKeys.ArrowRight;\n            let nextActiveItem = null;\n            switch (key) {\n                // Activate the next item\n                case NavigableKeys.ArrowDown:\n                case inlineNext:\n                    nextActiveItem = activateNextItem(items, activeItemRecord, this.isActivatable, this.wrapNavigation());\n                    break;\n                // Activate the previous item\n                case NavigableKeys.ArrowUp:\n                case inlinePrevious:\n                    nextActiveItem = activatePreviousItem(items, activeItemRecord, this.isActivatable, this.wrapNavigation());\n                    break;\n                // Activate the first item\n                case NavigableKeys.Home:\n                    nextActiveItem = activateFirstItem(items, this.isActivatable);\n                    break;\n                // Activate the last item\n                case NavigableKeys.End:\n                    nextActiveItem = activateLastItem(items, this.isActivatable);\n                    break;\n                default:\n                    break;\n            }\n            if (nextActiveItem &&\n                activeItemRecord &&\n                activeItemRecord.item !== nextActiveItem) {\n                // If a new item was activated, remove the tabindex of the previous\n                // activated item.\n                activeItemRecord.item.tabIndex = -1;\n            }\n        };\n        /**\n         * Listener to be bound to the `deactivate-items` item event.\n         */\n        this.onDeactivateItems = () => {\n            const items = this.items;\n            for (const item of items) {\n                this.deactivateItem(item);\n            }\n        };\n        /**\n         * Listener to be bound to the `request-activation` item event..\n         */\n        this.onRequestActivation = (event) => {\n            this.onDeactivateItems();\n            const target = event.target;\n            this.activateItem(target);\n            target.focus();\n        };\n        /**\n         * Listener to be bound to the `slotchange` event for the slot that renders\n         * the items.\n         */\n        this.onSlotchange = () => {\n            const items = this.items;\n            // Whether we have encountered an item that has been activated\n            let encounteredActivated = false;\n            for (const item of items) {\n                const isActivated = !item.disabled && item.tabIndex > -1;\n                if (isActivated && !encounteredActivated) {\n                    encounteredActivated = true;\n                    item.tabIndex = 0;\n                    continue;\n                }\n                // Deactivate the rest including disabled\n                item.tabIndex = -1;\n            }\n            if (encounteredActivated) {\n                return;\n            }\n            const firstActivatableItem = getFirstActivatableItem(items, this.isActivatable);\n            if (!firstActivatableItem) {\n                return;\n            }\n            firstActivatableItem.tabIndex = 0;\n        };\n        const { isItem, getPossibleItems, isRtl, deactivateItem, activateItem, isNavigableKey, isActivatable, wrapNavigation, } = config;\n        this.isItem = isItem;\n        this.getPossibleItems = getPossibleItems;\n        this.isRtl = isRtl;\n        this.deactivateItem = deactivateItem;\n        this.activateItem = activateItem;\n        this.isNavigableKey = isNavigableKey;\n        this.isActivatable = isActivatable;\n        this.wrapNavigation = wrapNavigation ?? (() => true);\n    }\n    /**\n     * The items being managed by the list. Additionally, attempts to see if the\n     * object has a sub-item in the `.item` property.\n     */\n    get items() {\n        const maybeItems = this.getPossibleItems();\n        const items = [];\n        for (const itemOrParent of maybeItems) {\n            const isItem = this.isItem(itemOrParent);\n            // if the item is a list item, add it to the list of items\n            if (isItem) {\n                items.push(itemOrParent);\n                continue;\n            }\n            // If the item exposes an `item` property check if it is a list item.\n            const subItem = itemOrParent.item;\n            if (subItem && this.isItem(subItem)) {\n                items.push(subItem);\n            }\n        }\n        return items;\n    }\n    /**\n     * Activates the next item in the list. If at the end of the list, the first\n     * item will be activated.\n     *\n     * @return The activated list item or `null` if there are no items.\n     */\n    activateNextItem() {\n        const items = this.items;\n        const activeItemRecord = getActiveItem(items, this.isActivatable);\n        if (activeItemRecord) {\n            activeItemRecord.item.tabIndex = -1;\n        }\n        return activateNextItem(items, activeItemRecord, this.isActivatable, this.wrapNavigation());\n    }\n    /**\n     * Activates the previous item in the list. If at the start of the list, the\n     * last item will be activated.\n     *\n     * @return The activated list item or `null` if there are no items.\n     */\n    activatePreviousItem() {\n        const items = this.items;\n        const activeItemRecord = getActiveItem(items, this.isActivatable);\n        if (activeItemRecord) {\n            activeItemRecord.item.tabIndex = -1;\n        }\n        return activatePreviousItem(items, activeItemRecord, this.isActivatable, this.wrapNavigation());\n    }\n}\n//# sourceMappingURL=list-controller.js.map","/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n/**\n * Activates the first non-disabled item of a given array of items.\n *\n * @param items {Array<ListItem>} The items from which to activate the\n *     first item.\n * @param isActivatable Function to determine if an item can be  activated.\n *     Defaults to non-disabled items.\n */\nexport function activateFirstItem(items, isActivatable = (isItemNotDisabled)) {\n    // NOTE: These selector functions are static and not on the instance such\n    // that multiple operations can be chained and we do not have to re-query\n    // the DOM\n    const firstItem = getFirstActivatableItem(items, isActivatable);\n    if (firstItem) {\n        firstItem.tabIndex = 0;\n        firstItem.focus();\n    }\n    return firstItem;\n}\n/**\n * Activates the last non-disabled item of a given array of items.\n *\n * @param items {Array<ListItem>} The items from which to activate the\n *     last item.\n * @param isActivatable Function to determine if an item can be  activated.\n *     Defaults to non-disabled items.\n * @nocollapse\n */\nexport function activateLastItem(items, isActivatable = (isItemNotDisabled)) {\n    const lastItem = getLastActivatableItem(items, isActivatable);\n    if (lastItem) {\n        lastItem.tabIndex = 0;\n        lastItem.focus();\n    }\n    return lastItem;\n}\n/**\n * Deactivates the currently active item of a given array of items.\n *\n * @param items {Array<ListItem>} The items from which to deactivate the\n *     active item.\n * @param isActivatable Function to determine if an item can be  activated.\n *     Defaults to non-disabled items.\n * @return A record of the deleselcted activated item including the item and\n *     the index of the item or `null` if none are deactivated.\n * @nocollapse\n */\nexport function deactivateActiveItem(items, isActivatable = (isItemNotDisabled)) {\n    const activeItem = getActiveItem(items, isActivatable);\n    if (activeItem) {\n        activeItem.item.tabIndex = -1;\n    }\n    return activeItem;\n}\n/**\n * Retrieves the first activated item of a given array of items.\n *\n * @param items {Array<ListItem>} The items to search.\n * @param isActivatable Function to determine if an item can be  activated.\n *     Defaults to non-disabled items.\n * @return A record of the first activated item including the item and the\n *     index of the item or `null` if none are activated.\n * @nocollapse\n */\nexport function getActiveItem(items, isActivatable = (isItemNotDisabled)) {\n    for (let i = 0; i < items.length; i++) {\n        const item = items[i];\n        if (item.tabIndex === 0 && isActivatable(item)) {\n            return {\n                item,\n                index: i,\n            };\n        }\n    }\n    return null;\n}\n/**\n * Retrieves the first non-disabled item of a given array of items. This\n * the first item that is not disabled.\n *\n * @param items {Array<ListItem>} The items to search.\n * @param isActivatable Function to determine if an item can be  activated.\n *     Defaults to non-disabled items.\n * @return The first activatable item or `null` if none are activatable.\n * @nocollapse\n */\nexport function getFirstActivatableItem(items, isActivatable = (isItemNotDisabled)) {\n    for (const item of items) {\n        if (isActivatable(item)) {\n            return item;\n        }\n    }\n    return null;\n}\n/**\n * Retrieves the last non-disabled item of a given array of items.\n *\n * @param items {Array<ListItem>} The items to search.\n * @param isActivatable Function to determine if an item can be  activated.\n *     Defaults to non-disabled items.\n * @return The last activatable item or `null` if none are activatable.\n * @nocollapse\n */\nexport function getLastActivatableItem(items, isActivatable = (isItemNotDisabled)) {\n    for (let i = items.length - 1; i >= 0; i--) {\n        const item = items[i];\n        if (isActivatable(item)) {\n            return item;\n        }\n    }\n    return null;\n}\n/**\n * Retrieves the next non-disabled item of a given array of items.\n *\n * @param items {Array<ListItem>} The items to search.\n * @param index {{index: number}} The index to search from.\n * @param isActivatable Function to determine if an item can be  activated.\n *     Defaults to non-disabled items.\n * @param wrap If true, then the next item at the end of the list is the first\n *     item. Defaults to true.\n * @return The next activatable item or `null` if none are activatable.\n */\nexport function getNextItem(items, index, isActivatable = (isItemNotDisabled), wrap = true) {\n    for (let i = 1; i < items.length; i++) {\n        const nextIndex = (i + index) % items.length;\n        if (nextIndex < index && !wrap) {\n            // Return if the index loops back to the beginning and not wrapping.\n            return null;\n        }\n        const item = items[nextIndex];\n        if (isActivatable(item)) {\n            return item;\n        }\n    }\n    return items[index] ? items[index] : null;\n}\n/**\n * Retrieves the previous non-disabled item of a given array of items.\n *\n * @param items {Array<ListItem>} The items to search.\n * @param index {{index: number}} The index to search from.\n * @param isActivatable Function to determine if an item can be  activated.\n *     Defaults to non-disabled items.\n * @param wrap If true, then the previous item at the beginning of the list is\n *     the last item. Defaults to true.\n * @return The previous activatable item or `null` if none are activatable.\n */\nexport function getPrevItem(items, index, isActivatable = (isItemNotDisabled), wrap = true) {\n    for (let i = 1; i < items.length; i++) {\n        const prevIndex = (index - i + items.length) % items.length;\n        if (prevIndex > index && !wrap) {\n            // Return if the index loops back to the end and not wrapping.\n            return null;\n        }\n        const item = items[prevIndex];\n        if (isActivatable(item)) {\n            return item;\n        }\n    }\n    return items[index] ? items[index] : null;\n}\n/**\n * Activates the next item and focuses it. If nothing is currently activated,\n * activates the first item.\n */\nexport function activateNextItem(items, activeItemRecord, isActivatable = (isItemNotDisabled), wrap = true) {\n    if (activeItemRecord) {\n        const next = getNextItem(items, activeItemRecord.index, isActivatable, wrap);\n        if (next) {\n            next.tabIndex = 0;\n            next.focus();\n        }\n        return next;\n    }\n    else {\n        return activateFirstItem(items, isActivatable);\n    }\n}\n/**\n * Activates the previous item and focuses it. If nothing is currently\n * activated, activates the last item.\n */\nexport function activatePreviousItem(items, activeItemRecord, isActivatable = (isItemNotDisabled), wrap = true) {\n    if (activeItemRecord) {\n        const prev = getPrevItem(items, activeItemRecord.index, isActivatable, wrap);\n        if (prev) {\n            prev.tabIndex = 0;\n            prev.focus();\n        }\n        return prev;\n    }\n    else {\n        return activateLastItem(items, isActivatable);\n    }\n}\n/**\n * Creates an event that requests the parent md-list to deactivate all other\n * items.\n */\nexport function createDeactivateItemsEvent() {\n    return new Event('deactivate-items', { bubbles: true, composed: true });\n}\n/**\n * Creates an event that requests the menu to set `tabindex=0` on the item and\n * focus it. We use this pattern because List keeps track of what element is\n * active in the List by maintaining tabindex. We do not want list items\n * to set tabindex on themselves or focus themselves so that we can organize all\n * that logic in the parent List and Menus, and list item stays as dumb as\n * possible.\n */\nexport function createRequestActivationEvent() {\n    return new Event('request-activation', { bubbles: true, composed: true });\n}\n/**\n * The default `isActivatable` function, which checks if an item is not\n * disabled.\n *\n * @param item The item to check.\n * @return true if `item.disabled` is `false.\n */\nfunction isItemNotDisabled(item) {\n    return !item.disabled;\n}\n//# sourceMappingURL=list-navigation-helpers.js.map","/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n/**\n * Creates an event that closes any parent menus.\n */\nexport function createCloseMenuEvent(initiator, reason) {\n    return new CustomEvent('close-menu', {\n        bubbles: true,\n        composed: true,\n        detail: { initiator, reason, itemPath: [initiator] },\n    });\n}\n/**\n * Creates an event that signals to the menu that it should stay open on the\n * focusout event.\n */\nexport function createStayOpenOnFocusoutEvent() {\n    return new Event('stay-open-on-focusout', { bubbles: true, composed: true });\n}\n/**\n * Creates an event that signals to the menu that it should close open on the\n * focusout event.\n */\nexport function createCloseOnFocusoutEvent() {\n    return new Event('close-on-focusout', { bubbles: true, composed: true });\n}\n/**\n * Creates a default close menu event used by md-menu.\n */\nexport const createDefaultCloseMenuEvent = (createCloseMenuEvent);\n/**\n * Creates an event that requests the given item be selected.\n */\nexport function createDeactivateTypeaheadEvent() {\n    return new Event('deactivate-typeahead', { bubbles: true, composed: true });\n}\n/**\n * Creates an event that requests the typeahead functionality of containing menu\n * be activated.\n */\nexport function createActivateTypeaheadEvent() {\n    return new Event('activate-typeahead', { bubbles: true, composed: true });\n}\n/**\n * Keys that are used to navigate menus.\n */\n// tslint:disable-next-line:enforce-name-casing We are mimicking enum style\nexport const NavigableKey = {\n    UP: 'ArrowUp',\n    DOWN: 'ArrowDown',\n    RIGHT: 'ArrowRight',\n    LEFT: 'ArrowLeft',\n};\n/**\n * Keys that are used for selection in menus.\n */\n// tslint:disable-next-line:enforce-name-casing We are mimicking enum style\nexport const SelectionKey = {\n    SPACE: 'Space',\n    ENTER: 'Enter',\n};\n/**\n * Default close `Reason` kind values.\n */\n// tslint:disable-next-line:enforce-name-casing We are mimicking enum style\nexport const CloseReason = {\n    CLICK_SELECTION: 'click-selection',\n    KEYDOWN: 'keydown',\n};\n/**\n * Keys that can close menus.\n */\n// tslint:disable-next-line:enforce-name-casing We are mimicking enum style\nexport const KeydownCloseKey = {\n    ESCAPE: 'Escape',\n    SPACE: SelectionKey.SPACE,\n    ENTER: SelectionKey.ENTER,\n};\n/**\n * Determines whether the given key code is a key code that should close the\n * menu.\n *\n * @param code The KeyboardEvent code to check.\n * @return Whether or not the key code is in the predetermined list to close the\n * menu.\n */\nexport function isClosableKey(code) {\n    return Object.values(KeydownCloseKey).some((value) => value === code);\n}\n/**\n * Determines whether the given key code is a key code that should select a menu\n * item.\n *\n * @param code They KeyboardEvent code to check.\n * @return Whether or not the key code is in the predetermined list to select a\n * menu item.\n */\nexport function isSelectableKey(code) {\n    return Object.values(SelectionKey).some((value) => value === code);\n}\n/**\n * Determines whether a target element is contained inside another element's\n * composed tree.\n *\n * @param target The potential contained element.\n * @param container The potential containing element of the target.\n * @returns Whether the target element is contained inside the container's\n * composed subtree\n */\nexport function isElementInSubtree(target, container) {\n    // Dispatch a composed, bubbling event to check its path to see if the\n    // newly-focused element is contained in container's subtree\n    const focusEv = new Event('md-contains', { bubbles: true, composed: true });\n    let composedPath = [];\n    const listener = (ev) => {\n        composedPath = ev.composedPath();\n    };\n    container.addEventListener('md-contains', listener);\n    target.dispatchEvent(focusEv);\n    container.removeEventListener('md-contains', listener);\n    const isContained = composedPath.length > 0;\n    return isContained;\n}\n/**\n * Element to focus on when menu is first opened.\n */\n// tslint:disable-next-line:enforce-name-casing We are mimicking enum style\nexport const FocusState = {\n    NONE: 'none',\n    LIST_ROOT: 'list-root',\n    FIRST_ITEM: 'first-item',\n    LAST_ITEM: 'last-item',\n};\n//# sourceMappingURL=shared.js.map","/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n/**\n * An enum of supported Menu corners\n */\n// tslint:disable-next-line:enforce-name-casing We are mimicking enum style\nexport const Corner = {\n    END_START: 'end-start',\n    END_END: 'end-end',\n    START_START: 'start-start',\n    START_END: 'start-end',\n};\n/**\n * Given a surface, an anchor, corners, and some options, this surface will\n * calculate the position of a surface to align the two given corners and keep\n * the surface inside the window viewport. It also provides a StyleInfo map that\n * can be applied to the surface to handle visiblility and position.\n */\nexport class SurfacePositionController {\n    /**\n     * @param host The host to connect the controller to.\n     * @param getProperties A function that returns the properties for the\n     * controller.\n     */\n    constructor(host, getProperties) {\n        this.host = host;\n        this.getProperties = getProperties;\n        // The current styles to apply to the surface.\n        this.surfaceStylesInternal = {\n            'display': 'none',\n        };\n        // Previous values stored for change detection. Open change detection is\n        // calculated separately so initialize it here.\n        this.lastValues = {\n            isOpen: false,\n        };\n        this.host.addController(this);\n    }\n    /**\n     * The StyleInfo map to apply to the surface via Lit's stylemap\n     */\n    get surfaceStyles() {\n        return this.surfaceStylesInternal;\n    }\n    /**\n     * Calculates the surface's new position required so that the surface's\n     * `surfaceCorner` aligns to the anchor's `anchorCorner` while keeping the\n     * surface inside the window viewport. This positioning also respects RTL by\n     * checking `getComputedStyle()` on the surface element.\n     */\n    async position() {\n        const { surfaceEl, anchorEl, anchorCorner: anchorCornerRaw, surfaceCorner: surfaceCornerRaw, positioning, xOffset, yOffset, disableBlockFlip, disableInlineFlip, repositionStrategy, } = this.getProperties();\n        const anchorCorner = anchorCornerRaw.toLowerCase().trim();\n        const surfaceCorner = surfaceCornerRaw.toLowerCase().trim();\n        if (!surfaceEl || !anchorEl) {\n            return;\n        }\n        // Store these before we potentially resize the window with the next set of\n        // lines\n        const windowInnerWidth = window.innerWidth;\n        const windowInnerHeight = window.innerHeight;\n        const div = document.createElement('div');\n        div.style.opacity = '0';\n        div.style.position = 'fixed';\n        div.style.display = 'block';\n        div.style.inset = '0';\n        document.body.appendChild(div);\n        const scrollbarTestRect = div.getBoundingClientRect();\n        div.remove();\n        // Calculate the widths of the scrollbars in the inline and block directions\n        // to account for window-relative calculations.\n        const blockScrollbarHeight = window.innerHeight - scrollbarTestRect.bottom;\n        const inlineScrollbarWidth = window.innerWidth - scrollbarTestRect.right;\n        // Paint the surface transparently so that we can get the position and the\n        // rect info of the surface.\n        this.surfaceStylesInternal = {\n            'display': 'block',\n            'opacity': '0',\n        };\n        // Wait for it to be visible.\n        this.host.requestUpdate();\n        await this.host.updateComplete;\n        // Safari has a bug that makes popovers render incorrectly if the node is\n        // made visible + Animation Frame before calling showPopover().\n        // https://bugs.webkit.org/show_bug.cgi?id=264069\n        // also the cast is required due to differing TS types in Google and OSS.\n        if (surfaceEl.popover &&\n            surfaceEl.isConnected) {\n            surfaceEl.showPopover();\n        }\n        const surfaceRect = surfaceEl.getSurfacePositionClientRect\n            ? surfaceEl.getSurfacePositionClientRect()\n            : surfaceEl.getBoundingClientRect();\n        const anchorRect = anchorEl.getSurfacePositionClientRect\n            ? anchorEl.getSurfacePositionClientRect()\n            : anchorEl.getBoundingClientRect();\n        const [surfaceBlock, surfaceInline] = surfaceCorner.split('-');\n        const [anchorBlock, anchorInline] = anchorCorner.split('-');\n        // LTR depends on the direction of the SURFACE not the anchor.\n        const isLTR = getComputedStyle(surfaceEl).direction === 'ltr';\n        /*\n         * For more on inline and block dimensions, see MDN article:\n         * https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_logical_properties_and_values\n         *\n         * ┌───── inline/blockDocumentOffset  inlineScrollbarWidth\n         * │       │                                    │\n         * │     ┌─▼─────┐                              │Document\n         * │    ┌┼───────┴──────────────────────────────┼────────┐\n         * │    ││                                      │        │\n         * └──► ││ ┌───── inline/blockWindowOffset      │        │\n         *      ││ │       │                            ▼        │\n         *      ││ │     ┌─▼───┐                 Window┌┐        │\n         *      └┤ │    ┌┼─────┴───────────────────────┼│        │\n         *       │ │    ││                             ││        │\n         *       │ └──► ││  ┌──inline/blockAnchorOffset││        │\n         *       │      ││  │     │                    ││        │\n         *       │      └┤  │  ┌──▼───┐                ││        │\n         *       │       │  │ ┌┼──────┤                ││        │\n         *       │       │  └─►│Anchor│                ││        │\n         *       │       │    └┴──────┘                ││        │\n         *       │       │                             ││        │\n         *       │       │     ┌───────────────────────┼┼────┐   │\n         *       │       │     │ Surface               ││    │   │\n         *       │       │     │                       ││    │   │\n         *       │       │     │                       ││    │   │\n         *       │       │     │                       ││    │   │\n         *       │       │     │                       ││    │   │\n         *       │      ┌┼─────┼───────────────────────┼│    │   │\n         *       │   ┌─►┴──────┼────────────────────────┘    ├┐  │\n         *       │   │         │ inline/blockOOBCorrection   ││  │\n         *       │   │         │                         │   ││  │\n         *       │   │         │                         ├──►├│  │\n         *       │   │         │                         │   ││  │\n         *       │   │         └────────────────────────┐▼───┼┘  │\n         *       │  blockScrollbarHeight                └────┘   │\n         *       │                                               │\n         *       └───────────────────────────────────────────────┘\n         */\n        // Calculate the block positioning properties\n        let { blockInset, blockOutOfBoundsCorrection, surfaceBlockProperty } = this.calculateBlock({\n            surfaceRect,\n            anchorRect,\n            anchorBlock,\n            surfaceBlock,\n            yOffset,\n            positioning,\n            windowInnerHeight,\n            blockScrollbarHeight,\n        });\n        // If the surface should be out of bounds in the block direction, flip the\n        // surface and anchor corner block values and recalculate\n        if (blockOutOfBoundsCorrection && !disableBlockFlip) {\n            const flippedSurfaceBlock = surfaceBlock === 'start' ? 'end' : 'start';\n            const flippedAnchorBlock = anchorBlock === 'start' ? 'end' : 'start';\n            const flippedBlock = this.calculateBlock({\n                surfaceRect,\n                anchorRect,\n                anchorBlock: flippedAnchorBlock,\n                surfaceBlock: flippedSurfaceBlock,\n                yOffset,\n                positioning,\n                windowInnerHeight,\n                blockScrollbarHeight,\n            });\n            // In the case that the flipped verion would require less out of bounds\n            // correcting, use the flipped corner block values\n            if (blockOutOfBoundsCorrection > flippedBlock.blockOutOfBoundsCorrection) {\n                blockInset = flippedBlock.blockInset;\n                blockOutOfBoundsCorrection = flippedBlock.blockOutOfBoundsCorrection;\n                surfaceBlockProperty = flippedBlock.surfaceBlockProperty;\n            }\n        }\n        // Calculate the inline positioning properties\n        let { inlineInset, inlineOutOfBoundsCorrection, surfaceInlineProperty } = this.calculateInline({\n            surfaceRect,\n            anchorRect,\n            anchorInline,\n            surfaceInline,\n            xOffset,\n            positioning,\n            isLTR,\n            windowInnerWidth,\n            inlineScrollbarWidth,\n        });\n        // If the surface should be out of bounds in the inline direction, flip the\n        // surface and anchor corner inline values and recalculate\n        if (inlineOutOfBoundsCorrection && !disableInlineFlip) {\n            const flippedSurfaceInline = surfaceInline === 'start' ? 'end' : 'start';\n            const flippedAnchorInline = anchorInline === 'start' ? 'end' : 'start';\n            const flippedInline = this.calculateInline({\n                surfaceRect,\n                anchorRect,\n                anchorInline: flippedAnchorInline,\n                surfaceInline: flippedSurfaceInline,\n                xOffset,\n                positioning,\n                isLTR,\n                windowInnerWidth,\n                inlineScrollbarWidth,\n            });\n            // In the case that the flipped verion would require less out of bounds\n            // correcting, use the flipped corner inline values\n            if (Math.abs(inlineOutOfBoundsCorrection) >\n                Math.abs(flippedInline.inlineOutOfBoundsCorrection)) {\n                inlineInset = flippedInline.inlineInset;\n                inlineOutOfBoundsCorrection = flippedInline.inlineOutOfBoundsCorrection;\n                surfaceInlineProperty = flippedInline.surfaceInlineProperty;\n            }\n        }\n        // If we are simply repositioning the surface back inside the viewport,\n        // subtract the out of bounds correction values from the positioning.\n        if (repositionStrategy === 'move') {\n            blockInset = blockInset - blockOutOfBoundsCorrection;\n            inlineInset = inlineInset - inlineOutOfBoundsCorrection;\n        }\n        this.surfaceStylesInternal = {\n            'display': 'block',\n            'opacity': '1',\n            [surfaceBlockProperty]: `${blockInset}px`,\n            [surfaceInlineProperty]: `${inlineInset}px`,\n        };\n        // In the case that we are resizing the surface to stay inside the viewport\n        // we need to set height and width on the surface.\n        if (repositionStrategy === 'resize') {\n            // Add a height property to the styles if there is block height correction\n            if (blockOutOfBoundsCorrection) {\n                this.surfaceStylesInternal['height'] = `${surfaceRect.height - blockOutOfBoundsCorrection}px`;\n            }\n            // Add a width property to the styles if there is block height correction\n            if (inlineOutOfBoundsCorrection) {\n                this.surfaceStylesInternal['width'] = `${surfaceRect.width - inlineOutOfBoundsCorrection}px`;\n            }\n        }\n        this.host.requestUpdate();\n    }\n    /**\n     * Calculates the css property, the inset, and the out of bounds correction\n     * for the surface in the block direction.\n     */\n    calculateBlock(config) {\n        const { surfaceRect, anchorRect, anchorBlock, surfaceBlock, yOffset, positioning, windowInnerHeight, blockScrollbarHeight, } = config;\n        // We use number booleans to multiply values rather than `if` / ternary\n        // statements because it _heavily_ cuts down on nesting and readability\n        const relativeToWindow = positioning === 'fixed' || positioning === 'document' ? 1 : 0;\n        const relativeToDocument = positioning === 'document' ? 1 : 0;\n        const isSurfaceBlockStart = surfaceBlock === 'start' ? 1 : 0;\n        const isSurfaceBlockEnd = surfaceBlock === 'end' ? 1 : 0;\n        const isOneBlockEnd = anchorBlock !== surfaceBlock ? 1 : 0;\n        // Whether or not to apply the height of the anchor\n        const blockAnchorOffset = isOneBlockEnd * anchorRect.height + yOffset;\n        // The absolute block position of the anchor relative to window\n        const blockTopLayerOffset = isSurfaceBlockStart * anchorRect.top +\n            isSurfaceBlockEnd *\n                (windowInnerHeight - anchorRect.bottom - blockScrollbarHeight);\n        const blockDocumentOffset = isSurfaceBlockStart * window.scrollY - isSurfaceBlockEnd * window.scrollY;\n        // If the surface's block would be out of bounds of the window, move it back\n        // in\n        const blockOutOfBoundsCorrection = Math.abs(Math.min(0, windowInnerHeight -\n            blockTopLayerOffset -\n            blockAnchorOffset -\n            surfaceRect.height));\n        // The block logical value of the surface\n        const blockInset = relativeToWindow * blockTopLayerOffset +\n            relativeToDocument * blockDocumentOffset +\n            blockAnchorOffset;\n        const surfaceBlockProperty = surfaceBlock === 'start' ? 'inset-block-start' : 'inset-block-end';\n        return { blockInset, blockOutOfBoundsCorrection, surfaceBlockProperty };\n    }\n    /**\n     * Calculates the css property, the inset, and the out of bounds correction\n     * for the surface in the inline direction.\n     */\n    calculateInline(config) {\n        const { isLTR: isLTRBool, surfaceInline, anchorInline, anchorRect, surfaceRect, xOffset, positioning, windowInnerWidth, inlineScrollbarWidth, } = config;\n        // We use number booleans to multiply values rather than `if` / ternary\n        // statements because it _heavily_ cuts down on nesting and readability\n        const relativeToWindow = positioning === 'fixed' || positioning === 'document' ? 1 : 0;\n        const relativeToDocument = positioning === 'document' ? 1 : 0;\n        const isLTR = isLTRBool ? 1 : 0;\n        const isRTL = isLTRBool ? 0 : 1;\n        const isSurfaceInlineStart = surfaceInline === 'start' ? 1 : 0;\n        const isSurfaceInlineEnd = surfaceInline === 'end' ? 1 : 0;\n        const isOneInlineEnd = anchorInline !== surfaceInline ? 1 : 0;\n        // Whether or not to apply the width of the anchor\n        const inlineAnchorOffset = isOneInlineEnd * anchorRect.width + xOffset;\n        // The inline position of the anchor relative to window in LTR\n        const inlineTopLayerOffsetLTR = isSurfaceInlineStart * anchorRect.left +\n            isSurfaceInlineEnd *\n                (windowInnerWidth - anchorRect.right - inlineScrollbarWidth);\n        // The inline position of the anchor relative to window in RTL\n        const inlineTopLayerOffsetRTL = isSurfaceInlineStart *\n            (windowInnerWidth - anchorRect.right - inlineScrollbarWidth) +\n            isSurfaceInlineEnd * anchorRect.left;\n        // The inline position of the anchor relative to window\n        const inlineTopLayerOffset = isLTR * inlineTopLayerOffsetLTR + isRTL * inlineTopLayerOffsetRTL;\n        // The inline position of the anchor relative to window in LTR\n        const inlineDocumentOffsetLTR = isSurfaceInlineStart * window.scrollX -\n            isSurfaceInlineEnd * window.scrollX;\n        // The inline position of the anchor relative to window in RTL\n        const inlineDocumentOffsetRTL = isSurfaceInlineEnd * window.scrollX -\n            isSurfaceInlineStart * window.scrollX;\n        // The inline position of the anchor relative to window\n        const inlineDocumentOffset = isLTR * inlineDocumentOffsetLTR + isRTL * inlineDocumentOffsetRTL;\n        // If the surface's inline would be out of bounds of the window, move it\n        // back in\n        const inlineOutOfBoundsCorrection = Math.abs(Math.min(0, windowInnerWidth -\n            inlineTopLayerOffset -\n            inlineAnchorOffset -\n            surfaceRect.width));\n        // The inline logical value of the surface\n        const inlineInset = relativeToWindow * inlineTopLayerOffset +\n            inlineAnchorOffset +\n            relativeToDocument * inlineDocumentOffset;\n        let surfaceInlineProperty = surfaceInline === 'start' ? 'inset-inline-start' : 'inset-inline-end';\n        // There are cases where the element is RTL but the root of the page is not.\n        // In these cases we want to not use logical properties.\n        if (positioning === 'document' || positioning === 'fixed') {\n            if ((surfaceInline === 'start' && isLTRBool) ||\n                (surfaceInline === 'end' && !isLTRBool)) {\n                surfaceInlineProperty = 'left';\n            }\n            else {\n                surfaceInlineProperty = 'right';\n            }\n        }\n        return {\n            inlineInset,\n            inlineOutOfBoundsCorrection,\n            surfaceInlineProperty,\n        };\n    }\n    hostUpdate() {\n        this.onUpdate();\n    }\n    hostUpdated() {\n        this.onUpdate();\n    }\n    /**\n     * Checks whether the properties passed into the controller have changed since\n     * the last positioning. If so, it will reposition if the surface is open or\n     * close it if the surface should close.\n     */\n    async onUpdate() {\n        const props = this.getProperties();\n        let hasChanged = false;\n        for (const [key, value] of Object.entries(props)) {\n            // tslint:disable-next-line\n            hasChanged = hasChanged || value !== this.lastValues[key];\n            if (hasChanged)\n                break;\n        }\n        const openChanged = this.lastValues.isOpen !== props.isOpen;\n        const hasAnchor = !!props.anchorEl;\n        const hasSurface = !!props.surfaceEl;\n        if (hasChanged && hasAnchor && hasSurface) {\n            // Only update isOpen, because if it's closed, we do not want to waste\n            // time on a useless reposition calculation. So save the other \"dirty\"\n            // values until next time it opens.\n            this.lastValues.isOpen = props.isOpen;\n            if (props.isOpen) {\n                // We are going to do a reposition, so save the prop values for future\n                // dirty checking.\n                this.lastValues = props;\n                await this.position();\n                props.onOpen();\n            }\n            else if (openChanged) {\n                await props.beforeClose();\n                this.close();\n                props.onClose();\n            }\n        }\n    }\n    /**\n     * Hides the surface.\n     */\n    close() {\n        this.surfaceStylesInternal = {\n            'display': 'none',\n        };\n        this.host.requestUpdate();\n        const surfaceEl = this.getProperties().surfaceEl;\n        // The following type casts are required due to differing TS types in Google\n        // and open source.\n        if (surfaceEl?.popover &&\n            surfaceEl?.isConnected) {\n            surfaceEl.hidePopover();\n        }\n    }\n}\n//# sourceMappingURL=surfacePositionController.js.map","/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n/**\n * Indicies to access the TypeaheadRecord tuple type.\n */\nexport const TYPEAHEAD_RECORD = {\n    INDEX: 0,\n    ITEM: 1,\n    TEXT: 2,\n};\n/**\n * This controller listens to `keydown` events and searches the header text of\n * an array of `MenuItem`s with the corresponding entered keys within the buffer\n * time and activates the item.\n *\n * @example\n * ```ts\n * const typeaheadController = new TypeaheadController(() => ({\n *   typeaheadBufferTime: 50,\n *   getItems: () => Array.from(document.querySelectorAll('md-menu-item'))\n * }));\n * html`\n *   <div\n *       @keydown=${typeaheadController.onKeydown}\n *       tabindex=\"0\"\n *       class=\"activeItemText\">\n *     <!-- focusable element that will receive keydown events -->\n *     Apple\n *   </div>\n *   <div>\n *     <md-menu-item active header=\"Apple\"></md-menu-item>\n *     <md-menu-item header=\"Apricot\"></md-menu-item>\n *     <md-menu-item header=\"Banana\"></md-menu-item>\n *     <md-menu-item header=\"Olive\"></md-menu-item>\n *     <md-menu-item header=\"Orange\"></md-menu-item>\n *   </div>\n * `;\n * ```\n */\nexport class TypeaheadController {\n    /**\n     * @param getProperties A function that returns the options of the typeahead\n     * controller:\n     *\n     * {\n     *   getItems: A function that returns an array of menu items to be searched.\n     *   typeaheadBufferTime: The maximum time between each keystroke to keep the\n     *       current type buffer alive.\n     * }\n     */\n    constructor(getProperties) {\n        this.getProperties = getProperties;\n        /**\n         * Array of tuples that helps with indexing.\n         */\n        this.typeaheadRecords = [];\n        /**\n         * Currently-typed text since last buffer timeout\n         */\n        this.typaheadBuffer = '';\n        /**\n         * The timeout id from the current buffer's setTimeout\n         */\n        this.cancelTypeaheadTimeout = 0;\n        /**\n         * If we are currently \"typing\"\n         */\n        this.isTypingAhead = false;\n        /**\n         * The record of the last active item.\n         */\n        this.lastActiveRecord = null;\n        /**\n         * Apply this listener to the element that will receive `keydown` events that\n         * should trigger this controller.\n         *\n         * @param event The native browser `KeyboardEvent` from the `keydown` event.\n         */\n        this.onKeydown = (event) => {\n            if (this.isTypingAhead) {\n                this.typeahead(event);\n            }\n            else {\n                this.beginTypeahead(event);\n            }\n        };\n        /**\n         * Ends the current typeahead and clears the buffer.\n         */\n        this.endTypeahead = () => {\n            this.isTypingAhead = false;\n            this.typaheadBuffer = '';\n            this.typeaheadRecords = [];\n        };\n    }\n    get items() {\n        return this.getProperties().getItems();\n    }\n    get active() {\n        return this.getProperties().active;\n    }\n    /**\n     * Sets up typingahead\n     */\n    beginTypeahead(event) {\n        if (!this.active) {\n            return;\n        }\n        // We don't want to typeahead if the _beginning_ of the typeahead is a menu\n        // navigation, or a selection. We will handle \"Space\" only if it's in the\n        // middle of a typeahead\n        if (event.code === 'Space' ||\n            event.code === 'Enter' ||\n            event.code.startsWith('Arrow') ||\n            event.code === 'Escape') {\n            return;\n        }\n        this.isTypingAhead = true;\n        // Generates the record array data structure which is the index, the element\n        // and a normalized header.\n        this.typeaheadRecords = this.items.map((el, index) => [\n            index,\n            el,\n            el.typeaheadText.trim().toLowerCase(),\n        ]);\n        this.lastActiveRecord =\n            this.typeaheadRecords.find((record) => record[TYPEAHEAD_RECORD.ITEM].tabIndex === 0) ?? null;\n        if (this.lastActiveRecord) {\n            this.lastActiveRecord[TYPEAHEAD_RECORD.ITEM].tabIndex = -1;\n        }\n        this.typeahead(event);\n    }\n    /**\n     * Performs the typeahead. Based on the normalized items and the current text\n     * buffer, finds the _next_ item with matching text and activates it.\n     *\n     * @example\n     *\n     * items: Apple, Banana, Olive, Orange, Cucumber\n     * buffer: ''\n     * user types: o\n     *\n     * activates Olive\n     *\n     * @example\n     *\n     * items: Apple, Banana, Olive (active), Orange, Cucumber\n     * buffer: 'o'\n     * user types: l\n     *\n     * activates Olive\n     *\n     * @example\n     *\n     * items: Apple, Banana, Olive (active), Orange, Cucumber\n     * buffer: ''\n     * user types: o\n     *\n     * activates Orange\n     *\n     * @example\n     *\n     * items: Apple, Banana, Olive, Orange (active), Cucumber\n     * buffer: ''\n     * user types: o\n     *\n     * activates Olive\n     */\n    typeahead(event) {\n        if (event.defaultPrevented)\n            return;\n        clearTimeout(this.cancelTypeaheadTimeout);\n        // Stop typingahead if one of the navigation or selection keys (except for\n        // Space) are pressed\n        if (event.code === 'Enter' ||\n            event.code.startsWith('Arrow') ||\n            event.code === 'Escape') {\n            this.endTypeahead();\n            if (this.lastActiveRecord) {\n                this.lastActiveRecord[TYPEAHEAD_RECORD.ITEM].tabIndex = -1;\n            }\n            return;\n        }\n        // If Space is pressed, prevent it from selecting and closing the menu\n        if (event.code === 'Space') {\n            event.preventDefault();\n        }\n        // Start up a new keystroke buffer timeout\n        this.cancelTypeaheadTimeout = setTimeout(this.endTypeahead, this.getProperties().typeaheadBufferTime);\n        this.typaheadBuffer += event.key.toLowerCase();\n        const lastActiveIndex = this.lastActiveRecord\n            ? this.lastActiveRecord[TYPEAHEAD_RECORD.INDEX]\n            : -1;\n        const numRecords = this.typeaheadRecords.length;\n        /**\n         * Sorting function that will resort the items starting with the given index\n         *\n         * @example\n         *\n         * this.typeaheadRecords =\n         * 0: [0, <reference>, 'apple']\n         * 1: [1, <reference>, 'apricot']\n         * 2: [2, <reference>, 'banana']\n         * 3: [3, <reference>, 'olive'] <-- lastActiveIndex\n         * 4: [4, <reference>, 'orange']\n         * 5: [5, <reference>, 'strawberry']\n         *\n         * this.typeaheadRecords.sort((a,b) => rebaseIndexOnActive(a)\n         *                                       - rebaseIndexOnActive(b)) ===\n         * 0: [3, <reference>, 'olive'] <-- lastActiveIndex\n         * 1: [4, <reference>, 'orange']\n         * 2: [5, <reference>, 'strawberry']\n         * 3: [0, <reference>, 'apple']\n         * 4: [1, <reference>, 'apricot']\n         * 5: [2, <reference>, 'banana']\n         */\n        const rebaseIndexOnActive = (record) => {\n            return ((record[TYPEAHEAD_RECORD.INDEX] + numRecords - lastActiveIndex) %\n                numRecords);\n        };\n        // records filtered and sorted / rebased around the last active index\n        const matchingRecords = this.typeaheadRecords\n            .filter((record) => !record[TYPEAHEAD_RECORD.ITEM].disabled &&\n            record[TYPEAHEAD_RECORD.TEXT].startsWith(this.typaheadBuffer))\n            .sort((a, b) => rebaseIndexOnActive(a) - rebaseIndexOnActive(b));\n        // Just leave if there's nothing that matches. Native select will just\n        // choose the first thing that starts with the next letter in the alphabet\n        // but that's out of scope and hard to localize\n        if (matchingRecords.length === 0) {\n            clearTimeout(this.cancelTypeaheadTimeout);\n            if (this.lastActiveRecord) {\n                this.lastActiveRecord[TYPEAHEAD_RECORD.ITEM].tabIndex = -1;\n            }\n            this.endTypeahead();\n            return;\n        }\n        const isNewQuery = this.typaheadBuffer.length === 1;\n        let nextRecord;\n        // This is likely the case that someone is trying to \"tab\" through different\n        // entries that start with the same letter\n        if (this.lastActiveRecord === matchingRecords[0] && isNewQuery) {\n            nextRecord = matchingRecords[1] ?? matchingRecords[0];\n        }\n        else {\n            nextRecord = matchingRecords[0];\n        }\n        if (this.lastActiveRecord) {\n            this.lastActiveRecord[TYPEAHEAD_RECORD.ITEM].tabIndex = -1;\n        }\n        this.lastActiveRecord = nextRecord;\n        nextRecord[TYPEAHEAD_RECORD.ITEM].tabIndex = 0;\n        nextRecord[TYPEAHEAD_RECORD.ITEM].focus();\n        return;\n    }\n}\n//# sourceMappingURL=typeaheadController.js.map","/**\n * @license\n * Copyright 2024 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n// Generated stylesheet for ./menu/internal/menu-styles.css.\nimport { css } from 'lit';\nexport const styles = css `:host{--md-elevation-level: var(--md-menu-container-elevation, 2);--md-elevation-shadow-color: var(--md-menu-container-shadow-color, var(--md-sys-color-shadow, #000));min-width:112px;color:unset;display:contents}md-focus-ring{--md-focus-ring-shape: var(--md-menu-container-shape, var(--md-sys-shape-corner-extra-small, 4px))}.menu{border-radius:var(--md-menu-container-shape, var(--md-sys-shape-corner-extra-small, 4px));display:none;inset:auto;border:none;padding:0px;overflow:visible;background-color:rgba(0,0,0,0);color:inherit;opacity:0;z-index:20;position:absolute;user-select:none;max-height:inherit;height:inherit;min-width:inherit;max-width:inherit;scrollbar-width:inherit}.menu::backdrop{display:none}.fixed{position:fixed}.items{display:block;list-style-type:none;margin:0;outline:none;box-sizing:border-box;background-color:var(--md-menu-container-color, var(--md-sys-color-surface-container, #f3edf7));height:inherit;max-height:inherit;overflow:auto;min-width:inherit;max-width:inherit;border-radius:inherit;scrollbar-width:inherit}.item-padding{padding-block:var(--md-menu-top-space, 8px) var(--md-menu-bottom-space, 8px)}.has-overflow:not([popover]) .items{overflow:visible}.has-overflow.animating .items,.animating .items{overflow:hidden}.has-overflow.animating .items{pointer-events:none}.animating ::slotted(.md-menu-hidden){opacity:0}slot{display:block;height:inherit;max-height:inherit}::slotted(:is(md-divider,[role=separator])){margin:8px 0}@media(forced-colors: active){.menu{border-style:solid;border-color:CanvasText;border-width:1px}}\n`;\n//# sourceMappingURL=menu-styles.js.map","/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { __decorate } from \"tslib\";\nimport '../../elevation/elevation.js';\nimport '../../focus/md-focus-ring.js';\nimport { LitElement, html, isServer, nothing } from 'lit';\nimport { property, query, queryAssignedElements, state } from 'lit/decorators.js';\nimport { classMap } from 'lit/directives/class-map.js';\nimport { styleMap } from 'lit/directives/style-map.js';\nimport { EASING, createAnimationSignal } from '../../internal/motion/animation.js';\nimport { ListController, NavigableKeys, } from '../../list/internal/list-controller.js';\nimport { getActiveItem, getFirstActivatableItem, getLastActivatableItem, } from '../../list/internal/list-navigation-helpers.js';\nimport { FocusState, isClosableKey, isElementInSubtree, } from './controllers/shared.js';\nimport { Corner, SurfacePositionController, } from './controllers/surfacePositionController.js';\nimport { TypeaheadController } from './controllers/typeaheadController.js';\nexport { Corner } from './controllers/surfacePositionController.js';\n/**\n * The default value for the typeahead buffer time in Milliseconds.\n */\nexport const DEFAULT_TYPEAHEAD_BUFFER_TIME = 200;\nconst submenuNavKeys = new Set([\n    NavigableKeys.ArrowDown,\n    NavigableKeys.ArrowUp,\n    NavigableKeys.Home,\n    NavigableKeys.End,\n]);\nconst menuNavKeys = new Set([\n    NavigableKeys.ArrowLeft,\n    NavigableKeys.ArrowRight,\n    ...submenuNavKeys,\n]);\n/**\n * Gets the currently focused element on the page.\n *\n * @param activeDoc The document or shadowroot from which to start the search.\n *    Defaults to `window.document`\n * @return Returns the currently deeply focused element or `null` if none.\n */\nfunction getFocusedElement(activeDoc = document) {\n    let activeEl = activeDoc.activeElement;\n    // Check for activeElement in the case that an element with a shadow root host\n    // is currently focused.\n    while (activeEl && activeEl?.shadowRoot?.activeElement) {\n        activeEl = activeEl.shadowRoot.activeElement;\n    }\n    return activeEl;\n}\n/**\n * @fires opening {Event} Fired before the opening animation begins\n * @fires opened {Event} Fired once the menu is open, after any animations\n * @fires closing {Event} Fired before the closing animation begins\n * @fires closed {Event} Fired once the menu is closed, after any animations\n */\nexport class Menu extends LitElement {\n    /**\n     * Whether the menu is animating upwards or downwards when opening. This is\n     * helpful for calculating some animation calculations.\n     */\n    get openDirection() {\n        const menuCornerBlock = this.menuCorner.split('-')[0];\n        return menuCornerBlock === 'start' ? 'DOWN' : 'UP';\n    }\n    /**\n     * The element which the menu should align to. If `anchor` is set to a\n     * non-empty idref string, then `anchorEl` will resolve to the element with\n     * the given id in the same root node. Otherwise, `null`.\n     */\n    get anchorElement() {\n        if (this.anchor) {\n            return this.getRootNode().querySelector(`#${this.anchor}`);\n        }\n        return this.currentAnchorElement;\n    }\n    set anchorElement(element) {\n        this.currentAnchorElement = element;\n        this.requestUpdate('anchorElement');\n    }\n    constructor() {\n        super();\n        /**\n         * The ID of the element in the same root node in which the menu should align\n         * to. Overrides setting `anchorElement = elementReference`.\n         *\n         * __NOTE__: anchor or anchorElement must either be an HTMLElement or resolve\n         * to an HTMLElement in order for menu to open.\n         */\n        this.anchor = '';\n        /**\n         * Whether the positioning algorithm should calculate relative to the parent\n         * of the anchor element (`absolute`), relative to the window (`fixed`), or\n         * relative to the document (`document`). `popover` will use the popover API\n         * to render the menu in the top-layer. If your browser does not support the\n         * popover API, it will fall back to `fixed`.\n         *\n         * __Examples for `position = 'fixed'`:__\n         *\n         * - If there is no `position:relative` in the given parent tree and the\n         *   surface is `position:absolute`\n         * - If the surface is `position:fixed`\n         * - If the surface is in the \"top layer\"\n         * - The anchor and the surface do not share a common `position:relative`\n         *   ancestor\n         *\n         * When using `positioning=fixed`, in most cases, the menu should position\n         * itself above most other `position:absolute` or `position:fixed` elements\n         * when placed inside of them. e.g. using a menu inside of an `md-dialog`.\n         *\n         * __NOTE__: Fixed menus will not scroll with the page and will be fixed to\n         * the window instead.\n         *\n         * __Examples for `position = 'document'`:__\n         *\n         * - There is no parent that creates a relative positioning context e.g.\n         *   `position: relative`, `position: absolute`, `transform: translate(x, y)`,\n         *   etc.\n         * - You put the effort into hoisting the menu to the top of the DOM like the\n         *   end of the `<body>` to render over everything or in a top-layer.\n         * - You are reusing a single `md-menu` element that dynamically renders\n         *   content.\n         *\n         * __Examples for `position = 'popover'`:__\n         *\n         * - Your browser supports `popover`.\n         * - Most cases. Once popover is in browsers, this will become the default.\n         */\n        this.positioning = 'absolute';\n        /**\n         * Skips the opening and closing animations.\n         */\n        this.quick = false;\n        /**\n         * Displays overflow content like a submenu. Not required in most cases when\n         * using `positioning=\"popover\"`.\n         *\n         * __NOTE__: This may cause adverse effects if you set\n         * `md-menu {max-height:...}`\n         * and have items overflowing items in the \"y\" direction.\n         */\n        this.hasOverflow = false;\n        /**\n         * Opens the menu and makes it visible. Alternative to the `.show()` and\n         * `.close()` methods\n         */\n        this.open = false;\n        /**\n         * Offsets the menu's inline alignment from the anchor by the given number in\n         * pixels. This value is direction aware and will follow the LTR / RTL\n         * direction.\n         *\n         * e.g. LTR: positive -> right, negative -> left\n         *      RTL: positive -> left, negative -> right\n         */\n        this.xOffset = 0;\n        /**\n         * Offsets the menu's block alignment from the anchor by the given number in\n         * pixels.\n         *\n         * e.g. positive -> down, negative -> up\n         */\n        this.yOffset = 0;\n        /**\n         * Disable the `flip` behavior that usually happens on the horizontal axis\n         * when the surface would render outside the viewport.\n         */\n        this.noHorizontalFlip = false;\n        /**\n         * Disable the `flip` behavior that usually happens on the vertical axis when\n         * the surface would render outside the viewport.\n         */\n        this.noVerticalFlip = false;\n        /**\n         * The max time between the keystrokes of the typeahead menu behavior before\n         * it clears the typeahead buffer.\n         */\n        this.typeaheadDelay = DEFAULT_TYPEAHEAD_BUFFER_TIME;\n        /**\n         * The corner of the anchor which to align the menu in the standard logical\n         * property style of <block>-<inline> e.g. `'end-start'`.\n         *\n         * NOTE: This value may not be respected by the menu positioning algorithm\n         * if the menu would render outisde the viewport.\n         * Use `no-horizontal-flip` or `no-vertical-flip` to force the usage of the value\n         */\n        this.anchorCorner = Corner.END_START;\n        /**\n         * The corner of the menu which to align the anchor in the standard logical\n         * property style of <block>-<inline> e.g. `'start-start'`.\n         *\n         * NOTE: This value may not be respected by the menu positioning algorithm\n         * if the menu would render outisde the viewport.\n         * Use `no-horizontal-flip` or `no-vertical-flip` to force the usage of the value\n         */\n        this.menuCorner = Corner.START_START;\n        /**\n         * Keeps the user clicks outside the menu.\n         *\n         * NOTE: clicking outside may still cause focusout to close the menu so see\n         * `stayOpenOnFocusout`.\n         */\n        this.stayOpenOnOutsideClick = false;\n        /**\n         * Keeps the menu open when focus leaves the menu's composed subtree.\n         *\n         * NOTE: Focusout behavior will stop propagation of the focusout event. Set\n         * this property to true to opt-out of menu's focusout handling altogether.\n         */\n        this.stayOpenOnFocusout = false;\n        /**\n         * After closing, does not restore focus to the last focused element before\n         * the menu was opened.\n         */\n        this.skipRestoreFocus = false;\n        /**\n         * The element that should be focused by default once opened.\n         *\n         * NOTE: When setting default focus to 'LIST_ROOT', remember to change\n         * `tabindex` to `0` and change md-menu's display to something other than\n         * `display: contents` when necessary.\n         */\n        this.defaultFocus = FocusState.FIRST_ITEM;\n        /**\n         * Turns off navigation wrapping. By default, navigating past the end of the\n         * menu items will wrap focus back to the beginning and vice versa. Use this\n         * for ARIA patterns that do not wrap focus, like combobox.\n         */\n        this.noNavigationWrap = false;\n        this.typeaheadActive = true;\n        /**\n         * Whether or not the current menu is a submenu and should not handle specific\n         * navigation keys.\n         *\n         * @export\n         */\n        this.isSubmenu = false;\n        /**\n         * The event path of the last window pointerdown event.\n         */\n        this.pointerPath = [];\n        /**\n         * Whether or not the menu is repositoining due to window / document resize\n         */\n        this.isRepositioning = false;\n        this.openCloseAnimationSignal = createAnimationSignal();\n        this.listController = new ListController({\n            isItem: (maybeItem) => {\n                return maybeItem.hasAttribute('md-menu-item');\n            },\n            getPossibleItems: () => this.slotItems,\n            isRtl: () => getComputedStyle(this).direction === 'rtl',\n            deactivateItem: (item) => {\n                item.selected = false;\n                item.tabIndex = -1;\n            },\n            activateItem: (item) => {\n                item.selected = true;\n                item.tabIndex = 0;\n            },\n            isNavigableKey: (key) => {\n                if (!this.isSubmenu) {\n                    return menuNavKeys.has(key);\n                }\n                const isRtl = getComputedStyle(this).direction === 'rtl';\n                // we want md-submenu to handle the submenu's left/right arrow exit\n                // key so it can close the menu instead of navigate the list.\n                // Therefore we need to include all keys but left/right arrow close\n                // key\n                const arrowOpen = isRtl\n                    ? NavigableKeys.ArrowLeft\n                    : NavigableKeys.ArrowRight;\n                if (key === arrowOpen) {\n                    return true;\n                }\n                return submenuNavKeys.has(key);\n            },\n            wrapNavigation: () => !this.noNavigationWrap,\n        });\n        /**\n         * The element that was focused before the menu opened.\n         */\n        this.lastFocusedElement = null;\n        /**\n         * Handles typeahead navigation through the menu.\n         */\n        this.typeaheadController = new TypeaheadController(() => {\n            return {\n                getItems: () => this.items,\n                typeaheadBufferTime: this.typeaheadDelay,\n                active: this.typeaheadActive,\n            };\n        });\n        this.currentAnchorElement = null;\n        this.internals = \n        // Cast needed for closure\n        this.attachInternals();\n        /**\n         * Handles positioning the surface and aligning it to the anchor as well as\n         * keeping it in the viewport.\n         */\n        this.menuPositionController = new SurfacePositionController(this, () => {\n            return {\n                anchorCorner: this.anchorCorner,\n                surfaceCorner: this.menuCorner,\n                surfaceEl: this.surfaceEl,\n                anchorEl: this.anchorElement,\n                positioning: this.positioning === 'popover' ? 'document' : this.positioning,\n                isOpen: this.open,\n                xOffset: this.xOffset,\n                yOffset: this.yOffset,\n                disableBlockFlip: this.noVerticalFlip,\n                disableInlineFlip: this.noHorizontalFlip,\n                onOpen: this.onOpened,\n                beforeClose: this.beforeClose,\n                onClose: this.onClosed,\n                // We can't resize components that have overflow like menus with\n                // submenus because the overflow-y will show menu items / content\n                // outside the bounds of the menu. Popover API fixes this because each\n                // submenu is hoisted to the top-layer and are not considered overflow\n                // content.\n                repositionStrategy: this.hasOverflow && this.positioning !== 'popover'\n                    ? 'move'\n                    : 'resize',\n            };\n        });\n        this.onWindowResize = () => {\n            if (this.isRepositioning ||\n                (this.positioning !== 'document' &&\n                    this.positioning !== 'fixed' &&\n                    this.positioning !== 'popover')) {\n                return;\n            }\n            this.isRepositioning = true;\n            this.reposition();\n            this.isRepositioning = false;\n        };\n        this.handleFocusout = async (event) => {\n            const anchorEl = this.anchorElement;\n            // Do not close if we focused out by clicking on the anchor element. We\n            // can't assume anchor buttons can be the related target because of iOS does\n            // not focus buttons.\n            if (this.stayOpenOnFocusout ||\n                !this.open ||\n                this.pointerPath.includes(anchorEl)) {\n                return;\n            }\n            if (event.relatedTarget) {\n                // Don't close the menu if we are switching focus between menu,\n                // md-menu-item, and md-list or if the anchor was click focused, but check\n                // if length of pointerPath is 0 because that means something was at least\n                // clicked (shift+tab case).\n                if (isElementInSubtree(event.relatedTarget, this) ||\n                    (this.pointerPath.length !== 0 &&\n                        isElementInSubtree(event.relatedTarget, anchorEl))) {\n                    return;\n                }\n            }\n            else if (this.pointerPath.includes(this)) {\n                // If menu tabindex == -1 and the user clicks on the menu or a divider, we\n                // want to keep the menu open.\n                return;\n            }\n            const oldRestoreFocus = this.skipRestoreFocus;\n            // allow focus to continue to the next focused object rather than returning\n            this.skipRestoreFocus = true;\n            this.close();\n            // await for close\n            await this.updateComplete;\n            // return to previous behavior\n            this.skipRestoreFocus = oldRestoreFocus;\n        };\n        /**\n         * Saves the last focused element focuses the new element based on\n         * `defaultFocus`, and animates open.\n         */\n        this.onOpened = async () => {\n            this.lastFocusedElement = getFocusedElement();\n            const items = this.items;\n            const activeItemRecord = getActiveItem(items);\n            if (activeItemRecord && this.defaultFocus !== FocusState.NONE) {\n                activeItemRecord.item.tabIndex = -1;\n            }\n            let animationAborted = !this.quick;\n            if (this.quick) {\n                this.dispatchEvent(new Event('opening'));\n            }\n            else {\n                animationAborted = !!(await this.animateOpen());\n            }\n            // This must come after the opening animation or else it may focus one of\n            // the items before the animation has begun and causes the list to slide\n            // (block-padding-of-the-menu)px at the end of the animation\n            switch (this.defaultFocus) {\n                case FocusState.FIRST_ITEM:\n                    const first = getFirstActivatableItem(items);\n                    if (first) {\n                        first.tabIndex = 0;\n                        first.focus();\n                        await first.updateComplete;\n                    }\n                    break;\n                case FocusState.LAST_ITEM:\n                    const last = getLastActivatableItem(items);\n                    if (last) {\n                        last.tabIndex = 0;\n                        last.focus();\n                        await last.updateComplete;\n                    }\n                    break;\n                case FocusState.LIST_ROOT:\n                    this.focus();\n                    break;\n                default:\n                case FocusState.NONE:\n                    // Do nothing.\n                    break;\n            }\n            if (!animationAborted) {\n                this.dispatchEvent(new Event('opened'));\n            }\n        };\n        /**\n         * Animates closed.\n         */\n        this.beforeClose = async () => {\n            this.open = false;\n            if (!this.skipRestoreFocus) {\n                this.lastFocusedElement?.focus?.();\n            }\n            if (!this.quick) {\n                await this.animateClose();\n            }\n        };\n        /**\n         * Focuses the last focused element.\n         */\n        this.onClosed = () => {\n            if (this.quick) {\n                this.dispatchEvent(new Event('closing'));\n                this.dispatchEvent(new Event('closed'));\n            }\n        };\n        this.onWindowPointerdown = (event) => {\n            this.pointerPath = event.composedPath();\n        };\n        /**\n         * We cannot listen to window click because Safari on iOS will not bubble a\n         * click event on window if the item clicked is not a \"clickable\" item such as\n         * <body>\n         */\n        this.onDocumentClick = (event) => {\n            if (!this.open) {\n                return;\n            }\n            const path = event.composedPath();\n            if (!this.stayOpenOnOutsideClick &&\n                !path.includes(this) &&\n                !path.includes(this.anchorElement)) {\n                this.open = false;\n            }\n        };\n        if (!isServer) {\n            this.internals.role = 'menu';\n            this.addEventListener('keydown', this.handleKeydown);\n            // Capture so that we can grab the event before it reaches the menu item\n            // istelf. Specifically useful for the case where typeahead encounters a\n            // space and we don't want the menu item to close the menu.\n            this.addEventListener('keydown', this.captureKeydown, { capture: true });\n            this.addEventListener('focusout', this.handleFocusout);\n        }\n    }\n    /**\n     * The menu items associated with this menu. The items must be `MenuItem`s and\n     * have both the `md-menu-item` and `md-list-item` attributes.\n     */\n    get items() {\n        return this.listController.items;\n    }\n    willUpdate(changed) {\n        if (!changed.has('open')) {\n            return;\n        }\n        if (this.open) {\n            this.removeAttribute('aria-hidden');\n            return;\n        }\n        this.setAttribute('aria-hidden', 'true');\n    }\n    update(changed) {\n        if (changed.has('open')) {\n            if (this.open) {\n                this.setUpGlobalEventListeners();\n            }\n            else {\n                this.cleanUpGlobalEventListeners();\n            }\n        }\n        // Firefox does not support popover. Fall-back to using fixed.\n        if (changed.has('positioning') &&\n            this.positioning === 'popover' &&\n            // type required for Google JS conformance\n            !this.showPopover) {\n            this.positioning = 'fixed';\n        }\n        super.update(changed);\n    }\n    connectedCallback() {\n        super.connectedCallback();\n        if (this.open) {\n            this.setUpGlobalEventListeners();\n        }\n    }\n    disconnectedCallback() {\n        super.disconnectedCallback();\n        this.cleanUpGlobalEventListeners();\n    }\n    getBoundingClientRect() {\n        if (!this.surfaceEl) {\n            return super.getBoundingClientRect();\n        }\n        return this.surfaceEl.getBoundingClientRect();\n    }\n    getClientRects() {\n        if (!this.surfaceEl) {\n            return super.getClientRects();\n        }\n        return this.surfaceEl.getClientRects();\n    }\n    render() {\n        return this.renderSurface();\n    }\n    /**\n     * Renders the positionable surface element and its contents.\n     */\n    renderSurface() {\n        return html `\n      <div\n        class=\"menu ${classMap(this.getSurfaceClasses())}\"\n        style=${styleMap(this.menuPositionController.surfaceStyles)}\n        popover=${this.positioning === 'popover' ? 'manual' : nothing}>\n        ${this.renderElevation()}\n        <div class=\"items\">\n          <div class=\"item-padding\"> ${this.renderMenuItems()} </div>\n        </div>\n      </div>\n    `;\n    }\n    /**\n     * Renders the menu items' slot\n     */\n    renderMenuItems() {\n        return html `<slot\n      @close-menu=${this.onCloseMenu}\n      @deactivate-items=${this.onDeactivateItems}\n      @request-activation=${this.onRequestActivation}\n      @deactivate-typeahead=${this.handleDeactivateTypeahead}\n      @activate-typeahead=${this.handleActivateTypeahead}\n      @stay-open-on-focusout=${this.handleStayOpenOnFocusout}\n      @close-on-focusout=${this.handleCloseOnFocusout}\n      @slotchange=${this.listController.onSlotchange}></slot>`;\n    }\n    /**\n     * Renders the elevation component.\n     */\n    renderElevation() {\n        return html `<md-elevation part=\"elevation\"></md-elevation>`;\n    }\n    getSurfaceClasses() {\n        return {\n            open: this.open,\n            fixed: this.positioning === 'fixed',\n            'has-overflow': this.hasOverflow,\n        };\n    }\n    captureKeydown(event) {\n        if (event.target === this &&\n            !event.defaultPrevented &&\n            isClosableKey(event.code)) {\n            event.preventDefault();\n            this.close();\n        }\n        this.typeaheadController.onKeydown(event);\n    }\n    /**\n     * Performs the opening animation:\n     *\n     * https://direct.googleplex.com/#/spec/295000003+271060003\n     *\n     * @return A promise that resolve to `true` if the animation was aborted,\n     *     `false` if it was not aborted.\n     */\n    async animateOpen() {\n        const surfaceEl = this.surfaceEl;\n        const slotEl = this.slotEl;\n        if (!surfaceEl || !slotEl)\n            return true;\n        const openDirection = this.openDirection;\n        this.dispatchEvent(new Event('opening'));\n        // needs to be imperative because we don't want to mix animation and Lit\n        // render timing\n        surfaceEl.classList.toggle('animating', true);\n        const signal = this.openCloseAnimationSignal.start();\n        const height = surfaceEl.offsetHeight;\n        const openingUpwards = openDirection === 'UP';\n        const children = this.items;\n        const FULL_DURATION = 500;\n        const SURFACE_OPACITY_DURATION = 50;\n        const ITEM_OPACITY_DURATION = 250;\n        // We want to fit every child fade-in animation within the full duration of\n        // the animation.\n        const DELAY_BETWEEN_ITEMS = (FULL_DURATION - ITEM_OPACITY_DURATION) / children.length;\n        const surfaceHeightAnimation = surfaceEl.animate([{ height: '0px' }, { height: `${height}px` }], {\n            duration: FULL_DURATION,\n            easing: EASING.EMPHASIZED,\n        });\n        // When we are opening upwards, we want to make sure the last item is always\n        // in view, so we need to translate it upwards the opposite direction of the\n        // height animation\n        const upPositionCorrectionAnimation = slotEl.animate([\n            { transform: openingUpwards ? `translateY(-${height}px)` : '' },\n            { transform: '' },\n        ], { duration: FULL_DURATION, easing: EASING.EMPHASIZED });\n        const surfaceOpacityAnimation = surfaceEl.animate([{ opacity: 0 }, { opacity: 1 }], SURFACE_OPACITY_DURATION);\n        const childrenAnimations = [];\n        for (let i = 0; i < children.length; i++) {\n            // If we are animating upwards, then reverse the children list.\n            const directionalIndex = openingUpwards ? children.length - 1 - i : i;\n            const child = children[directionalIndex];\n            const animation = child.animate([{ opacity: 0 }, { opacity: 1 }], {\n                duration: ITEM_OPACITY_DURATION,\n                delay: DELAY_BETWEEN_ITEMS * i,\n            });\n            // Make them all initially hidden and then clean up at the end of each\n            // animation.\n            child.classList.toggle('md-menu-hidden', true);\n            animation.addEventListener('finish', () => {\n                child.classList.toggle('md-menu-hidden', false);\n            });\n            childrenAnimations.push([child, animation]);\n        }\n        let resolveAnimation = (value) => { };\n        const animationFinished = new Promise((resolve) => {\n            resolveAnimation = resolve;\n        });\n        signal.addEventListener('abort', () => {\n            surfaceHeightAnimation.cancel();\n            upPositionCorrectionAnimation.cancel();\n            surfaceOpacityAnimation.cancel();\n            childrenAnimations.forEach(([child, animation]) => {\n                child.classList.toggle('md-menu-hidden', false);\n                animation.cancel();\n            });\n            resolveAnimation(true);\n        });\n        surfaceHeightAnimation.addEventListener('finish', () => {\n            surfaceEl.classList.toggle('animating', false);\n            this.openCloseAnimationSignal.finish();\n            resolveAnimation(false);\n        });\n        return await animationFinished;\n    }\n    /**\n     * Performs the closing animation:\n     *\n     * https://direct.googleplex.com/#/spec/295000003+271060003\n     */\n    animateClose() {\n        let resolve;\n        // This promise blocks the surface position controller from setting\n        // display: none on the surface which will interfere with this animation.\n        const animationEnded = new Promise((res) => {\n            resolve = res;\n        });\n        const surfaceEl = this.surfaceEl;\n        const slotEl = this.slotEl;\n        if (!surfaceEl || !slotEl) {\n            resolve(false);\n            return animationEnded;\n        }\n        const openDirection = this.openDirection;\n        const closingDownwards = openDirection === 'UP';\n        this.dispatchEvent(new Event('closing'));\n        // needs to be imperative because we don't want to mix animation and Lit\n        // render timing\n        surfaceEl.classList.toggle('animating', true);\n        const signal = this.openCloseAnimationSignal.start();\n        const height = surfaceEl.offsetHeight;\n        const children = this.items;\n        const FULL_DURATION = 150;\n        const SURFACE_OPACITY_DURATION = 50;\n        // The surface fades away at the very end\n        const SURFACE_OPACITY_DELAY = FULL_DURATION - SURFACE_OPACITY_DURATION;\n        const ITEM_OPACITY_DURATION = 50;\n        const ITEM_OPACITY_INITIAL_DELAY = 50;\n        const END_HEIGHT_PERCENTAGE = 0.35;\n        // We want to fit every child fade-out animation within the full duration of\n        // the animation.\n        const DELAY_BETWEEN_ITEMS = (FULL_DURATION - ITEM_OPACITY_INITIAL_DELAY - ITEM_OPACITY_DURATION) /\n            children.length;\n        // The mock has the animation shrink to 35%\n        const surfaceHeightAnimation = surfaceEl.animate([\n            { height: `${height}px` },\n            { height: `${height * END_HEIGHT_PERCENTAGE}px` },\n        ], {\n            duration: FULL_DURATION,\n            easing: EASING.EMPHASIZED_ACCELERATE,\n        });\n        // When we are closing downwards, we want to make sure the last item is\n        // always in view, so we need to translate it upwards the opposite direction\n        // of the height animation\n        const downPositionCorrectionAnimation = slotEl.animate([\n            { transform: '' },\n            {\n                transform: closingDownwards\n                    ? `translateY(-${height * (1 - END_HEIGHT_PERCENTAGE)}px)`\n                    : '',\n            },\n        ], { duration: FULL_DURATION, easing: EASING.EMPHASIZED_ACCELERATE });\n        const surfaceOpacityAnimation = surfaceEl.animate([{ opacity: 1 }, { opacity: 0 }], { duration: SURFACE_OPACITY_DURATION, delay: SURFACE_OPACITY_DELAY });\n        const childrenAnimations = [];\n        for (let i = 0; i < children.length; i++) {\n            // If the animation is closing upwards, then reverse the list of\n            // children so that we animate in the opposite direction.\n            const directionalIndex = closingDownwards ? i : children.length - 1 - i;\n            const child = children[directionalIndex];\n            const animation = child.animate([{ opacity: 1 }, { opacity: 0 }], {\n                duration: ITEM_OPACITY_DURATION,\n                delay: ITEM_OPACITY_INITIAL_DELAY + DELAY_BETWEEN_ITEMS * i,\n            });\n            // Make sure the items stay hidden at the end of each child animation.\n            // We clean this up at the end of the overall animation.\n            animation.addEventListener('finish', () => {\n                child.classList.toggle('md-menu-hidden', true);\n            });\n            childrenAnimations.push([child, animation]);\n        }\n        signal.addEventListener('abort', () => {\n            surfaceHeightAnimation.cancel();\n            downPositionCorrectionAnimation.cancel();\n            surfaceOpacityAnimation.cancel();\n            childrenAnimations.forEach(([child, animation]) => {\n                animation.cancel();\n                child.classList.toggle('md-menu-hidden', false);\n            });\n            resolve(false);\n        });\n        surfaceHeightAnimation.addEventListener('finish', () => {\n            surfaceEl.classList.toggle('animating', false);\n            childrenAnimations.forEach(([child]) => {\n                child.classList.toggle('md-menu-hidden', false);\n            });\n            this.openCloseAnimationSignal.finish();\n            this.dispatchEvent(new Event('closed'));\n            resolve(true);\n        });\n        return animationEnded;\n    }\n    handleKeydown(event) {\n        // At any key event, the pointer interaction is done so we need to clear our\n        // cached pointerpath. This handles the case where the user clicks on the\n        // anchor, and then hits shift+tab\n        this.pointerPath = [];\n        this.listController.handleKeydown(event);\n    }\n    setUpGlobalEventListeners() {\n        document.addEventListener('click', this.onDocumentClick, { capture: true });\n        window.addEventListener('pointerdown', this.onWindowPointerdown);\n        document.addEventListener('resize', this.onWindowResize, { passive: true });\n        window.addEventListener('resize', this.onWindowResize, { passive: true });\n    }\n    cleanUpGlobalEventListeners() {\n        document.removeEventListener('click', this.onDocumentClick, {\n            capture: true,\n        });\n        window.removeEventListener('pointerdown', this.onWindowPointerdown);\n        document.removeEventListener('resize', this.onWindowResize);\n        window.removeEventListener('resize', this.onWindowResize);\n    }\n    onCloseMenu() {\n        this.close();\n    }\n    onDeactivateItems(event) {\n        event.stopPropagation();\n        this.listController.onDeactivateItems();\n    }\n    onRequestActivation(event) {\n        event.stopPropagation();\n        this.listController.onRequestActivation(event);\n    }\n    handleDeactivateTypeahead(event) {\n        // stopPropagation so that this does not deactivate any typeaheads in menus\n        // nested above it e.g. md-sub-menu\n        event.stopPropagation();\n        this.typeaheadActive = false;\n    }\n    handleActivateTypeahead(event) {\n        // stopPropagation so that this does not activate any typeaheads in menus\n        // nested above it e.g. md-sub-menu\n        event.stopPropagation();\n        this.typeaheadActive = true;\n    }\n    handleStayOpenOnFocusout(event) {\n        event.stopPropagation();\n        this.stayOpenOnFocusout = true;\n    }\n    handleCloseOnFocusout(event) {\n        event.stopPropagation();\n        this.stayOpenOnFocusout = false;\n    }\n    close() {\n        this.open = false;\n        const maybeSubmenu = this.slotItems;\n        maybeSubmenu.forEach((item) => {\n            item.close?.();\n        });\n    }\n    show() {\n        this.open = true;\n    }\n    /**\n     * Activates the next item in the menu. If at the end of the menu, the first\n     * item will be activated.\n     *\n     * @return The activated menu item or `null` if there are no items.\n     */\n    activateNextItem() {\n        return this.listController.activateNextItem() ?? null;\n    }\n    /**\n     * Activates the previous item in the menu. If at the start of the menu, the\n     * last item will be activated.\n     *\n     * @return The activated menu item or `null` if there are no items.\n     */\n    activatePreviousItem() {\n        return this.listController.activatePreviousItem() ?? null;\n    }\n    /**\n     * Repositions the menu if it is open.\n     *\n     * Useful for the case where document or window-positioned menus have their\n     * anchors moved while open.\n     */\n    reposition() {\n        if (this.open) {\n            this.menuPositionController.position();\n        }\n    }\n}\n__decorate([\n    query('.menu')\n], Menu.prototype, \"surfaceEl\", void 0);\n__decorate([\n    query('slot')\n], Menu.prototype, \"slotEl\", void 0);\n__decorate([\n    property()\n], Menu.prototype, \"anchor\", void 0);\n__decorate([\n    property()\n], Menu.prototype, \"positioning\", void 0);\n__decorate([\n    property({ type: Boolean })\n], Menu.prototype, \"quick\", void 0);\n__decorate([\n    property({ type: Boolean, attribute: 'has-overflow' })\n], Menu.prototype, \"hasOverflow\", void 0);\n__decorate([\n    property({ type: Boolean, reflect: true })\n], Menu.prototype, \"open\", void 0);\n__decorate([\n    property({ type: Number, attribute: 'x-offset' })\n], Menu.prototype, \"xOffset\", void 0);\n__decorate([\n    property({ type: Number, attribute: 'y-offset' })\n], Menu.prototype, \"yOffset\", void 0);\n__decorate([\n    property({ type: Boolean, attribute: 'no-horizontal-flip' })\n], Menu.prototype, \"noHorizontalFlip\", void 0);\n__decorate([\n    property({ type: Boolean, attribute: 'no-vertical-flip' })\n], Menu.prototype, \"noVerticalFlip\", void 0);\n__decorate([\n    property({ type: Number, attribute: 'typeahead-delay' })\n], Menu.prototype, \"typeaheadDelay\", void 0);\n__decorate([\n    property({ attribute: 'anchor-corner' })\n], Menu.prototype, \"anchorCorner\", void 0);\n__decorate([\n    property({ attribute: 'menu-corner' })\n], Menu.prototype, \"menuCorner\", void 0);\n__decorate([\n    property({ type: Boolean, attribute: 'stay-open-on-outside-click' })\n], Menu.prototype, \"stayOpenOnOutsideClick\", void 0);\n__decorate([\n    property({ type: Boolean, attribute: 'stay-open-on-focusout' })\n], Menu.prototype, \"stayOpenOnFocusout\", void 0);\n__decorate([\n    property({ type: Boolean, attribute: 'skip-restore-focus' })\n], Menu.prototype, \"skipRestoreFocus\", void 0);\n__decorate([\n    property({ attribute: 'default-focus' })\n], Menu.prototype, \"defaultFocus\", void 0);\n__decorate([\n    property({ type: Boolean, attribute: 'no-navigation-wrap' })\n], Menu.prototype, \"noNavigationWrap\", void 0);\n__decorate([\n    queryAssignedElements({ flatten: true })\n], Menu.prototype, \"slotItems\", void 0);\n__decorate([\n    state()\n], Menu.prototype, \"typeaheadActive\", void 0);\n//# sourceMappingURL=menu.js.map","/**\n * @license\n * Copyright 2022 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { __decorate } from \"tslib\";\nimport { customElement } from 'lit/decorators.js';\nimport { Menu } from './internal/menu.js';\nimport { styles } from './internal/menu-styles.js';\nexport { CloseReason, FocusState, } from './internal/controllers/shared.js';\nexport { Corner } from './internal/menu.js';\n/**\n * @summary Menus display a list of choices on a temporary surface.\n *\n * @description\n * Menus appear when users interact with a button, action, or other control.\n *\n * They can be opened from a variety of elements, most commonly icon buttons,\n * buttons, and text fields.\n *\n * md-menu listens for the `close-menu` and `deselect-items` events.\n *\n * - `close-menu` closes the menu when dispatched from a child element.\n * - `deselect-items` deselects all of its immediate menu-item children.\n *\n * @example\n * ```html\n * <div style=\"position:relative;\">\n *   <button\n *       id=\"anchor\"\n *       @click=${() => this.menuRef.value.show()}>\n *     Click to open menu\n *   </button>\n *   <!--\n *     `has-overflow` is required when using a submenu which overflows the\n *     menu's contents.\n *\n *     Additionally, `anchor` ingests an idref which do not pass through shadow\n *     roots. You can also set `.anchorElement` to an element reference if\n *     necessary.\n *   -->\n *   <md-menu anchor=\"anchor\" has-overflow ${ref(menuRef)}>\n *     <md-menu-item headline=\"This is a headline\"></md-menu-item>\n *     <md-sub-menu>\n *       <md-menu-item\n *           slot=\"item\"\n *           headline=\"this is a submenu item\">\n *       </md-menu-item>\n *       <md-menu slot=\"menu\">\n *         <md-menu-item headline=\"This is an item inside a submenu\">\n *         </md-menu-item>\n *       </md-menu>\n *     </md-sub-menu>\n *   </md-menu>\n * </div>\n * ```\n *\n * @final\n * @suppress {visibility}\n */\nlet MdMenu = class MdMenu extends Menu {\n};\nMdMenu.styles = [styles];\nMdMenu = __decorate([\n    customElement('md-menu')\n], MdMenu);\nexport { MdMenu };\n//# sourceMappingURL=menu.js.map","/**\n * @license\n * Copyright 2024 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n// Generated stylesheet for ./radio/internal/radio-styles.css.\nimport { css } from 'lit';\nexport const styles = css `@layer{:host{display:inline-flex;height:var(--md-radio-icon-size, 20px);outline:none;position:relative;vertical-align:top;width:var(--md-radio-icon-size, 20px);-webkit-tap-highlight-color:rgba(0,0,0,0);cursor:pointer;--md-ripple-hover-color: var(--md-radio-hover-state-layer-color, var(--md-sys-color-on-surface, #1d1b20));--md-ripple-hover-opacity: var(--md-radio-hover-state-layer-opacity, 0.08);--md-ripple-pressed-color: var(--md-radio-pressed-state-layer-color, var(--md-sys-color-primary, #6750a4));--md-ripple-pressed-opacity: var(--md-radio-pressed-state-layer-opacity, 0.12)}:host([disabled]){cursor:default}:host([touch-target=wrapper]){margin:max(0px,(48px - var(--md-radio-icon-size, 20px))/2)}.container{display:flex;height:100%;place-content:center;place-items:center;width:100%}md-focus-ring{height:44px;inset:unset;width:44px}.checked{--md-ripple-hover-color: var(--md-radio-selected-hover-state-layer-color, var(--md-sys-color-primary, #6750a4));--md-ripple-hover-opacity: var(--md-radio-selected-hover-state-layer-opacity, 0.08);--md-ripple-pressed-color: var(--md-radio-selected-pressed-state-layer-color, var(--md-sys-color-on-surface, #1d1b20));--md-ripple-pressed-opacity: var(--md-radio-selected-pressed-state-layer-opacity, 0.12)}.touch-target{height:48px;position:absolute;width:48px}:host([touch-target=none]) .touch-target{display:none}md-ripple{border-radius:50%;height:var(--md-radio-state-layer-size, 40px);inset:unset;width:var(--md-radio-state-layer-size, 40px)}.icon{fill:var(--md-radio-icon-color, var(--md-sys-color-on-surface-variant, #49454f));inset:0;position:absolute}.outer.circle{transition:fill 50ms linear}.inner.circle{opacity:0;transform-origin:center;transition:opacity 50ms linear}.checked .icon{fill:var(--md-radio-selected-icon-color, var(--md-sys-color-primary, #6750a4))}.checked .inner.circle{animation:inner-circle-grow 300ms cubic-bezier(0.05, 0.7, 0.1, 1);opacity:1}@keyframes inner-circle-grow{from{transform:scale(0)}to{transform:scale(1)}}:host([disabled]) .circle{animation-duration:0s;transition-duration:0s}:host(:hover) .icon{fill:var(--md-radio-hover-icon-color, var(--md-sys-color-on-surface, #1d1b20))}:host(:focus-within) .icon{fill:var(--md-radio-focus-icon-color, var(--md-sys-color-on-surface, #1d1b20))}:host(:active) .icon{fill:var(--md-radio-pressed-icon-color, var(--md-sys-color-on-surface, #1d1b20))}:host([disabled]) .icon{fill:var(--md-radio-disabled-unselected-icon-color, var(--md-sys-color-on-surface, #1d1b20));opacity:var(--md-radio-disabled-unselected-icon-opacity, 0.38)}:host(:hover) .checked .icon{fill:var(--md-radio-selected-hover-icon-color, var(--md-sys-color-primary, #6750a4))}:host(:focus-within) .checked .icon{fill:var(--md-radio-selected-focus-icon-color, var(--md-sys-color-primary, #6750a4))}:host(:active) .checked .icon{fill:var(--md-radio-selected-pressed-icon-color, var(--md-sys-color-primary, #6750a4))}:host([disabled]) .checked .icon{fill:var(--md-radio-disabled-selected-icon-color, var(--md-sys-color-on-surface, #1d1b20));opacity:var(--md-radio-disabled-selected-icon-opacity, 0.38)}}@layer hcm{@media(forced-colors: active){.icon{fill:CanvasText}:host([disabled]) .icon{fill:GrayText;opacity:1}}}\n`;\n//# sourceMappingURL=radio-styles.js.map","/**\n * @license\n * Copyright 2018 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\nvar _a;\nimport { __decorate } from \"tslib\";\nimport '../../focus/md-focus-ring.js';\nimport '../../ripple/ripple.js';\nimport { html, isServer, LitElement } from 'lit';\nimport { property, query } from 'lit/decorators.js';\nimport { classMap } from 'lit/directives/class-map.js';\nimport { isActivationClick } from '../../internal/events/form-label-activation.js';\nimport { createValidator, getValidityAnchor, mixinConstraintValidation, } from '../../labs/behaviors/constraint-validation.js';\nimport { internals, mixinElementInternals, } from '../../labs/behaviors/element-internals.js';\nimport { mixinFocusable } from '../../labs/behaviors/focusable.js';\nimport { getFormState, getFormValue, mixinFormAssociated, } from '../../labs/behaviors/form-associated.js';\nimport { RadioValidator } from '../../labs/behaviors/validators/radio-validator.js';\nimport { SingleSelectionController } from './single-selection-controller.js';\nconst CHECKED = Symbol('checked');\nlet maskId = 0;\n// Separate variable needed for closure.\nconst radioBaseClass = mixinConstraintValidation(mixinFormAssociated(mixinElementInternals(mixinFocusable(LitElement))));\n/**\n * A radio component.\n *\n * @fires input {InputEvent} Dispatched when the value changes from user\n * interaction. --bubbles\n * @fires change {Event} Dispatched when the value changes from user\n * interaction. --bubbles --composed\n */\nexport class Radio extends radioBaseClass {\n    /**\n     * Whether or not the radio is selected.\n     */\n    get checked() {\n        return this[CHECKED];\n    }\n    set checked(checked) {\n        const wasChecked = this.checked;\n        if (wasChecked === checked) {\n            return;\n        }\n        this[CHECKED] = checked;\n        this.requestUpdate('checked', wasChecked);\n        this.selectionController.handleCheckedChange();\n    }\n    constructor() {\n        super();\n        // Unique maskId is required because of a Safari bug that fail to persist\n        // reference to the mask. This should be removed once the bug is fixed.\n        this.maskId = `cutout${++maskId}`;\n        this[_a] = false;\n        /**\n         * Whether or not the radio is required. If any radio is required in a group,\n         * all radios are implicitly required.\n         */\n        this.required = false;\n        /**\n         * The element value to use in form submission when checked.\n         */\n        this.value = 'on';\n        this.selectionController = new SingleSelectionController(this);\n        this.addController(this.selectionController);\n        if (!isServer) {\n            this[internals].role = 'radio';\n            this.addEventListener('click', this.handleClick.bind(this));\n            this.addEventListener('keydown', this.handleKeydown.bind(this));\n        }\n    }\n    render() {\n        const classes = { 'checked': this.checked };\n        return html `\n      <div class=\"container ${classMap(classes)}\" aria-hidden=\"true\">\n        <md-ripple\n          part=\"ripple\"\n          .control=${this}\n          ?disabled=${this.disabled}></md-ripple>\n        <md-focus-ring part=\"focus-ring\" .control=${this}></md-focus-ring>\n        <svg class=\"icon\" viewBox=\"0 0 20 20\">\n          <mask id=\"${this.maskId}\">\n            <rect width=\"100%\" height=\"100%\" fill=\"white\" />\n            <circle cx=\"10\" cy=\"10\" r=\"8\" fill=\"black\" />\n          </mask>\n          <circle\n            class=\"outer circle\"\n            cx=\"10\"\n            cy=\"10\"\n            r=\"10\"\n            mask=\"url(#${this.maskId})\" />\n          <circle class=\"inner circle\" cx=\"10\" cy=\"10\" r=\"5\" />\n        </svg>\n\n        <div class=\"touch-target\"></div>\n      </div>\n    `;\n    }\n    updated() {\n        this[internals].ariaChecked = String(this.checked);\n    }\n    async handleClick(event) {\n        if (this.disabled) {\n            return;\n        }\n        // allow event to propagate to user code after a microtask.\n        await 0;\n        if (event.defaultPrevented) {\n            return;\n        }\n        if (isActivationClick(event)) {\n            this.focus();\n        }\n        // Per spec, clicking on a radio input always selects it.\n        this.checked = true;\n        this.dispatchEvent(new Event('change', { bubbles: true }));\n        this.dispatchEvent(new InputEvent('input', { bubbles: true, composed: true }));\n    }\n    async handleKeydown(event) {\n        // allow event to propagate to user code after a microtask.\n        await 0;\n        if (event.key !== ' ' || event.defaultPrevented) {\n            return;\n        }\n        this.click();\n    }\n    [(_a = CHECKED, getFormValue)]() {\n        return this.checked ? this.value : null;\n    }\n    [getFormState]() {\n        return String(this.checked);\n    }\n    formResetCallback() {\n        // The checked property does not reflect, so the original attribute set by\n        // the user is used to determine the default value.\n        this.checked = this.hasAttribute('checked');\n    }\n    formStateRestoreCallback(state) {\n        this.checked = state === 'true';\n    }\n    [createValidator]() {\n        return new RadioValidator(() => {\n            if (!this.selectionController) {\n                // Validation runs on superclass construction, so selection controller\n                // might not actually be ready until this class constructs.\n                return [this];\n            }\n            return this.selectionController.controls;\n        });\n    }\n    [getValidityAnchor]() {\n        return this.container;\n    }\n}\n__decorate([\n    property({ type: Boolean })\n], Radio.prototype, \"checked\", null);\n__decorate([\n    property({ type: Boolean })\n], Radio.prototype, \"required\", void 0);\n__decorate([\n    property()\n], Radio.prototype, \"value\", void 0);\n__decorate([\n    query('.container')\n], Radio.prototype, \"container\", void 0);\n//# sourceMappingURL=radio.js.map","/**\n * @license\n * Copyright 2022 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n/**\n * A `ReactiveController` that provides root node-scoped single selection for\n * elements, similar to native `<input type=\"radio\">` selection.\n *\n * To use, elements should add the controller and call\n * `selectionController.handleCheckedChange()` in a getter/setter. This must\n * be synchronous to match native behavior.\n *\n * @example\n * const CHECKED = Symbol('checked');\n *\n * class MyToggle extends LitElement {\n *   get checked() { return this[CHECKED]; }\n *   set checked(checked: boolean) {\n *     const oldValue = this.checked;\n *     if (oldValue === checked) {\n *       return;\n *     }\n *\n *     this[CHECKED] = checked;\n *     this.selectionController.handleCheckedChange();\n *     this.requestUpdate('checked', oldValue);\n *   }\n *\n *   [CHECKED] = false;\n *\n *   private selectionController = new SingleSelectionController(this);\n *\n *   constructor() {\n *     super();\n *     this.addController(this.selectionController);\n *   }\n * }\n */\nexport class SingleSelectionController {\n    /**\n     * All single selection elements in the host element's root with the same\n     * `name` attribute, including the host element.\n     */\n    get controls() {\n        const name = this.host.getAttribute('name');\n        if (!name || !this.root || !this.host.isConnected) {\n            return [this.host];\n        }\n        // Cast as unknown since there is not enough information for typescript to\n        // know that there is always at least one element (the host).\n        return Array.from(this.root.querySelectorAll(`[name=\"${name}\"]`));\n    }\n    constructor(host) {\n        this.host = host;\n        this.focused = false;\n        this.root = null;\n        this.handleFocusIn = () => {\n            this.focused = true;\n            this.updateTabIndices();\n        };\n        this.handleFocusOut = () => {\n            this.focused = false;\n            this.updateTabIndices();\n        };\n        /**\n         * Handles arrow key events from the host. Using the arrow keys will\n         * select and check the next or previous sibling with the host's\n         * `name` attribute.\n         */\n        this.handleKeyDown = (event) => {\n            const isDown = event.key === 'ArrowDown';\n            const isUp = event.key === 'ArrowUp';\n            const isLeft = event.key === 'ArrowLeft';\n            const isRight = event.key === 'ArrowRight';\n            // Ignore non-arrow keys\n            if (!isLeft && !isRight && !isDown && !isUp) {\n                return;\n            }\n            // Don't try to select another sibling if there aren't any.\n            const siblings = this.controls;\n            if (!siblings.length) {\n                return;\n            }\n            // Prevent default interactions on the element for arrow keys,\n            // since this controller will introduce new behavior.\n            event.preventDefault();\n            // Check if moving forwards or backwards\n            const isRtl = getComputedStyle(this.host).direction === 'rtl';\n            const forwards = isRtl ? isLeft || isDown : isRight || isDown;\n            const hostIndex = siblings.indexOf(this.host);\n            let nextIndex = forwards ? hostIndex + 1 : hostIndex - 1;\n            // Search for the next sibling that is not disabled to select.\n            // If we return to the host index, there is nothing to select.\n            while (nextIndex !== hostIndex) {\n                if (nextIndex >= siblings.length) {\n                    // Return to start if moving past the last item.\n                    nextIndex = 0;\n                }\n                else if (nextIndex < 0) {\n                    // Go to end if moving before the first item.\n                    nextIndex = siblings.length - 1;\n                }\n                // Check if the next sibling is disabled. If so,\n                // move the index and continue searching.\n                const nextSibling = siblings[nextIndex];\n                if (nextSibling.hasAttribute('disabled')) {\n                    if (forwards) {\n                        nextIndex++;\n                    }\n                    else {\n                        nextIndex--;\n                    }\n                    continue;\n                }\n                // Uncheck and remove focusability from other siblings.\n                for (const sibling of siblings) {\n                    if (sibling !== nextSibling) {\n                        sibling.checked = false;\n                        sibling.tabIndex = -1;\n                        sibling.blur();\n                    }\n                }\n                // The next sibling should be checked, focused and dispatch a change event\n                nextSibling.checked = true;\n                nextSibling.tabIndex = 0;\n                nextSibling.focus();\n                // Fire a change event since the change is triggered by a user action.\n                // This matches native <input type=\"radio\"> behavior.\n                nextSibling.dispatchEvent(new Event('change', { bubbles: true }));\n                break;\n            }\n        };\n    }\n    hostConnected() {\n        this.root = this.host.getRootNode();\n        this.host.addEventListener('keydown', this.handleKeyDown);\n        this.host.addEventListener('focusin', this.handleFocusIn);\n        this.host.addEventListener('focusout', this.handleFocusOut);\n        if (this.host.checked) {\n            // Uncheck other siblings when attached if already checked. This mimics\n            // native <input type=\"radio\"> behavior.\n            this.uncheckSiblings();\n        }\n        // Update for the newly added host.\n        this.updateTabIndices();\n    }\n    hostDisconnected() {\n        this.host.removeEventListener('keydown', this.handleKeyDown);\n        this.host.removeEventListener('focusin', this.handleFocusIn);\n        this.host.removeEventListener('focusout', this.handleFocusOut);\n        // Update for siblings that are still connected.\n        this.updateTabIndices();\n        this.root = null;\n    }\n    /**\n     * Should be called whenever the host's `checked` property changes\n     * synchronously.\n     */\n    handleCheckedChange() {\n        if (!this.host.checked) {\n            return;\n        }\n        this.uncheckSiblings();\n        this.updateTabIndices();\n    }\n    uncheckSiblings() {\n        for (const sibling of this.controls) {\n            if (sibling !== this.host) {\n                sibling.checked = false;\n            }\n        }\n    }\n    /**\n     * Updates the `tabindex` of the host and its siblings.\n     */\n    updateTabIndices() {\n        // There are three tabindex states for a group of elements:\n        // 1. If any are checked, that element is focusable.\n        const siblings = this.controls;\n        const checkedSibling = siblings.find((sibling) => sibling.checked);\n        // 2. If an element is focused, the others are no longer focusable.\n        if (checkedSibling || this.focused) {\n            const focusable = checkedSibling || this.host;\n            focusable.tabIndex = 0;\n            for (const sibling of siblings) {\n                if (sibling !== focusable) {\n                    sibling.tabIndex = -1;\n                }\n            }\n            return;\n        }\n        // 3. If none are checked or focused, all are focusable.\n        for (const sibling of siblings) {\n            sibling.tabIndex = 0;\n        }\n    }\n}\n//# sourceMappingURL=single-selection-controller.js.map","/**\n * @license\n * Copyright 2022 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { __decorate } from \"tslib\";\nimport { customElement } from 'lit/decorators.js';\nimport { Radio } from './internal/radio.js';\nimport { styles } from './internal/radio-styles.js';\n/**\n * @summary Radio buttons allow users to select one option from a set.\n *\n * @description\n * Radio buttons are the recommended way to allow users to make a single\n * selection from a list of options.\n *\n * Only one radio button can be selected at a time.\n *\n * Use radio buttons to:\n * - Select a single option from a set\n * - Expose all available options\n *\n * @final\n * @suppress {visibility}\n */\nlet MdRadio = class MdRadio extends Radio {\n};\nMdRadio.styles = [styles];\nMdRadio = __decorate([\n    customElement('md-radio')\n], MdRadio);\nexport { MdRadio };\n//# sourceMappingURL=radio.js.map","/**\n * @license\n * Copyright 2024 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n// Generated stylesheet for ./ripple/internal/ripple-styles.css.\nimport { css } from 'lit';\nexport const styles = css `:host{display:flex;margin:auto;pointer-events:none}:host([disabled]){display:none}@media(forced-colors: active){:host{display:none}}:host,.surface{border-radius:inherit;position:absolute;inset:0;overflow:hidden}.surface{-webkit-tap-highlight-color:rgba(0,0,0,0)}.surface::before,.surface::after{content:\"\";opacity:0;position:absolute}.surface::before{background-color:var(--md-ripple-hover-color, var(--md-sys-color-on-surface, #1d1b20));inset:0;transition:opacity 15ms linear,background-color 15ms linear}.surface::after{background:radial-gradient(closest-side, var(--md-ripple-pressed-color, var(--md-sys-color-on-surface, #1d1b20)) max(100% - 70px, 65%), transparent 100%);transform-origin:center center;transition:opacity 375ms linear}.hovered::before{background-color:var(--md-ripple-hover-color, var(--md-sys-color-on-surface, #1d1b20));opacity:var(--md-ripple-hover-opacity, 0.08)}.pressed::after{opacity:var(--md-ripple-pressed-opacity, 0.12);transition-duration:105ms}\n`;\n//# sourceMappingURL=ripple-styles.js.map","/**\n * @license\n * Copyright 2022 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { __decorate } from \"tslib\";\nimport { html, isServer, LitElement } from 'lit';\nimport { property, query, state } from 'lit/decorators.js';\nimport { classMap } from 'lit/directives/class-map.js';\nimport { AttachableController, } from '../../internal/controller/attachable-controller.js';\nimport { EASING } from '../../internal/motion/animation.js';\nconst PRESS_GROW_MS = 450;\nconst MINIMUM_PRESS_MS = 225;\nconst INITIAL_ORIGIN_SCALE = 0.2;\nconst PADDING = 10;\nconst SOFT_EDGE_MINIMUM_SIZE = 75;\nconst SOFT_EDGE_CONTAINER_RATIO = 0.35;\nconst PRESS_PSEUDO = '::after';\nconst ANIMATION_FILL = 'forwards';\n/**\n * Interaction states for the ripple.\n *\n * On Touch:\n *  - `INACTIVE -> TOUCH_DELAY -> WAITING_FOR_CLICK -> INACTIVE`\n *  - `INACTIVE -> TOUCH_DELAY -> HOLDING -> WAITING_FOR_CLICK -> INACTIVE`\n *\n * On Mouse or Pen:\n *   - `INACTIVE -> WAITING_FOR_CLICK -> INACTIVE`\n */\nvar State;\n(function (State) {\n    /**\n     * Initial state of the control, no touch in progress.\n     *\n     * Transitions:\n     *   - on touch down: transition to `TOUCH_DELAY`.\n     *   - on mouse down: transition to `WAITING_FOR_CLICK`.\n     */\n    State[State[\"INACTIVE\"] = 0] = \"INACTIVE\";\n    /**\n     * Touch down has been received, waiting to determine if it's a swipe or\n     * scroll.\n     *\n     * Transitions:\n     *   - on touch up: begin press; transition to `WAITING_FOR_CLICK`.\n     *   - on cancel: transition to `INACTIVE`.\n     *   - after `TOUCH_DELAY_MS`: begin press; transition to `HOLDING`.\n     */\n    State[State[\"TOUCH_DELAY\"] = 1] = \"TOUCH_DELAY\";\n    /**\n     * A touch has been deemed to be a press\n     *\n     * Transitions:\n     *  - on up: transition to `WAITING_FOR_CLICK`.\n     */\n    State[State[\"HOLDING\"] = 2] = \"HOLDING\";\n    /**\n     * The user touch has finished, transition into rest state.\n     *\n     * Transitions:\n     *   - on click end press; transition to `INACTIVE`.\n     */\n    State[State[\"WAITING_FOR_CLICK\"] = 3] = \"WAITING_FOR_CLICK\";\n})(State || (State = {}));\n/**\n * Events that the ripple listens to.\n */\nconst EVENTS = [\n    'click',\n    'contextmenu',\n    'pointercancel',\n    'pointerdown',\n    'pointerenter',\n    'pointerleave',\n    'pointerup',\n];\n/**\n * Delay reacting to touch so that we do not show the ripple for a swipe or\n * scroll interaction.\n */\nconst TOUCH_DELAY_MS = 150;\n/**\n * Used to detect if HCM is active. Events do not process during HCM when the\n * ripple is not displayed.\n */\nconst FORCED_COLORS = isServer\n    ? null\n    : window.matchMedia('(forced-colors: active)');\n/**\n * A ripple component.\n */\nexport class Ripple extends LitElement {\n    constructor() {\n        super(...arguments);\n        /**\n         * Disables the ripple.\n         */\n        this.disabled = false;\n        this.hovered = false;\n        this.pressed = false;\n        this.rippleSize = '';\n        this.rippleScale = '';\n        this.initialSize = 0;\n        this.state = State.INACTIVE;\n        this.checkBoundsAfterContextMenu = false;\n        this.attachableController = new AttachableController(this, this.onControlChange.bind(this));\n    }\n    get htmlFor() {\n        return this.attachableController.htmlFor;\n    }\n    set htmlFor(htmlFor) {\n        this.attachableController.htmlFor = htmlFor;\n    }\n    get control() {\n        return this.attachableController.control;\n    }\n    set control(control) {\n        this.attachableController.control = control;\n    }\n    attach(control) {\n        this.attachableController.attach(control);\n    }\n    detach() {\n        this.attachableController.detach();\n    }\n    connectedCallback() {\n        super.connectedCallback();\n        // Needed for VoiceOver, which will create a \"group\" if the element is a\n        // sibling to other content.\n        this.setAttribute('aria-hidden', 'true');\n    }\n    render() {\n        const classes = {\n            'hovered': this.hovered,\n            'pressed': this.pressed,\n        };\n        return html `<div class=\"surface ${classMap(classes)}\"></div>`;\n    }\n    update(changedProps) {\n        if (changedProps.has('disabled') && this.disabled) {\n            this.hovered = false;\n            this.pressed = false;\n        }\n        super.update(changedProps);\n    }\n    /**\n     * TODO(b/269799771): make private\n     * @private only public for slider\n     */\n    handlePointerenter(event) {\n        if (!this.shouldReactToEvent(event)) {\n            return;\n        }\n        this.hovered = true;\n    }\n    /**\n     * TODO(b/269799771): make private\n     * @private only public for slider\n     */\n    handlePointerleave(event) {\n        if (!this.shouldReactToEvent(event)) {\n            return;\n        }\n        this.hovered = false;\n        // release a held mouse or pen press that moves outside the element\n        if (this.state !== State.INACTIVE) {\n            this.endPressAnimation();\n        }\n    }\n    handlePointerup(event) {\n        if (!this.shouldReactToEvent(event)) {\n            return;\n        }\n        if (this.state === State.HOLDING) {\n            this.state = State.WAITING_FOR_CLICK;\n            return;\n        }\n        if (this.state === State.TOUCH_DELAY) {\n            this.state = State.WAITING_FOR_CLICK;\n            this.startPressAnimation(this.rippleStartEvent);\n            return;\n        }\n    }\n    async handlePointerdown(event) {\n        if (!this.shouldReactToEvent(event)) {\n            return;\n        }\n        this.rippleStartEvent = event;\n        if (!this.isTouch(event)) {\n            this.state = State.WAITING_FOR_CLICK;\n            this.startPressAnimation(event);\n            return;\n        }\n        // after a longpress contextmenu event, an extra `pointerdown` can be\n        // dispatched to the pressed element. Check that the down is within\n        // bounds of the element in this case.\n        if (this.checkBoundsAfterContextMenu && !this.inBounds(event)) {\n            return;\n        }\n        this.checkBoundsAfterContextMenu = false;\n        // Wait for a hold after touch delay\n        this.state = State.TOUCH_DELAY;\n        await new Promise((resolve) => {\n            setTimeout(resolve, TOUCH_DELAY_MS);\n        });\n        if (this.state !== State.TOUCH_DELAY) {\n            return;\n        }\n        this.state = State.HOLDING;\n        this.startPressAnimation(event);\n    }\n    handleClick() {\n        // Click is a MouseEvent in Firefox and Safari, so we cannot use\n        // `shouldReactToEvent`\n        if (this.disabled) {\n            return;\n        }\n        if (this.state === State.WAITING_FOR_CLICK) {\n            this.endPressAnimation();\n            return;\n        }\n        if (this.state === State.INACTIVE) {\n            // keyboard synthesized click event\n            this.startPressAnimation();\n            this.endPressAnimation();\n        }\n    }\n    handlePointercancel(event) {\n        if (!this.shouldReactToEvent(event)) {\n            return;\n        }\n        this.endPressAnimation();\n    }\n    handleContextmenu() {\n        if (this.disabled) {\n            return;\n        }\n        this.checkBoundsAfterContextMenu = true;\n        this.endPressAnimation();\n    }\n    determineRippleSize() {\n        const { height, width } = this.getBoundingClientRect();\n        const maxDim = Math.max(height, width);\n        const softEdgeSize = Math.max(SOFT_EDGE_CONTAINER_RATIO * maxDim, SOFT_EDGE_MINIMUM_SIZE);\n        const initialSize = Math.floor(maxDim * INITIAL_ORIGIN_SCALE);\n        const hypotenuse = Math.sqrt(width ** 2 + height ** 2);\n        const maxRadius = hypotenuse + PADDING;\n        this.initialSize = initialSize;\n        this.rippleScale = `${(maxRadius + softEdgeSize) / initialSize}`;\n        this.rippleSize = `${initialSize}px`;\n    }\n    getNormalizedPointerEventCoords(pointerEvent) {\n        const { scrollX, scrollY } = window;\n        const { left, top } = this.getBoundingClientRect();\n        const documentX = scrollX + left;\n        const documentY = scrollY + top;\n        const { pageX, pageY } = pointerEvent;\n        return { x: pageX - documentX, y: pageY - documentY };\n    }\n    getTranslationCoordinates(positionEvent) {\n        const { height, width } = this.getBoundingClientRect();\n        // end in the center\n        const endPoint = {\n            x: (width - this.initialSize) / 2,\n            y: (height - this.initialSize) / 2,\n        };\n        let startPoint;\n        if (positionEvent instanceof PointerEvent) {\n            startPoint = this.getNormalizedPointerEventCoords(positionEvent);\n        }\n        else {\n            startPoint = {\n                x: width / 2,\n                y: height / 2,\n            };\n        }\n        // center around start point\n        startPoint = {\n            x: startPoint.x - this.initialSize / 2,\n            y: startPoint.y - this.initialSize / 2,\n        };\n        return { startPoint, endPoint };\n    }\n    startPressAnimation(positionEvent) {\n        if (!this.mdRoot) {\n            return;\n        }\n        this.pressed = true;\n        this.growAnimation?.cancel();\n        this.determineRippleSize();\n        const { startPoint, endPoint } = this.getTranslationCoordinates(positionEvent);\n        const translateStart = `${startPoint.x}px, ${startPoint.y}px`;\n        const translateEnd = `${endPoint.x}px, ${endPoint.y}px`;\n        this.growAnimation = this.mdRoot.animate({\n            top: [0, 0],\n            left: [0, 0],\n            height: [this.rippleSize, this.rippleSize],\n            width: [this.rippleSize, this.rippleSize],\n            transform: [\n                `translate(${translateStart}) scale(1)`,\n                `translate(${translateEnd}) scale(${this.rippleScale})`,\n            ],\n        }, {\n            pseudoElement: PRESS_PSEUDO,\n            duration: PRESS_GROW_MS,\n            easing: EASING.STANDARD,\n            fill: ANIMATION_FILL,\n        });\n    }\n    async endPressAnimation() {\n        this.rippleStartEvent = undefined;\n        this.state = State.INACTIVE;\n        const animation = this.growAnimation;\n        let pressAnimationPlayState = Infinity;\n        if (typeof animation?.currentTime === 'number') {\n            pressAnimationPlayState = animation.currentTime;\n        }\n        else if (animation?.currentTime) {\n            pressAnimationPlayState = animation.currentTime.to('ms').value;\n        }\n        if (pressAnimationPlayState >= MINIMUM_PRESS_MS) {\n            this.pressed = false;\n            return;\n        }\n        await new Promise((resolve) => {\n            setTimeout(resolve, MINIMUM_PRESS_MS - pressAnimationPlayState);\n        });\n        if (this.growAnimation !== animation) {\n            // A new press animation was started. The old animation was canceled and\n            // should not finish the pressed state.\n            return;\n        }\n        this.pressed = false;\n    }\n    /**\n     * Returns `true` if\n     *  - the ripple element is enabled\n     *  - the pointer is primary for the input type\n     *  - the pointer is the pointer that started the interaction, or will start\n     * the interaction\n     *  - the pointer is a touch, or the pointer state has the primary button\n     * held, or the pointer is hovering\n     */\n    shouldReactToEvent(event) {\n        if (this.disabled || !event.isPrimary) {\n            return false;\n        }\n        if (this.rippleStartEvent &&\n            this.rippleStartEvent.pointerId !== event.pointerId) {\n            return false;\n        }\n        if (event.type === 'pointerenter' || event.type === 'pointerleave') {\n            return !this.isTouch(event);\n        }\n        const isPrimaryButton = event.buttons === 1;\n        return this.isTouch(event) || isPrimaryButton;\n    }\n    /**\n     * Check if the event is within the bounds of the element.\n     *\n     * This is only needed for the \"stuck\" contextmenu longpress on Chrome.\n     */\n    inBounds({ x, y }) {\n        const { top, left, bottom, right } = this.getBoundingClientRect();\n        return x >= left && x <= right && y >= top && y <= bottom;\n    }\n    isTouch({ pointerType }) {\n        return pointerType === 'touch';\n    }\n    /** @private */\n    async handleEvent(event) {\n        if (FORCED_COLORS?.matches) {\n            // Skip event logic since the ripple is `display: none`.\n            return;\n        }\n        switch (event.type) {\n            case 'click':\n                this.handleClick();\n                break;\n            case 'contextmenu':\n                this.handleContextmenu();\n                break;\n            case 'pointercancel':\n                this.handlePointercancel(event);\n                break;\n            case 'pointerdown':\n                await this.handlePointerdown(event);\n                break;\n            case 'pointerenter':\n                this.handlePointerenter(event);\n                break;\n            case 'pointerleave':\n                this.handlePointerleave(event);\n                break;\n            case 'pointerup':\n                this.handlePointerup(event);\n                break;\n            default:\n                break;\n        }\n    }\n    onControlChange(prev, next) {\n        if (isServer)\n            return;\n        for (const event of EVENTS) {\n            prev?.removeEventListener(event, this);\n            next?.addEventListener(event, this);\n        }\n    }\n}\n__decorate([\n    property({ type: Boolean, reflect: true })\n], Ripple.prototype, \"disabled\", void 0);\n__decorate([\n    state()\n], Ripple.prototype, \"hovered\", void 0);\n__decorate([\n    state()\n], Ripple.prototype, \"pressed\", void 0);\n__decorate([\n    query('.surface')\n], Ripple.prototype, \"mdRoot\", void 0);\n//# sourceMappingURL=ripple.js.map","/**\n * @license\n * Copyright 2022 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { __decorate } from \"tslib\";\nimport { customElement } from 'lit/decorators.js';\nimport { Ripple } from './internal/ripple.js';\nimport { styles } from './internal/ripple-styles.js';\n/**\n * @summary Ripples, also known as state layers, are visual indicators used to\n * communicate the status of a component or interactive element.\n *\n * @description A state layer is a semi-transparent covering on an element that\n * indicates its state. State layers provide a systematic approach to\n * visualizing states by using opacity. A layer can be applied to an entire\n * element or in a circular shape and only one state layer can be applied at a\n * given time.\n *\n * @final\n * @suppress {visibility}\n */\nlet MdRipple = class MdRipple extends Ripple {\n};\nMdRipple.styles = [styles];\nMdRipple = __decorate([\n    customElement('md-ripple')\n], MdRipple);\nexport { MdRipple };\n//# sourceMappingURL=ripple.js.map","/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { __decorate } from \"tslib\";\nimport { customElement } from 'lit/decorators.js';\nimport { FilledSelect } from './internal/filled-select.js';\nimport { styles } from './internal/filled-select-styles.js';\nimport { styles as sharedStyles } from './internal/shared-styles.js';\n/**\n * @summary\n * Select menus display a list of choices on temporary surfaces and display the\n * currently selected menu item above the menu.\n *\n * @description\n * The select component allows users to choose a value from a fixed list of\n * available options. Composed of an interactive anchor button and a menu, it is\n * analogous to the native HTML `<select>` element. This is the \"filled\"\n * variant.\n *\n * @example\n * ```html\n * <md-filled-select label=\"fruits\">\n *   <!-- An empty selected option will give select an \"un-filled\" state -->\n *   <md-select-option selected></md-select-option>\n *   <md-select-option value=\"apple\" headline=\"Apple\"></md-select-option>\n *   <md-select-option value=\"banana\" headline=\"Banana\"></md-select-option>\n *   <md-select-option value=\"kiwi\" headline=\"Kiwi\"></md-select-option>\n *   <md-select-option value=\"orange\" headline=\"Orange\"></md-select-option>\n *   <md-select-option value=\"tomato\" headline=\"Tomato\"></md-select-option>\n * </md-filled-select>\n * ```\n *\n * @final\n * @suppress {visibility}\n */\nlet MdFilledSelect = class MdFilledSelect extends FilledSelect {\n};\nMdFilledSelect.styles = [sharedStyles, styles];\nMdFilledSelect = __decorate([\n    customElement('md-filled-select')\n], MdFilledSelect);\nexport { MdFilledSelect };\n//# sourceMappingURL=filled-select.js.map","/**\n * @license\n * Copyright 2024 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n// Generated stylesheet for ./select/internal/filled-select-styles.css.\nimport { css } from 'lit';\nexport const styles = css `:host{--_text-field-active-indicator-color: var(--md-filled-select-text-field-active-indicator-color, var(--md-sys-color-on-surface-variant, #49454f));--_text-field-active-indicator-height: var(--md-filled-select-text-field-active-indicator-height, 1px);--_text-field-container-color: var(--md-filled-select-text-field-container-color, var(--md-sys-color-surface-container-highest, #e6e0e9));--_text-field-disabled-active-indicator-color: var(--md-filled-select-text-field-disabled-active-indicator-color, var(--md-sys-color-on-surface, #1d1b20));--_text-field-disabled-active-indicator-height: var(--md-filled-select-text-field-disabled-active-indicator-height, 1px);--_text-field-disabled-active-indicator-opacity: var(--md-filled-select-text-field-disabled-active-indicator-opacity, 0.38);--_text-field-disabled-container-color: var(--md-filled-select-text-field-disabled-container-color, var(--md-sys-color-on-surface, #1d1b20));--_text-field-disabled-container-opacity: var(--md-filled-select-text-field-disabled-container-opacity, 0.04);--_text-field-disabled-input-text-color: var(--md-filled-select-text-field-disabled-input-text-color, var(--md-sys-color-on-surface, #1d1b20));--_text-field-disabled-input-text-opacity: var(--md-filled-select-text-field-disabled-input-text-opacity, 0.38);--_text-field-disabled-label-text-color: var(--md-filled-select-text-field-disabled-label-text-color, var(--md-sys-color-on-surface, #1d1b20));--_text-field-disabled-label-text-opacity: var(--md-filled-select-text-field-disabled-label-text-opacity, 0.38);--_text-field-disabled-leading-icon-color: var(--md-filled-select-text-field-disabled-leading-icon-color, var(--md-sys-color-on-surface, #1d1b20));--_text-field-disabled-leading-icon-opacity: var(--md-filled-select-text-field-disabled-leading-icon-opacity, 0.38);--_text-field-disabled-supporting-text-color: var(--md-filled-select-text-field-disabled-supporting-text-color, var(--md-sys-color-on-surface, #1d1b20));--_text-field-disabled-supporting-text-opacity: var(--md-filled-select-text-field-disabled-supporting-text-opacity, 0.38);--_text-field-disabled-trailing-icon-color: var(--md-filled-select-text-field-disabled-trailing-icon-color, var(--md-sys-color-on-surface, #1d1b20));--_text-field-disabled-trailing-icon-opacity: var(--md-filled-select-text-field-disabled-trailing-icon-opacity, 0.38);--_text-field-error-active-indicator-color: var(--md-filled-select-text-field-error-active-indicator-color, var(--md-sys-color-error, #b3261e));--_text-field-error-focus-active-indicator-color: var(--md-filled-select-text-field-error-focus-active-indicator-color, var(--md-sys-color-error, #b3261e));--_text-field-error-focus-input-text-color: var(--md-filled-select-text-field-error-focus-input-text-color, var(--md-sys-color-on-surface, #1d1b20));--_text-field-error-focus-label-text-color: var(--md-filled-select-text-field-error-focus-label-text-color, var(--md-sys-color-error, #b3261e));--_text-field-error-focus-leading-icon-color: var(--md-filled-select-text-field-error-focus-leading-icon-color, var(--md-sys-color-on-surface-variant, #49454f));--_text-field-error-focus-supporting-text-color: var(--md-filled-select-text-field-error-focus-supporting-text-color, var(--md-sys-color-error, #b3261e));--_text-field-error-focus-trailing-icon-color: var(--md-filled-select-text-field-error-focus-trailing-icon-color, var(--md-sys-color-error, #b3261e));--_text-field-error-hover-active-indicator-color: var(--md-filled-select-text-field-error-hover-active-indicator-color, var(--md-sys-color-on-error-container, #410e0b));--_text-field-error-hover-input-text-color: var(--md-filled-select-text-field-error-hover-input-text-color, var(--md-sys-color-on-surface, #1d1b20));--_text-field-error-hover-label-text-color: var(--md-filled-select-text-field-error-hover-label-text-color, var(--md-sys-color-on-error-container, #410e0b));--_text-field-error-hover-leading-icon-color: var(--md-filled-select-text-field-error-hover-leading-icon-color, var(--md-sys-color-on-surface-variant, #49454f));--_text-field-error-hover-state-layer-color: var(--md-filled-select-text-field-error-hover-state-layer-color, var(--md-sys-color-on-surface, #1d1b20));--_text-field-error-hover-state-layer-opacity: var(--md-filled-select-text-field-error-hover-state-layer-opacity, 0.08);--_text-field-error-hover-supporting-text-color: var(--md-filled-select-text-field-error-hover-supporting-text-color, var(--md-sys-color-error, #b3261e));--_text-field-error-hover-trailing-icon-color: var(--md-filled-select-text-field-error-hover-trailing-icon-color, var(--md-sys-color-on-error-container, #410e0b));--_text-field-error-input-text-color: var(--md-filled-select-text-field-error-input-text-color, var(--md-sys-color-on-surface, #1d1b20));--_text-field-error-label-text-color: var(--md-filled-select-text-field-error-label-text-color, var(--md-sys-color-error, #b3261e));--_text-field-error-leading-icon-color: var(--md-filled-select-text-field-error-leading-icon-color, var(--md-sys-color-on-surface-variant, #49454f));--_text-field-error-supporting-text-color: var(--md-filled-select-text-field-error-supporting-text-color, var(--md-sys-color-error, #b3261e));--_text-field-error-trailing-icon-color: var(--md-filled-select-text-field-error-trailing-icon-color, var(--md-sys-color-error, #b3261e));--_text-field-focus-active-indicator-color: var(--md-filled-select-text-field-focus-active-indicator-color, var(--md-sys-color-primary, #6750a4));--_text-field-focus-active-indicator-height: var(--md-filled-select-text-field-focus-active-indicator-height, 3px);--_text-field-focus-input-text-color: var(--md-filled-select-text-field-focus-input-text-color, var(--md-sys-color-on-surface, #1d1b20));--_text-field-focus-label-text-color: var(--md-filled-select-text-field-focus-label-text-color, var(--md-sys-color-primary, #6750a4));--_text-field-focus-leading-icon-color: var(--md-filled-select-text-field-focus-leading-icon-color, var(--md-sys-color-on-surface-variant, #49454f));--_text-field-focus-supporting-text-color: var(--md-filled-select-text-field-focus-supporting-text-color, var(--md-sys-color-on-surface-variant, #49454f));--_text-field-focus-trailing-icon-color: var(--md-filled-select-text-field-focus-trailing-icon-color, var(--md-sys-color-primary, #6750a4));--_text-field-hover-active-indicator-color: var(--md-filled-select-text-field-hover-active-indicator-color, var(--md-sys-color-on-surface, #1d1b20));--_text-field-hover-active-indicator-height: var(--md-filled-select-text-field-hover-active-indicator-height, 1px);--_text-field-hover-input-text-color: var(--md-filled-select-text-field-hover-input-text-color, var(--md-sys-color-on-surface, #1d1b20));--_text-field-hover-label-text-color: var(--md-filled-select-text-field-hover-label-text-color, var(--md-sys-color-on-surface, #1d1b20));--_text-field-hover-leading-icon-color: var(--md-filled-select-text-field-hover-leading-icon-color, var(--md-sys-color-on-surface-variant, #49454f));--_text-field-hover-state-layer-color: var(--md-filled-select-text-field-hover-state-layer-color, var(--md-sys-color-on-surface, #1d1b20));--_text-field-hover-state-layer-opacity: var(--md-filled-select-text-field-hover-state-layer-opacity, 0.08);--_text-field-hover-supporting-text-color: var(--md-filled-select-text-field-hover-supporting-text-color, var(--md-sys-color-on-surface-variant, #49454f));--_text-field-hover-trailing-icon-color: var(--md-filled-select-text-field-hover-trailing-icon-color, var(--md-sys-color-on-surface-variant, #49454f));--_text-field-input-text-color: var(--md-filled-select-text-field-input-text-color, var(--md-sys-color-on-surface, #1d1b20));--_text-field-input-text-font: var(--md-filled-select-text-field-input-text-font, var(--md-sys-typescale-body-large-font, var(--md-ref-typeface-plain, Roboto)));--_text-field-input-text-line-height: var(--md-filled-select-text-field-input-text-line-height, var(--md-sys-typescale-body-large-line-height, 1.5rem));--_text-field-input-text-size: var(--md-filled-select-text-field-input-text-size, var(--md-sys-typescale-body-large-size, 1rem));--_text-field-input-text-weight: var(--md-filled-select-text-field-input-text-weight, var(--md-sys-typescale-body-large-weight, var(--md-ref-typeface-weight-regular, 400)));--_text-field-label-text-color: var(--md-filled-select-text-field-label-text-color, var(--md-sys-color-on-surface-variant, #49454f));--_text-field-label-text-font: var(--md-filled-select-text-field-label-text-font, var(--md-sys-typescale-body-large-font, var(--md-ref-typeface-plain, Roboto)));--_text-field-label-text-line-height: var(--md-filled-select-text-field-label-text-line-height, var(--md-sys-typescale-body-large-line-height, 1.5rem));--_text-field-label-text-populated-line-height: var(--md-filled-select-text-field-label-text-populated-line-height, var(--md-sys-typescale-body-small-line-height, 1rem));--_text-field-label-text-populated-size: var(--md-filled-select-text-field-label-text-populated-size, var(--md-sys-typescale-body-small-size, 0.75rem));--_text-field-label-text-size: var(--md-filled-select-text-field-label-text-size, var(--md-sys-typescale-body-large-size, 1rem));--_text-field-label-text-weight: var(--md-filled-select-text-field-label-text-weight, var(--md-sys-typescale-body-large-weight, var(--md-ref-typeface-weight-regular, 400)));--_text-field-leading-icon-color: var(--md-filled-select-text-field-leading-icon-color, var(--md-sys-color-on-surface-variant, #49454f));--_text-field-leading-icon-size: var(--md-filled-select-text-field-leading-icon-size, 24px);--_text-field-supporting-text-color: var(--md-filled-select-text-field-supporting-text-color, var(--md-sys-color-on-surface-variant, #49454f));--_text-field-supporting-text-font: var(--md-filled-select-text-field-supporting-text-font, var(--md-sys-typescale-body-small-font, var(--md-ref-typeface-plain, Roboto)));--_text-field-supporting-text-line-height: var(--md-filled-select-text-field-supporting-text-line-height, var(--md-sys-typescale-body-small-line-height, 1rem));--_text-field-supporting-text-size: var(--md-filled-select-text-field-supporting-text-size, var(--md-sys-typescale-body-small-size, 0.75rem));--_text-field-supporting-text-weight: var(--md-filled-select-text-field-supporting-text-weight, var(--md-sys-typescale-body-small-weight, var(--md-ref-typeface-weight-regular, 400)));--_text-field-trailing-icon-color: var(--md-filled-select-text-field-trailing-icon-color, var(--md-sys-color-on-surface-variant, #49454f));--_text-field-trailing-icon-size: var(--md-filled-select-text-field-trailing-icon-size, 24px);--_text-field-container-shape-start-start: var(--md-filled-select-text-field-container-shape-start-start, var(--md-filled-select-text-field-container-shape, var(--md-sys-shape-corner-extra-small, 4px)));--_text-field-container-shape-start-end: var(--md-filled-select-text-field-container-shape-start-end, var(--md-filled-select-text-field-container-shape, var(--md-sys-shape-corner-extra-small, 4px)));--_text-field-container-shape-end-end: var(--md-filled-select-text-field-container-shape-end-end, var(--md-filled-select-text-field-container-shape, var(--md-sys-shape-corner-none, 0px)));--_text-field-container-shape-end-start: var(--md-filled-select-text-field-container-shape-end-start, var(--md-filled-select-text-field-container-shape, var(--md-sys-shape-corner-none, 0px)));--md-filled-field-active-indicator-color: var(--_text-field-active-indicator-color);--md-filled-field-active-indicator-height: var(--_text-field-active-indicator-height);--md-filled-field-container-color: var(--_text-field-container-color);--md-filled-field-container-shape-end-end: var(--_text-field-container-shape-end-end);--md-filled-field-container-shape-end-start: var(--_text-field-container-shape-end-start);--md-filled-field-container-shape-start-end: var(--_text-field-container-shape-start-end);--md-filled-field-container-shape-start-start: var(--_text-field-container-shape-start-start);--md-filled-field-content-color: var(--_text-field-input-text-color);--md-filled-field-content-font: var(--_text-field-input-text-font);--md-filled-field-content-line-height: var(--_text-field-input-text-line-height);--md-filled-field-content-size: var(--_text-field-input-text-size);--md-filled-field-content-weight: var(--_text-field-input-text-weight);--md-filled-field-disabled-active-indicator-color: var(--_text-field-disabled-active-indicator-color);--md-filled-field-disabled-active-indicator-height: var(--_text-field-disabled-active-indicator-height);--md-filled-field-disabled-active-indicator-opacity: var(--_text-field-disabled-active-indicator-opacity);--md-filled-field-disabled-container-color: var(--_text-field-disabled-container-color);--md-filled-field-disabled-container-opacity: var(--_text-field-disabled-container-opacity);--md-filled-field-disabled-content-color: var(--_text-field-disabled-input-text-color);--md-filled-field-disabled-content-opacity: var(--_text-field-disabled-input-text-opacity);--md-filled-field-disabled-label-text-color: var(--_text-field-disabled-label-text-color);--md-filled-field-disabled-label-text-opacity: var(--_text-field-disabled-label-text-opacity);--md-filled-field-disabled-leading-content-color: var(--_text-field-disabled-leading-icon-color);--md-filled-field-disabled-leading-content-opacity: var(--_text-field-disabled-leading-icon-opacity);--md-filled-field-disabled-supporting-text-color: var(--_text-field-disabled-supporting-text-color);--md-filled-field-disabled-supporting-text-opacity: var(--_text-field-disabled-supporting-text-opacity);--md-filled-field-disabled-trailing-content-color: var(--_text-field-disabled-trailing-icon-color);--md-filled-field-disabled-trailing-content-opacity: var(--_text-field-disabled-trailing-icon-opacity);--md-filled-field-error-active-indicator-color: var(--_text-field-error-active-indicator-color);--md-filled-field-error-content-color: var(--_text-field-error-input-text-color);--md-filled-field-error-focus-active-indicator-color: var(--_text-field-error-focus-active-indicator-color);--md-filled-field-error-focus-content-color: var(--_text-field-error-focus-input-text-color);--md-filled-field-error-focus-label-text-color: var(--_text-field-error-focus-label-text-color);--md-filled-field-error-focus-leading-content-color: var(--_text-field-error-focus-leading-icon-color);--md-filled-field-error-focus-supporting-text-color: var(--_text-field-error-focus-supporting-text-color);--md-filled-field-error-focus-trailing-content-color: var(--_text-field-error-focus-trailing-icon-color);--md-filled-field-error-hover-active-indicator-color: var(--_text-field-error-hover-active-indicator-color);--md-filled-field-error-hover-content-color: var(--_text-field-error-hover-input-text-color);--md-filled-field-error-hover-label-text-color: var(--_text-field-error-hover-label-text-color);--md-filled-field-error-hover-leading-content-color: var(--_text-field-error-hover-leading-icon-color);--md-filled-field-error-hover-state-layer-color: var(--_text-field-error-hover-state-layer-color);--md-filled-field-error-hover-state-layer-opacity: var(--_text-field-error-hover-state-layer-opacity);--md-filled-field-error-hover-supporting-text-color: var(--_text-field-error-hover-supporting-text-color);--md-filled-field-error-hover-trailing-content-color: var(--_text-field-error-hover-trailing-icon-color);--md-filled-field-error-label-text-color: var(--_text-field-error-label-text-color);--md-filled-field-error-leading-content-color: var(--_text-field-error-leading-icon-color);--md-filled-field-error-supporting-text-color: var(--_text-field-error-supporting-text-color);--md-filled-field-error-trailing-content-color: var(--_text-field-error-trailing-icon-color);--md-filled-field-focus-active-indicator-color: var(--_text-field-focus-active-indicator-color);--md-filled-field-focus-active-indicator-height: var(--_text-field-focus-active-indicator-height);--md-filled-field-focus-content-color: var(--_text-field-focus-input-text-color);--md-filled-field-focus-label-text-color: var(--_text-field-focus-label-text-color);--md-filled-field-focus-leading-content-color: var(--_text-field-focus-leading-icon-color);--md-filled-field-focus-supporting-text-color: var(--_text-field-focus-supporting-text-color);--md-filled-field-focus-trailing-content-color: var(--_text-field-focus-trailing-icon-color);--md-filled-field-hover-active-indicator-color: var(--_text-field-hover-active-indicator-color);--md-filled-field-hover-active-indicator-height: var(--_text-field-hover-active-indicator-height);--md-filled-field-hover-content-color: var(--_text-field-hover-input-text-color);--md-filled-field-hover-label-text-color: var(--_text-field-hover-label-text-color);--md-filled-field-hover-leading-content-color: var(--_text-field-hover-leading-icon-color);--md-filled-field-hover-state-layer-color: var(--_text-field-hover-state-layer-color);--md-filled-field-hover-state-layer-opacity: var(--_text-field-hover-state-layer-opacity);--md-filled-field-hover-supporting-text-color: var(--_text-field-hover-supporting-text-color);--md-filled-field-hover-trailing-content-color: var(--_text-field-hover-trailing-icon-color);--md-filled-field-label-text-color: var(--_text-field-label-text-color);--md-filled-field-label-text-font: var(--_text-field-label-text-font);--md-filled-field-label-text-line-height: var(--_text-field-label-text-line-height);--md-filled-field-label-text-populated-line-height: var(--_text-field-label-text-populated-line-height);--md-filled-field-label-text-populated-size: var(--_text-field-label-text-populated-size);--md-filled-field-label-text-size: var(--_text-field-label-text-size);--md-filled-field-label-text-weight: var(--_text-field-label-text-weight);--md-filled-field-leading-content-color: var(--_text-field-leading-icon-color);--md-filled-field-supporting-text-color: var(--_text-field-supporting-text-color);--md-filled-field-supporting-text-font: var(--_text-field-supporting-text-font);--md-filled-field-supporting-text-line-height: var(--_text-field-supporting-text-line-height);--md-filled-field-supporting-text-size: var(--_text-field-supporting-text-size);--md-filled-field-supporting-text-weight: var(--_text-field-supporting-text-weight);--md-filled-field-trailing-content-color: var(--_text-field-trailing-icon-color)}[has-start] .icon.leading{font-size:var(--_text-field-leading-icon-size);height:var(--_text-field-leading-icon-size);width:var(--_text-field-leading-icon-size)}.icon.trailing{font-size:var(--_text-field-trailing-icon-size);height:var(--_text-field-trailing-icon-size);width:var(--_text-field-trailing-icon-size)}\n`;\n//# sourceMappingURL=filled-select-styles.js.map","/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\nimport '../../field/filled-field.js';\nimport { literal } from 'lit/static-html.js';\nimport { Select } from './select.js';\n// tslint:disable-next-line:enforce-comments-on-exported-symbols\nexport class FilledSelect extends Select {\n    constructor() {\n        super(...arguments);\n        this.fieldTag = literal `md-filled-field`;\n    }\n}\n//# sourceMappingURL=filled-select.js.map","/**\n * @license\n * Copyright 2024 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n// Generated stylesheet for ./select/internal/outlined-select-styles.css.\nimport { css } from 'lit';\nexport const styles = css `:host{--_text-field-disabled-input-text-color: var(--md-outlined-select-text-field-disabled-input-text-color, var(--md-sys-color-on-surface, #1d1b20));--_text-field-disabled-input-text-opacity: var(--md-outlined-select-text-field-disabled-input-text-opacity, 0.38);--_text-field-disabled-label-text-color: var(--md-outlined-select-text-field-disabled-label-text-color, var(--md-sys-color-on-surface, #1d1b20));--_text-field-disabled-label-text-opacity: var(--md-outlined-select-text-field-disabled-label-text-opacity, 0.38);--_text-field-disabled-leading-icon-color: var(--md-outlined-select-text-field-disabled-leading-icon-color, var(--md-sys-color-on-surface, #1d1b20));--_text-field-disabled-leading-icon-opacity: var(--md-outlined-select-text-field-disabled-leading-icon-opacity, 0.38);--_text-field-disabled-outline-color: var(--md-outlined-select-text-field-disabled-outline-color, var(--md-sys-color-on-surface, #1d1b20));--_text-field-disabled-outline-opacity: var(--md-outlined-select-text-field-disabled-outline-opacity, 0.12);--_text-field-disabled-outline-width: var(--md-outlined-select-text-field-disabled-outline-width, 1px);--_text-field-disabled-supporting-text-color: var(--md-outlined-select-text-field-disabled-supporting-text-color, var(--md-sys-color-on-surface, #1d1b20));--_text-field-disabled-supporting-text-opacity: var(--md-outlined-select-text-field-disabled-supporting-text-opacity, 0.38);--_text-field-disabled-trailing-icon-color: var(--md-outlined-select-text-field-disabled-trailing-icon-color, var(--md-sys-color-on-surface, #1d1b20));--_text-field-disabled-trailing-icon-opacity: var(--md-outlined-select-text-field-disabled-trailing-icon-opacity, 0.38);--_text-field-error-focus-input-text-color: var(--md-outlined-select-text-field-error-focus-input-text-color, var(--md-sys-color-on-surface, #1d1b20));--_text-field-error-focus-label-text-color: var(--md-outlined-select-text-field-error-focus-label-text-color, var(--md-sys-color-error, #b3261e));--_text-field-error-focus-leading-icon-color: var(--md-outlined-select-text-field-error-focus-leading-icon-color, var(--md-sys-color-on-surface-variant, #49454f));--_text-field-error-focus-outline-color: var(--md-outlined-select-text-field-error-focus-outline-color, var(--md-sys-color-error, #b3261e));--_text-field-error-focus-supporting-text-color: var(--md-outlined-select-text-field-error-focus-supporting-text-color, var(--md-sys-color-error, #b3261e));--_text-field-error-focus-trailing-icon-color: var(--md-outlined-select-text-field-error-focus-trailing-icon-color, var(--md-sys-color-error, #b3261e));--_text-field-error-hover-input-text-color: var(--md-outlined-select-text-field-error-hover-input-text-color, var(--md-sys-color-on-surface, #1d1b20));--_text-field-error-hover-label-text-color: var(--md-outlined-select-text-field-error-hover-label-text-color, var(--md-sys-color-on-error-container, #410e0b));--_text-field-error-hover-leading-icon-color: var(--md-outlined-select-text-field-error-hover-leading-icon-color, var(--md-sys-color-on-surface-variant, #49454f));--_text-field-error-hover-outline-color: var(--md-outlined-select-text-field-error-hover-outline-color, var(--md-sys-color-on-error-container, #410e0b));--_text-field-error-hover-supporting-text-color: var(--md-outlined-select-text-field-error-hover-supporting-text-color, var(--md-sys-color-error, #b3261e));--_text-field-error-hover-trailing-icon-color: var(--md-outlined-select-text-field-error-hover-trailing-icon-color, var(--md-sys-color-on-error-container, #410e0b));--_text-field-error-input-text-color: var(--md-outlined-select-text-field-error-input-text-color, var(--md-sys-color-on-surface, #1d1b20));--_text-field-error-label-text-color: var(--md-outlined-select-text-field-error-label-text-color, var(--md-sys-color-error, #b3261e));--_text-field-error-leading-icon-color: var(--md-outlined-select-text-field-error-leading-icon-color, var(--md-sys-color-on-surface-variant, #49454f));--_text-field-error-outline-color: var(--md-outlined-select-text-field-error-outline-color, var(--md-sys-color-error, #b3261e));--_text-field-error-supporting-text-color: var(--md-outlined-select-text-field-error-supporting-text-color, var(--md-sys-color-error, #b3261e));--_text-field-error-trailing-icon-color: var(--md-outlined-select-text-field-error-trailing-icon-color, var(--md-sys-color-error, #b3261e));--_text-field-focus-input-text-color: var(--md-outlined-select-text-field-focus-input-text-color, var(--md-sys-color-on-surface, #1d1b20));--_text-field-focus-label-text-color: var(--md-outlined-select-text-field-focus-label-text-color, var(--md-sys-color-primary, #6750a4));--_text-field-focus-leading-icon-color: var(--md-outlined-select-text-field-focus-leading-icon-color, var(--md-sys-color-on-surface-variant, #49454f));--_text-field-focus-outline-color: var(--md-outlined-select-text-field-focus-outline-color, var(--md-sys-color-primary, #6750a4));--_text-field-focus-outline-width: var(--md-outlined-select-text-field-focus-outline-width, 3px);--_text-field-focus-supporting-text-color: var(--md-outlined-select-text-field-focus-supporting-text-color, var(--md-sys-color-on-surface-variant, #49454f));--_text-field-focus-trailing-icon-color: var(--md-outlined-select-text-field-focus-trailing-icon-color, var(--md-sys-color-primary, #6750a4));--_text-field-hover-input-text-color: var(--md-outlined-select-text-field-hover-input-text-color, var(--md-sys-color-on-surface, #1d1b20));--_text-field-hover-label-text-color: var(--md-outlined-select-text-field-hover-label-text-color, var(--md-sys-color-on-surface, #1d1b20));--_text-field-hover-leading-icon-color: var(--md-outlined-select-text-field-hover-leading-icon-color, var(--md-sys-color-on-surface-variant, #49454f));--_text-field-hover-outline-color: var(--md-outlined-select-text-field-hover-outline-color, var(--md-sys-color-on-surface, #1d1b20));--_text-field-hover-outline-width: var(--md-outlined-select-text-field-hover-outline-width, 1px);--_text-field-hover-supporting-text-color: var(--md-outlined-select-text-field-hover-supporting-text-color, var(--md-sys-color-on-surface-variant, #49454f));--_text-field-hover-trailing-icon-color: var(--md-outlined-select-text-field-hover-trailing-icon-color, var(--md-sys-color-on-surface-variant, #49454f));--_text-field-input-text-color: var(--md-outlined-select-text-field-input-text-color, var(--md-sys-color-on-surface, #1d1b20));--_text-field-input-text-font: var(--md-outlined-select-text-field-input-text-font, var(--md-sys-typescale-body-large-font, var(--md-ref-typeface-plain, Roboto)));--_text-field-input-text-line-height: var(--md-outlined-select-text-field-input-text-line-height, var(--md-sys-typescale-body-large-line-height, 1.5rem));--_text-field-input-text-size: var(--md-outlined-select-text-field-input-text-size, var(--md-sys-typescale-body-large-size, 1rem));--_text-field-input-text-weight: var(--md-outlined-select-text-field-input-text-weight, var(--md-sys-typescale-body-large-weight, var(--md-ref-typeface-weight-regular, 400)));--_text-field-label-text-color: var(--md-outlined-select-text-field-label-text-color, var(--md-sys-color-on-surface-variant, #49454f));--_text-field-label-text-font: var(--md-outlined-select-text-field-label-text-font, var(--md-sys-typescale-body-large-font, var(--md-ref-typeface-plain, Roboto)));--_text-field-label-text-line-height: var(--md-outlined-select-text-field-label-text-line-height, var(--md-sys-typescale-body-large-line-height, 1.5rem));--_text-field-label-text-populated-line-height: var(--md-outlined-select-text-field-label-text-populated-line-height, var(--md-sys-typescale-body-small-line-height, 1rem));--_text-field-label-text-populated-size: var(--md-outlined-select-text-field-label-text-populated-size, var(--md-sys-typescale-body-small-size, 0.75rem));--_text-field-label-text-size: var(--md-outlined-select-text-field-label-text-size, var(--md-sys-typescale-body-large-size, 1rem));--_text-field-label-text-weight: var(--md-outlined-select-text-field-label-text-weight, var(--md-sys-typescale-body-large-weight, var(--md-ref-typeface-weight-regular, 400)));--_text-field-leading-icon-color: var(--md-outlined-select-text-field-leading-icon-color, var(--md-sys-color-on-surface-variant, #49454f));--_text-field-leading-icon-size: var(--md-outlined-select-text-field-leading-icon-size, 24px);--_text-field-outline-color: var(--md-outlined-select-text-field-outline-color, var(--md-sys-color-outline, #79747e));--_text-field-outline-width: var(--md-outlined-select-text-field-outline-width, 1px);--_text-field-supporting-text-color: var(--md-outlined-select-text-field-supporting-text-color, var(--md-sys-color-on-surface-variant, #49454f));--_text-field-supporting-text-font: var(--md-outlined-select-text-field-supporting-text-font, var(--md-sys-typescale-body-small-font, var(--md-ref-typeface-plain, Roboto)));--_text-field-supporting-text-line-height: var(--md-outlined-select-text-field-supporting-text-line-height, var(--md-sys-typescale-body-small-line-height, 1rem));--_text-field-supporting-text-size: var(--md-outlined-select-text-field-supporting-text-size, var(--md-sys-typescale-body-small-size, 0.75rem));--_text-field-supporting-text-weight: var(--md-outlined-select-text-field-supporting-text-weight, var(--md-sys-typescale-body-small-weight, var(--md-ref-typeface-weight-regular, 400)));--_text-field-trailing-icon-color: var(--md-outlined-select-text-field-trailing-icon-color, var(--md-sys-color-on-surface-variant, #49454f));--_text-field-trailing-icon-size: var(--md-outlined-select-text-field-trailing-icon-size, 24px);--_text-field-container-shape-start-start: var(--md-outlined-select-text-field-container-shape-start-start, var(--md-outlined-select-text-field-container-shape, var(--md-sys-shape-corner-extra-small, 4px)));--_text-field-container-shape-start-end: var(--md-outlined-select-text-field-container-shape-start-end, var(--md-outlined-select-text-field-container-shape, var(--md-sys-shape-corner-extra-small, 4px)));--_text-field-container-shape-end-end: var(--md-outlined-select-text-field-container-shape-end-end, var(--md-outlined-select-text-field-container-shape, var(--md-sys-shape-corner-extra-small, 4px)));--_text-field-container-shape-end-start: var(--md-outlined-select-text-field-container-shape-end-start, var(--md-outlined-select-text-field-container-shape, var(--md-sys-shape-corner-extra-small, 4px)));--md-outlined-field-container-shape-end-end: var(--_text-field-container-shape-end-end);--md-outlined-field-container-shape-end-start: var(--_text-field-container-shape-end-start);--md-outlined-field-container-shape-start-end: var(--_text-field-container-shape-start-end);--md-outlined-field-container-shape-start-start: var(--_text-field-container-shape-start-start);--md-outlined-field-content-color: var(--_text-field-input-text-color);--md-outlined-field-content-font: var(--_text-field-input-text-font);--md-outlined-field-content-line-height: var(--_text-field-input-text-line-height);--md-outlined-field-content-size: var(--_text-field-input-text-size);--md-outlined-field-content-weight: var(--_text-field-input-text-weight);--md-outlined-field-disabled-content-color: var(--_text-field-disabled-input-text-color);--md-outlined-field-disabled-content-opacity: var(--_text-field-disabled-input-text-opacity);--md-outlined-field-disabled-label-text-color: var(--_text-field-disabled-label-text-color);--md-outlined-field-disabled-label-text-opacity: var(--_text-field-disabled-label-text-opacity);--md-outlined-field-disabled-leading-content-color: var(--_text-field-disabled-leading-icon-color);--md-outlined-field-disabled-leading-content-opacity: var(--_text-field-disabled-leading-icon-opacity);--md-outlined-field-disabled-outline-color: var(--_text-field-disabled-outline-color);--md-outlined-field-disabled-outline-opacity: var(--_text-field-disabled-outline-opacity);--md-outlined-field-disabled-outline-width: var(--_text-field-disabled-outline-width);--md-outlined-field-disabled-supporting-text-color: var(--_text-field-disabled-supporting-text-color);--md-outlined-field-disabled-supporting-text-opacity: var(--_text-field-disabled-supporting-text-opacity);--md-outlined-field-disabled-trailing-content-color: var(--_text-field-disabled-trailing-icon-color);--md-outlined-field-disabled-trailing-content-opacity: var(--_text-field-disabled-trailing-icon-opacity);--md-outlined-field-error-content-color: var(--_text-field-error-input-text-color);--md-outlined-field-error-focus-content-color: var(--_text-field-error-focus-input-text-color);--md-outlined-field-error-focus-label-text-color: var(--_text-field-error-focus-label-text-color);--md-outlined-field-error-focus-leading-content-color: var(--_text-field-error-focus-leading-icon-color);--md-outlined-field-error-focus-outline-color: var(--_text-field-error-focus-outline-color);--md-outlined-field-error-focus-supporting-text-color: var(--_text-field-error-focus-supporting-text-color);--md-outlined-field-error-focus-trailing-content-color: var(--_text-field-error-focus-trailing-icon-color);--md-outlined-field-error-hover-content-color: var(--_text-field-error-hover-input-text-color);--md-outlined-field-error-hover-label-text-color: var(--_text-field-error-hover-label-text-color);--md-outlined-field-error-hover-leading-content-color: var(--_text-field-error-hover-leading-icon-color);--md-outlined-field-error-hover-outline-color: var(--_text-field-error-hover-outline-color);--md-outlined-field-error-hover-supporting-text-color: var(--_text-field-error-hover-supporting-text-color);--md-outlined-field-error-hover-trailing-content-color: var(--_text-field-error-hover-trailing-icon-color);--md-outlined-field-error-label-text-color: var(--_text-field-error-label-text-color);--md-outlined-field-error-leading-content-color: var(--_text-field-error-leading-icon-color);--md-outlined-field-error-outline-color: var(--_text-field-error-outline-color);--md-outlined-field-error-supporting-text-color: var(--_text-field-error-supporting-text-color);--md-outlined-field-error-trailing-content-color: var(--_text-field-error-trailing-icon-color);--md-outlined-field-focus-content-color: var(--_text-field-focus-input-text-color);--md-outlined-field-focus-label-text-color: var(--_text-field-focus-label-text-color);--md-outlined-field-focus-leading-content-color: var(--_text-field-focus-leading-icon-color);--md-outlined-field-focus-outline-color: var(--_text-field-focus-outline-color);--md-outlined-field-focus-outline-width: var(--_text-field-focus-outline-width);--md-outlined-field-focus-supporting-text-color: var(--_text-field-focus-supporting-text-color);--md-outlined-field-focus-trailing-content-color: var(--_text-field-focus-trailing-icon-color);--md-outlined-field-hover-content-color: var(--_text-field-hover-input-text-color);--md-outlined-field-hover-label-text-color: var(--_text-field-hover-label-text-color);--md-outlined-field-hover-leading-content-color: var(--_text-field-hover-leading-icon-color);--md-outlined-field-hover-outline-color: var(--_text-field-hover-outline-color);--md-outlined-field-hover-outline-width: var(--_text-field-hover-outline-width);--md-outlined-field-hover-supporting-text-color: var(--_text-field-hover-supporting-text-color);--md-outlined-field-hover-trailing-content-color: var(--_text-field-hover-trailing-icon-color);--md-outlined-field-label-text-color: var(--_text-field-label-text-color);--md-outlined-field-label-text-font: var(--_text-field-label-text-font);--md-outlined-field-label-text-line-height: var(--_text-field-label-text-line-height);--md-outlined-field-label-text-populated-line-height: var(--_text-field-label-text-populated-line-height);--md-outlined-field-label-text-populated-size: var(--_text-field-label-text-populated-size);--md-outlined-field-label-text-size: var(--_text-field-label-text-size);--md-outlined-field-label-text-weight: var(--_text-field-label-text-weight);--md-outlined-field-leading-content-color: var(--_text-field-leading-icon-color);--md-outlined-field-outline-color: var(--_text-field-outline-color);--md-outlined-field-outline-width: var(--_text-field-outline-width);--md-outlined-field-supporting-text-color: var(--_text-field-supporting-text-color);--md-outlined-field-supporting-text-font: var(--_text-field-supporting-text-font);--md-outlined-field-supporting-text-line-height: var(--_text-field-supporting-text-line-height);--md-outlined-field-supporting-text-size: var(--_text-field-supporting-text-size);--md-outlined-field-supporting-text-weight: var(--_text-field-supporting-text-weight);--md-outlined-field-trailing-content-color: var(--_text-field-trailing-icon-color)}[has-start] .icon.leading{font-size:var(--_text-field-leading-icon-size);height:var(--_text-field-leading-icon-size);width:var(--_text-field-leading-icon-size)}.icon.trailing{font-size:var(--_text-field-trailing-icon-size);height:var(--_text-field-trailing-icon-size);width:var(--_text-field-trailing-icon-size)}\n`;\n//# sourceMappingURL=outlined-select-styles.js.map","/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\nimport '../../field/outlined-field.js';\nimport { literal } from 'lit/static-html.js';\nimport { Select } from './select.js';\n// tslint:disable-next-line:enforce-comments-on-exported-symbols\nexport class OutlinedSelect extends Select {\n    constructor() {\n        super(...arguments);\n        this.fieldTag = literal `md-outlined-field`;\n    }\n}\n//# sourceMappingURL=outlined-select.js.map","/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\nvar _a;\nimport { __decorate } from \"tslib\";\nimport '../../menu/menu.js';\nimport { html, isServer, LitElement, nothing } from 'lit';\nimport { property, query, queryAssignedElements, state } from 'lit/decorators.js';\nimport { classMap } from 'lit/directives/class-map.js';\nimport { styleMap } from 'lit/directives/style-map.js';\nimport { html as staticHtml } from 'lit/static-html.js';\nimport { mixinDelegatesAria } from '../../internal/aria/delegate.js';\nimport { redispatchEvent } from '../../internal/events/redispatch-event.js';\nimport { createValidator, getValidityAnchor, mixinConstraintValidation, } from '../../labs/behaviors/constraint-validation.js';\nimport { mixinElementInternals } from '../../labs/behaviors/element-internals.js';\nimport { getFormValue, mixinFormAssociated, } from '../../labs/behaviors/form-associated.js';\nimport { mixinOnReportValidity, onReportValidity, } from '../../labs/behaviors/on-report-validity.js';\nimport { SelectValidator } from '../../labs/behaviors/validators/select-validator.js';\nimport { getActiveItem } from '../../list/internal/list-navigation-helpers.js';\nimport { FocusState, isElementInSubtree, isSelectableKey, } from '../../menu/internal/controllers/shared.js';\nimport { TYPEAHEAD_RECORD } from '../../menu/internal/controllers/typeaheadController.js';\nimport { DEFAULT_TYPEAHEAD_BUFFER_TIME } from '../../menu/internal/menu.js';\nimport { getSelectedItems } from './shared.js';\nconst VALUE = Symbol('value');\n// Separate variable needed for closure.\nconst selectBaseClass = mixinDelegatesAria(mixinOnReportValidity(mixinConstraintValidation(mixinFormAssociated(mixinElementInternals(LitElement)))));\n/**\n * @fires change {Event} The native `change` event on\n * [`<input>`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/change_event)\n * --bubbles\n * @fires input {InputEvent} The native `input` event on\n * [`<input>`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/input_event)\n * --bubbles --composed\n * @fires opening {Event} Fired when the select's menu is about to open.\n * @fires opened {Event} Fired when the select's menu has finished animations\n * and opened.\n * @fires closing {Event} Fired when the select's menu is about to close.\n * @fires closed {Event} Fired when the select's menu has finished animations\n * and closed.\n */\nexport class Select extends selectBaseClass {\n    /**\n     * The value of the currently selected option.\n     *\n     * Note: For SSR, set `[selected]` on the requested option and `displayText`\n     * rather than setting `value` setting `value` will incur a DOM query.\n     */\n    get value() {\n        return this[VALUE];\n    }\n    set value(value) {\n        if (isServer)\n            return;\n        this.lastUserSetValue = value;\n        this.select(value);\n    }\n    get options() {\n        // NOTE: this does a DOM query.\n        return (this.menu?.items ?? []);\n    }\n    /**\n     * The index of the currently selected option.\n     *\n     * Note: For SSR, set `[selected]` on the requested option and `displayText`\n     * rather than setting `selectedIndex` setting `selectedIndex` will incur a\n     * DOM query.\n     */\n    get selectedIndex() {\n        // tslint:disable-next-line:enforce-name-casing\n        const [_option, index] = (this.getSelectedOptions() ?? [])[0] ?? [];\n        return index ?? -1;\n    }\n    set selectedIndex(index) {\n        this.lastUserSetSelectedIndex = index;\n        this.selectIndex(index);\n    }\n    /**\n     * Returns an array of selected options.\n     *\n     * NOTE: md-select only supports single selection.\n     */\n    get selectedOptions() {\n        return (this.getSelectedOptions() ?? []).map(([option]) => option);\n    }\n    get hasError() {\n        return this.error || this.nativeError;\n    }\n    constructor() {\n        super();\n        /**\n         * Opens the menu synchronously with no animation.\n         */\n        this.quick = false;\n        /**\n         * Whether or not the select is required.\n         */\n        this.required = false;\n        /**\n         * The error message that replaces supporting text when `error` is true. If\n         * `errorText` is an empty string, then the supporting text will continue to\n         * show.\n         *\n         * This error message overrides the error message displayed by\n         * `reportValidity()`.\n         */\n        this.errorText = '';\n        /**\n         * The floating label for the field.\n         */\n        this.label = '';\n        /**\n         * Disables the asterisk on the floating label, when the select is\n         * required.\n         */\n        this.noAsterisk = false;\n        /**\n         * Conveys additional information below the select, such as how it should\n         * be used.\n         */\n        this.supportingText = '';\n        /**\n         * Gets or sets whether or not the select is in a visually invalid state.\n         *\n         * This error state overrides the error state controlled by\n         * `reportValidity()`.\n         */\n        this.error = false;\n        /**\n         * Whether or not the underlying md-menu should be position: fixed to display\n         * in a top-level manner, or position: absolute.\n         *\n         * position:fixed is useful for cases where select is inside of another\n         * element with stacking context and hidden overflows such as `md-dialog`.\n         */\n        this.menuPositioning = 'popover';\n        /**\n         * Clamps the menu-width to the width of the select.\n         */\n        this.clampMenuWidth = false;\n        /**\n         * The max time between the keystrokes of the typeahead select / menu behavior\n         * before it clears the typeahead buffer.\n         */\n        this.typeaheadDelay = DEFAULT_TYPEAHEAD_BUFFER_TIME;\n        /**\n         * Whether or not the text field has a leading icon. Used for SSR.\n         */\n        this.hasLeadingIcon = false;\n        /**\n         * Text to display in the field. Only set for SSR.\n         */\n        this.displayText = '';\n        /**\n         * Whether the menu should be aligned to the start or the end of the select's\n         * textbox.\n         */\n        this.menuAlign = 'start';\n        this[_a] = '';\n        /**\n         * Used for initializing select when the user sets the `value` directly.\n         */\n        this.lastUserSetValue = null;\n        /**\n         * Used for initializing select when the user sets the `selectedIndex`\n         * directly.\n         */\n        this.lastUserSetSelectedIndex = null;\n        /**\n         * Used for `input` and `change` event change detection.\n         */\n        this.lastSelectedOption = null;\n        // tslint:disable-next-line:enforce-name-casing\n        this.lastSelectedOptionRecords = [];\n        /**\n         * Whether or not a native error has been reported via `reportValidity()`.\n         */\n        this.nativeError = false;\n        /**\n         * The validation message displayed from a native error via\n         * `reportValidity()`.\n         */\n        this.nativeErrorText = '';\n        this.focused = false;\n        this.open = false;\n        this.defaultFocus = FocusState.NONE;\n        // Have to keep track of previous open because it's state and private and thus\n        // cannot be tracked in PropertyValues<this> map.\n        this.prevOpen = this.open;\n        this.selectWidth = 0;\n        if (isServer) {\n            return;\n        }\n        this.addEventListener('focus', this.handleFocus.bind(this));\n        this.addEventListener('blur', this.handleBlur.bind(this));\n    }\n    /**\n     * Selects an option given the value of the option, and updates MdSelect's\n     * value.\n     */\n    select(value) {\n        const optionToSelect = this.options.find((option) => option.value === value);\n        if (optionToSelect) {\n            this.selectItem(optionToSelect);\n        }\n    }\n    /**\n     * Selects an option given the index of the option, and updates MdSelect's\n     * value.\n     */\n    selectIndex(index) {\n        const optionToSelect = this.options[index];\n        if (optionToSelect) {\n            this.selectItem(optionToSelect);\n        }\n    }\n    /**\n     * Reset the select to its default value.\n     */\n    reset() {\n        for (const option of this.options) {\n            option.selected = option.hasAttribute('selected');\n        }\n        this.updateValueAndDisplayText();\n        this.nativeError = false;\n        this.nativeErrorText = '';\n    }\n    [(_a = VALUE, onReportValidity)](invalidEvent) {\n        // Prevent default pop-up behavior.\n        invalidEvent?.preventDefault();\n        const prevMessage = this.getErrorText();\n        this.nativeError = !!invalidEvent;\n        this.nativeErrorText = this.validationMessage;\n        if (prevMessage === this.getErrorText()) {\n            this.field?.reannounceError();\n        }\n    }\n    update(changed) {\n        // In SSR the options will be ready to query, so try to figure out what\n        // the value and display text should be.\n        if (!this.hasUpdated) {\n            this.initUserSelection();\n        }\n        // We have just opened the menu.\n        // We are only able to check for the select's rect in `update()` instead of\n        // having to wait for `updated()` because the menu can never be open on\n        // first render since it is not settable and Lit SSR does not support click\n        // events which would open the menu.\n        if (this.prevOpen !== this.open && this.open) {\n            const selectRect = this.getBoundingClientRect();\n            this.selectWidth = selectRect.width;\n        }\n        this.prevOpen = this.open;\n        super.update(changed);\n    }\n    render() {\n        return html `\n      <span\n        class=\"select ${classMap(this.getRenderClasses())}\"\n        @focusout=${this.handleFocusout}>\n        ${this.renderField()} ${this.renderMenu()}\n      </span>\n    `;\n    }\n    async firstUpdated(changed) {\n        await this.menu?.updateComplete;\n        // If this has been handled on update already due to SSR, try again.\n        if (!this.lastSelectedOptionRecords.length) {\n            this.initUserSelection();\n        }\n        // Case for when the DOM is streaming, there are no children, and a child\n        // has [selected] set on it, we need to wait for DOM to render something.\n        if (!this.lastSelectedOptionRecords.length &&\n            !isServer &&\n            !this.options.length) {\n            setTimeout(() => {\n                this.updateValueAndDisplayText();\n            });\n        }\n        super.firstUpdated(changed);\n    }\n    getRenderClasses() {\n        return {\n            'disabled': this.disabled,\n            'error': this.error,\n            'open': this.open,\n        };\n    }\n    renderField() {\n        const ariaLabel = this.ariaLabel || this.label;\n        return staticHtml `\n      <${this.fieldTag}\n          aria-haspopup=\"listbox\"\n          role=\"combobox\"\n          part=\"field\"\n          id=\"field\"\n          tabindex=${this.disabled ? '-1' : '0'}\n          aria-label=${ariaLabel || nothing}\n          aria-describedby=\"description\"\n          aria-expanded=${this.open ? 'true' : 'false'}\n          aria-controls=\"listbox\"\n          class=\"field\"\n          label=${this.label}\n          ?no-asterisk=${this.noAsterisk}\n          .focused=${this.focused || this.open}\n          .populated=${!!this.displayText}\n          .disabled=${this.disabled}\n          .required=${this.required}\n          .error=${this.hasError}\n          ?has-start=${this.hasLeadingIcon}\n          has-end\n          supporting-text=${this.supportingText}\n          error-text=${this.getErrorText()}\n          @keydown=${this.handleKeydown}\n          @click=${this.handleClick}>\n         ${this.renderFieldContent()}\n         <div id=\"description\" slot=\"aria-describedby\"></div>\n      </${this.fieldTag}>`;\n    }\n    renderFieldContent() {\n        return [\n            this.renderLeadingIcon(),\n            this.renderLabel(),\n            this.renderTrailingIcon(),\n        ];\n    }\n    renderLeadingIcon() {\n        return html `\n      <span class=\"icon leading\" slot=\"start\">\n        <slot name=\"leading-icon\" @slotchange=${this.handleIconChange}></slot>\n      </span>\n    `;\n    }\n    renderTrailingIcon() {\n        return html `\n      <span class=\"icon trailing\" slot=\"end\">\n        <slot name=\"trailing-icon\" @slotchange=${this.handleIconChange}>\n          <svg height=\"5\" viewBox=\"7 10 10 5\" focusable=\"false\">\n            <polygon\n              class=\"down\"\n              stroke=\"none\"\n              fill-rule=\"evenodd\"\n              points=\"7 10 12 15 17 10\"></polygon>\n            <polygon\n              class=\"up\"\n              stroke=\"none\"\n              fill-rule=\"evenodd\"\n              points=\"7 15 12 10 17 15\"></polygon>\n          </svg>\n        </slot>\n      </span>\n    `;\n    }\n    renderLabel() {\n        // need to render &nbsp; so that line-height can apply and give it a\n        // non-zero height\n        return html `<div id=\"label\">${this.displayText || html `&nbsp;`}</div>`;\n    }\n    renderMenu() {\n        const ariaLabel = this.label || this.ariaLabel;\n        return html `<div class=\"menu-wrapper\">\n      <md-menu\n        id=\"listbox\"\n        .defaultFocus=${this.defaultFocus}\n        role=\"listbox\"\n        tabindex=\"-1\"\n        aria-label=${ariaLabel || nothing}\n        stay-open-on-focusout\n        part=\"menu\"\n        exportparts=\"focus-ring: menu-focus-ring\"\n        anchor=\"field\"\n        style=${styleMap({\n            '--__menu-min-width': `${this.selectWidth}px`,\n            '--__menu-max-width': this.clampMenuWidth\n                ? `${this.selectWidth}px`\n                : undefined,\n        })}\n        no-navigation-wrap\n        .open=${this.open}\n        .quick=${this.quick}\n        .positioning=${this.menuPositioning}\n        .typeaheadDelay=${this.typeaheadDelay}\n        .anchorCorner=${this.menuAlign === 'start' ? 'end-start' : 'end-end'}\n        .menuCorner=${this.menuAlign === 'start' ? 'start-start' : 'start-end'}\n        @opening=${this.handleOpening}\n        @opened=${this.redispatchEvent}\n        @closing=${this.redispatchEvent}\n        @closed=${this.handleClosed}\n        @close-menu=${this.handleCloseMenu}\n        @request-selection=${this.handleRequestSelection}\n        @request-deselection=${this.handleRequestDeselection}>\n        ${this.renderMenuContent()}\n      </md-menu>\n    </div>`;\n    }\n    renderMenuContent() {\n        return html `<slot></slot>`;\n    }\n    /**\n     * Handles opening the select on keydown and typahead selection when the menu\n     * is closed.\n     */\n    handleKeydown(event) {\n        if (this.open || this.disabled || !this.menu) {\n            return;\n        }\n        const typeaheadController = this.menu.typeaheadController;\n        const isOpenKey = event.code === 'Space' ||\n            event.code === 'ArrowDown' ||\n            event.code === 'ArrowUp' ||\n            event.code === 'End' ||\n            event.code === 'Home' ||\n            event.code === 'Enter';\n        // Do not open if currently typing ahead because the user may be typing the\n        // spacebar to match a word with a space\n        if (!typeaheadController.isTypingAhead && isOpenKey) {\n            event.preventDefault();\n            this.open = true;\n            // https://www.w3.org/WAI/ARIA/apg/patterns/combobox/examples/combobox-select-only/#kbd_label\n            switch (event.code) {\n                case 'Space':\n                case 'ArrowDown':\n                case 'Enter':\n                    // We will handle focusing last selected item in this.handleOpening()\n                    this.defaultFocus = FocusState.NONE;\n                    break;\n                case 'End':\n                    this.defaultFocus = FocusState.LAST_ITEM;\n                    break;\n                case 'ArrowUp':\n                case 'Home':\n                    this.defaultFocus = FocusState.FIRST_ITEM;\n                    break;\n                default:\n                    break;\n            }\n            return;\n        }\n        const isPrintableKey = event.key.length === 1;\n        // Handles typing ahead when the menu is closed by delegating the event to\n        // the underlying menu's typeaheadController\n        if (isPrintableKey) {\n            typeaheadController.onKeydown(event);\n            event.preventDefault();\n            const { lastActiveRecord } = typeaheadController;\n            if (!lastActiveRecord) {\n                return;\n            }\n            this.labelEl?.setAttribute?.('aria-live', 'polite');\n            const hasChanged = this.selectItem(lastActiveRecord[TYPEAHEAD_RECORD.ITEM]);\n            if (hasChanged) {\n                this.dispatchInteractionEvents();\n            }\n        }\n    }\n    handleClick() {\n        this.open = !this.open;\n    }\n    handleFocus() {\n        this.focused = true;\n    }\n    handleBlur() {\n        this.focused = false;\n    }\n    /**\n     * Handles closing the menu when the focus leaves the select's subtree.\n     */\n    handleFocusout(event) {\n        // Don't close the menu if we are switching focus between menu,\n        // select-option, and field\n        if (event.relatedTarget && isElementInSubtree(event.relatedTarget, this)) {\n            return;\n        }\n        this.open = false;\n    }\n    /**\n     * Gets a list of all selected select options as a list item record array.\n     *\n     * @return An array of selected list option records.\n     */\n    getSelectedOptions() {\n        if (!this.menu) {\n            this.lastSelectedOptionRecords = [];\n            return null;\n        }\n        const items = this.menu.items;\n        this.lastSelectedOptionRecords = getSelectedItems(items);\n        return this.lastSelectedOptionRecords;\n    }\n    async getUpdateComplete() {\n        await this.menu?.updateComplete;\n        return super.getUpdateComplete();\n    }\n    /**\n     * Gets the selected options from the DOM, and updates the value and display\n     * text to the first selected option's value and headline respectively.\n     *\n     * @return Whether or not the selected option has changed since last update.\n     */\n    updateValueAndDisplayText() {\n        const selectedOptions = this.getSelectedOptions() ?? [];\n        // Used to determine whether or not we need to fire an input / change event\n        // which fire whenever the option element changes (value or selectedIndex)\n        // on user interaction.\n        let hasSelectedOptionChanged = false;\n        if (selectedOptions.length) {\n            const [firstSelectedOption] = selectedOptions[0];\n            hasSelectedOptionChanged =\n                this.lastSelectedOption !== firstSelectedOption;\n            this.lastSelectedOption = firstSelectedOption;\n            this[VALUE] = firstSelectedOption.value;\n            this.displayText = firstSelectedOption.displayText;\n        }\n        else {\n            hasSelectedOptionChanged = this.lastSelectedOption !== null;\n            this.lastSelectedOption = null;\n            this[VALUE] = '';\n            this.displayText = '';\n        }\n        return hasSelectedOptionChanged;\n    }\n    /**\n     * Focuses and activates the last selected item upon opening, and resets other\n     * active items.\n     */\n    async handleOpening(e) {\n        this.labelEl?.removeAttribute?.('aria-live');\n        this.redispatchEvent(e);\n        // FocusState.NONE means we want to handle focus ourselves and focus the\n        // last selected item.\n        if (this.defaultFocus !== FocusState.NONE) {\n            return;\n        }\n        const items = this.menu.items;\n        const activeItem = getActiveItem(items)?.item;\n        let [selectedItem] = this.lastSelectedOptionRecords[0] ?? [null];\n        // This is true if the user keys through the list but clicks out of the menu\n        // thus no close-menu event is fired by an item and we can't clean up in\n        // handleCloseMenu.\n        if (activeItem && activeItem !== selectedItem) {\n            activeItem.tabIndex = -1;\n        }\n        // in the case that nothing is selected, focus the first item\n        selectedItem = selectedItem ?? items[0];\n        if (selectedItem) {\n            selectedItem.tabIndex = 0;\n            selectedItem.focus();\n        }\n    }\n    redispatchEvent(e) {\n        redispatchEvent(this, e);\n    }\n    handleClosed(e) {\n        this.open = false;\n        this.redispatchEvent(e);\n    }\n    /**\n     * Determines the reason for closing, and updates the UI accordingly.\n     */\n    handleCloseMenu(event) {\n        const reason = event.detail.reason;\n        const item = event.detail.itemPath[0];\n        this.open = false;\n        let hasChanged = false;\n        if (reason.kind === 'click-selection') {\n            hasChanged = this.selectItem(item);\n        }\n        else if (reason.kind === 'keydown' && isSelectableKey(reason.key)) {\n            hasChanged = this.selectItem(item);\n        }\n        else {\n            // This can happen on ESC being pressed\n            item.tabIndex = -1;\n            item.blur();\n        }\n        // Dispatch interaction events since selection has been made via keyboard\n        // or mouse.\n        if (hasChanged) {\n            this.dispatchInteractionEvents();\n        }\n    }\n    /**\n     * Selects a given option, deselects other options, and updates the UI.\n     *\n     * @return Whether the last selected option has changed.\n     */\n    selectItem(item) {\n        const selectedOptions = this.getSelectedOptions() ?? [];\n        selectedOptions.forEach(([option]) => {\n            if (item !== option) {\n                option.selected = false;\n            }\n        });\n        item.selected = true;\n        return this.updateValueAndDisplayText();\n    }\n    /**\n     * Handles updating selection when an option element requests selection via\n     * property / attribute change.\n     */\n    handleRequestSelection(event) {\n        const requestingOptionEl = event.target;\n        // No-op if this item is already selected.\n        if (this.lastSelectedOptionRecords.some(([option]) => option === requestingOptionEl)) {\n            return;\n        }\n        this.selectItem(requestingOptionEl);\n    }\n    /**\n     * Handles updating selection when an option element requests deselection via\n     * property / attribute change.\n     */\n    handleRequestDeselection(event) {\n        const requestingOptionEl = event.target;\n        // No-op if this item is not even in the list of tracked selected items.\n        if (!this.lastSelectedOptionRecords.some(([option]) => option === requestingOptionEl)) {\n            return;\n        }\n        this.updateValueAndDisplayText();\n    }\n    /**\n     * Attempts to initialize the selected option from user-settable values like\n     * SSR, setting `value`, or `selectedIndex` at startup.\n     */\n    initUserSelection() {\n        // User has set `.value` directly, but internals have not yet booted up.\n        if (this.lastUserSetValue && !this.lastSelectedOptionRecords.length) {\n            this.select(this.lastUserSetValue);\n            // User has set `.selectedIndex` directly, but internals have not yet\n            // booted up.\n        }\n        else if (this.lastUserSetSelectedIndex !== null &&\n            !this.lastSelectedOptionRecords.length) {\n            this.selectIndex(this.lastUserSetSelectedIndex);\n            // Regular boot up!\n        }\n        else {\n            this.updateValueAndDisplayText();\n        }\n    }\n    handleIconChange() {\n        this.hasLeadingIcon = this.leadingIcons.length > 0;\n    }\n    /**\n     * Dispatches the `input` and `change` events.\n     */\n    dispatchInteractionEvents() {\n        this.dispatchEvent(new Event('input', { bubbles: true, composed: true }));\n        this.dispatchEvent(new Event('change', { bubbles: true }));\n    }\n    getErrorText() {\n        return this.error ? this.errorText : this.nativeErrorText;\n    }\n    [getFormValue]() {\n        return this.value;\n    }\n    formResetCallback() {\n        this.reset();\n    }\n    formStateRestoreCallback(state) {\n        this.value = state;\n    }\n    click() {\n        this.field?.click();\n    }\n    [createValidator]() {\n        return new SelectValidator(() => this);\n    }\n    [getValidityAnchor]() {\n        return this.field;\n    }\n}\n/** @nocollapse */\nSelect.shadowRootOptions = {\n    ...LitElement.shadowRootOptions,\n    delegatesFocus: true,\n};\n__decorate([\n    property({ type: Boolean })\n], Select.prototype, \"quick\", void 0);\n__decorate([\n    property({ type: Boolean })\n], Select.prototype, \"required\", void 0);\n__decorate([\n    property({ type: String, attribute: 'error-text' })\n], Select.prototype, \"errorText\", void 0);\n__decorate([\n    property()\n], Select.prototype, \"label\", void 0);\n__decorate([\n    property({ type: Boolean, attribute: 'no-asterisk' })\n], Select.prototype, \"noAsterisk\", void 0);\n__decorate([\n    property({ type: String, attribute: 'supporting-text' })\n], Select.prototype, \"supportingText\", void 0);\n__decorate([\n    property({ type: Boolean, reflect: true })\n], Select.prototype, \"error\", void 0);\n__decorate([\n    property({ attribute: 'menu-positioning' })\n], Select.prototype, \"menuPositioning\", void 0);\n__decorate([\n    property({ type: Boolean, attribute: 'clamp-menu-width' })\n], Select.prototype, \"clampMenuWidth\", void 0);\n__decorate([\n    property({ type: Number, attribute: 'typeahead-delay' })\n], Select.prototype, \"typeaheadDelay\", void 0);\n__decorate([\n    property({ type: Boolean, attribute: 'has-leading-icon' })\n], Select.prototype, \"hasLeadingIcon\", void 0);\n__decorate([\n    property({ attribute: 'display-text' })\n], Select.prototype, \"displayText\", void 0);\n__decorate([\n    property({ attribute: 'menu-align' })\n], Select.prototype, \"menuAlign\", void 0);\n__decorate([\n    property()\n], Select.prototype, \"value\", null);\n__decorate([\n    property({ type: Number, attribute: 'selected-index' })\n], Select.prototype, \"selectedIndex\", null);\n__decorate([\n    state()\n], Select.prototype, \"nativeError\", void 0);\n__decorate([\n    state()\n], Select.prototype, \"nativeErrorText\", void 0);\n__decorate([\n    state()\n], Select.prototype, \"focused\", void 0);\n__decorate([\n    state()\n], Select.prototype, \"open\", void 0);\n__decorate([\n    state()\n], Select.prototype, \"defaultFocus\", void 0);\n__decorate([\n    query('.field')\n], Select.prototype, \"field\", void 0);\n__decorate([\n    query('md-menu')\n], Select.prototype, \"menu\", void 0);\n__decorate([\n    query('#label')\n], Select.prototype, \"labelEl\", void 0);\n__decorate([\n    queryAssignedElements({ slot: 'leading-icon', flatten: true })\n], Select.prototype, \"leadingIcons\", void 0);\n//# sourceMappingURL=select.js.map","/**\n * @license\n * Copyright 2024 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n// Generated stylesheet for ./select/internal/shared-styles.css.\nimport { css } from 'lit';\nexport const styles = css `:host{color:unset;min-width:210px;display:flex}.field{cursor:default;outline:none}.select{position:relative;flex-direction:column}.icon.trailing svg,.icon ::slotted(*){fill:currentColor}.icon ::slotted(*){width:inherit;height:inherit;font-size:inherit}.icon slot{display:flex;height:100%;width:100%;align-items:center;justify-content:center}.icon.trailing :is(.up,.down){opacity:0;transition:opacity 75ms linear 75ms}.select:not(.open) .down,.select.open .up{opacity:1}.field,.select,md-menu{min-width:inherit;width:inherit;max-width:inherit;display:flex}md-menu{min-width:var(--__menu-min-width);max-width:var(--__menu-max-width, inherit)}.menu-wrapper{width:0px;height:0px;max-width:inherit}md-menu ::slotted(:not[disabled]){cursor:pointer}.field,.select{width:100%}:host{display:inline-flex}:host([disabled]){pointer-events:none}\n`;\n//# sourceMappingURL=shared-styles.js.map","/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n/**\n * Given a list of select options, this function will return an array of\n * SelectOptionRecords that are selected.\n *\n * @return An array of SelectOptionRecords describing the options that are\n * selected.\n */\nexport function getSelectedItems(items) {\n    const selectedItemRecords = [];\n    for (let i = 0; i < items.length; i++) {\n        const item = items[i];\n        if (item.selected) {\n            selectedItemRecords.push([item, i]);\n        }\n    }\n    return selectedItemRecords;\n}\n//# sourceMappingURL=shared.js.map","/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { __decorate } from \"tslib\";\nimport { customElement } from 'lit/decorators.js';\nimport { OutlinedSelect } from './internal/outlined-select.js';\nimport { styles } from './internal/outlined-select-styles.js';\nimport { styles as sharedStyles } from './internal/shared-styles.js';\n/**\n * @summary\n * Select menus display a list of choices on temporary surfaces and display the\n * currently selected menu item above the menu.\n *\n * @description\n * The select component allows users to choose a value from a fixed list of\n * available options. Composed of an interactive anchor button and a menu, it is\n * analogous to the native HTML `<select>` element. This is the \"outlined\"\n * variant.\n *\n * @example\n * ```html\n * <md-outlined-select label=\"fruits\">\n *   <!-- An empty selected option will give select an \"un-filled\" state -->\n *   <md-select-option selected></md-select-option>\n *   <md-select-option value=\"apple\" headline=\"Apple\"></md-select-option>\n *   <md-select-option value=\"banana\" headline=\"Banana\"></md-select-option>\n *   <md-select-option value=\"kiwi\" headline=\"Kiwi\"></md-select-option>\n *   <md-select-option value=\"orange\" headline=\"Orange\"></md-select-option>\n *   <md-select-option value=\"tomato\" headline=\"Tomato\"></md-select-option>\n * </md-outlined-select>\n * ```\n *\n * @final\n * @suppress {visibility}\n */\nlet MdOutlinedSelect = class MdOutlinedSelect extends OutlinedSelect {\n};\nMdOutlinedSelect.styles = [sharedStyles, styles];\nMdOutlinedSelect = __decorate([\n    customElement('md-outlined-select')\n], MdOutlinedSelect);\nexport { MdOutlinedSelect };\n//# sourceMappingURL=outlined-select.js.map","/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n/**\n * The main LitElement module, which defines the {@linkcode LitElement} base\n * class and related APIs.\n *\n * LitElement components can define a template and a set of observed\n * properties. Changing an observed property triggers a re-render of the\n * element.\n *\n * Import {@linkcode LitElement} and {@linkcode html} from this module to\n * create a component:\n *\n *  ```js\n * import {LitElement, html} from 'lit-element';\n *\n * class MyElement extends LitElement {\n *\n *   // Declare observed properties\n *   static get properties() {\n *     return {\n *       adjective: {}\n *     }\n *   }\n *\n *   constructor() {\n *     this.adjective = 'awesome';\n *   }\n *\n *   // Define the element's template\n *   render() {\n *     return html`<p>your ${adjective} template here</p>`;\n *   }\n * }\n *\n * customElements.define('my-element', MyElement);\n * ```\n *\n * `LitElement` extends {@linkcode ReactiveElement} and adds lit-html\n * templating. The `ReactiveElement` class is provided for users that want to\n * build their own custom element base classes that don't use lit-html.\n *\n * @packageDocumentation\n */\nimport { ReactiveElement } from '@lit/reactive-element';\nimport { render, noChange } from 'lit-html';\nexport * from '@lit/reactive-element';\nexport * from 'lit-html';\n/*\n * When using Closure Compiler, JSCompiler_renameProperty(property, object) is\n * replaced at compile time by the munged name for object[property]. We cannot\n * alias this function, so we have to use a small shim that has the same\n * behavior when not compiling.\n */\n/*@__INLINE__*/\nconst JSCompiler_renameProperty = (prop, _obj) => prop;\nconst DEV_MODE = true;\nlet issueWarning;\nif (DEV_MODE) {\n    // Ensure warnings are issued only 1x, even if multiple versions of Lit\n    // are loaded.\n    const issuedWarnings = (globalThis.litIssuedWarnings ??= new Set());\n    // Issue a warning, if we haven't already.\n    issueWarning = (code, warning) => {\n        warning += ` See https://lit.dev/msg/${code} for more information.`;\n        if (!issuedWarnings.has(warning)) {\n            console.warn(warning);\n            issuedWarnings.add(warning);\n        }\n    };\n}\n/**\n * Base element class that manages element properties and attributes, and\n * renders a lit-html template.\n *\n * To define a component, subclass `LitElement` and implement a\n * `render` method to provide the component's template. Define properties\n * using the {@linkcode LitElement.properties properties} property or the\n * {@linkcode property} decorator.\n */\nexport class LitElement extends ReactiveElement {\n    constructor() {\n        super(...arguments);\n        /**\n         * @category rendering\n         */\n        this.renderOptions = { host: this };\n        this.__childPart = undefined;\n    }\n    /**\n     * @category rendering\n     */\n    createRenderRoot() {\n        const renderRoot = super.createRenderRoot();\n        // When adoptedStyleSheets are shimmed, they are inserted into the\n        // shadowRoot by createRenderRoot. Adjust the renderBefore node so that\n        // any styles in Lit content render before adoptedStyleSheets. This is\n        // important so that adoptedStyleSheets have precedence over styles in\n        // the shadowRoot.\n        this.renderOptions.renderBefore ??= renderRoot.firstChild;\n        return renderRoot;\n    }\n    /**\n     * Updates the element. This method reflects property values to attributes\n     * and calls `render` to render DOM via lit-html. Setting properties inside\n     * this method will *not* trigger another update.\n     * @param changedProperties Map of changed properties with old values\n     * @category updates\n     */\n    update(changedProperties) {\n        // Setting properties in `render` should not trigger an update. Since\n        // updates are allowed after super.update, it's important to call `render`\n        // before that.\n        const value = this.render();\n        if (!this.hasUpdated) {\n            this.renderOptions.isConnected = this.isConnected;\n        }\n        super.update(changedProperties);\n        this.__childPart = render(value, this.renderRoot, this.renderOptions);\n    }\n    /**\n     * Invoked when the component is added to the document's DOM.\n     *\n     * In `connectedCallback()` you should setup tasks that should only occur when\n     * the element is connected to the document. The most common of these is\n     * adding event listeners to nodes external to the element, like a keydown\n     * event handler added to the window.\n     *\n     * ```ts\n     * connectedCallback() {\n     *   super.connectedCallback();\n     *   addEventListener('keydown', this._handleKeydown);\n     * }\n     * ```\n     *\n     * Typically, anything done in `connectedCallback()` should be undone when the\n     * element is disconnected, in `disconnectedCallback()`.\n     *\n     * @category lifecycle\n     */\n    connectedCallback() {\n        super.connectedCallback();\n        this.__childPart?.setConnected(true);\n    }\n    /**\n     * Invoked when the component is removed from the document's DOM.\n     *\n     * This callback is the main signal to the element that it may no longer be\n     * used. `disconnectedCallback()` should ensure that nothing is holding a\n     * reference to the element (such as event listeners added to nodes external\n     * to the element), so that it is free to be garbage collected.\n     *\n     * ```ts\n     * disconnectedCallback() {\n     *   super.disconnectedCallback();\n     *   window.removeEventListener('keydown', this._handleKeydown);\n     * }\n     * ```\n     *\n     * An element may be re-connected after being disconnected.\n     *\n     * @category lifecycle\n     */\n    disconnectedCallback() {\n        super.disconnectedCallback();\n        this.__childPart?.setConnected(false);\n    }\n    /**\n     * Invoked on each update to perform rendering tasks. This method may return\n     * any value renderable by lit-html's `ChildPart` - typically a\n     * `TemplateResult`. Setting properties inside this method will *not* trigger\n     * the element to update.\n     * @category rendering\n     */\n    render() {\n        return noChange;\n    }\n}\n// This property needs to remain unminified.\nLitElement['_$litElement$'] = true;\n/**\n * Ensure this class is marked as `finalized` as an optimization ensuring\n * it will not needlessly try to `finalize`.\n *\n * Note this property name is a string to prevent breaking Closure JS Compiler\n * optimizations. See @lit/reactive-element for more information.\n */\nLitElement[JSCompiler_renameProperty('finalized', LitElement)] = true;\n// Install hydration if available\nglobalThis.litElementHydrateSupport?.({ LitElement });\n// Apply polyfills if available\nconst polyfillSupport = DEV_MODE\n    ? globalThis.litElementPolyfillSupportDevMode\n    : globalThis.litElementPolyfillSupport;\npolyfillSupport?.({ LitElement });\n/**\n * END USERS SHOULD NOT RELY ON THIS OBJECT.\n *\n * Private exports for use by other Lit packages, not intended for use by\n * external users.\n *\n * We currently do not make a mangled rollup build of the lit-ssr code. In order\n * to keep a number of (otherwise private) top-level exports  mangled in the\n * client side code, we export a _$LE object containing those members (or\n * helper methods for accessing private fields of those members), and then\n * re-export them for use in lit-ssr. This keeps lit-ssr agnostic to whether the\n * client-side code is being used in `dev` mode or `prod` mode.\n *\n * This has a unique name, to disambiguate it from private exports in\n * lit-html, since this module re-exports all of lit-html.\n *\n * @private\n */\nexport const _$LE = {\n    _$attributeToProperty: (el, name, value) => {\n        // eslint-disable-next-line\n        el._$attributeToProperty(name, value);\n    },\n    // eslint-disable-next-line\n    _$changedProperties: (el) => el._$changedProperties,\n};\n// IMPORTANT: do not change the property name or the assignment expression.\n// This line will be used in regexes to search for LitElement usage.\n(globalThis.litElementVersions ??= []).push('4.1.1');\nif (DEV_MODE && globalThis.litElementVersions.length > 1) {\n    issueWarning('multiple-versions', `Multiple versions of Lit loaded. Loading multiple versions ` +\n        `is not recommended.`);\n}\n//# sourceMappingURL=lit-element.js.map","/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\nexport const PartType = {\n    ATTRIBUTE: 1,\n    CHILD: 2,\n    PROPERTY: 3,\n    BOOLEAN_ATTRIBUTE: 4,\n    EVENT: 5,\n    ELEMENT: 6,\n};\n/**\n * Creates a user-facing directive function from a Directive class. This\n * function has the same parameters as the directive's render() method.\n */\nexport const directive = (c) => (...values) => ({\n    // This property needs to remain unminified.\n    ['_$litDirective$']: c,\n    values,\n});\n/**\n * Base class for creating custom directives. Users should extend this class,\n * implement `render` and/or `update`, and then pass their subclass to\n * `directive`.\n */\nexport class Directive {\n    constructor(_partInfo) { }\n    // See comment in Disconnectable interface for why this is a getter\n    get _$isConnected() {\n        return this._$parent._$isConnected;\n    }\n    /** @internal */\n    _$initialize(part, parent, attributeIndex) {\n        this.__part = part;\n        this._$parent = parent;\n        this.__attributeIndex = attributeIndex;\n    }\n    /** @internal */\n    _$resolve(part, props) {\n        return this.update(part, props);\n    }\n    update(_part, props) {\n        return this.render(...props);\n    }\n}\n//# sourceMappingURL=directive.js.map","/**\n * @license\n * Copyright 2018 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\nimport { noChange } from '../lit-html.js';\nimport { directive, Directive, PartType, } from '../directive.js';\nclass ClassMapDirective extends Directive {\n    constructor(partInfo) {\n        super(partInfo);\n        if (partInfo.type !== PartType.ATTRIBUTE ||\n            partInfo.name !== 'class' ||\n            partInfo.strings?.length > 2) {\n            throw new Error('`classMap()` can only be used in the `class` attribute ' +\n                'and must be the only part in the attribute.');\n        }\n    }\n    render(classInfo) {\n        // Add spaces to ensure separation from static classes\n        return (' ' +\n            Object.keys(classInfo)\n                .filter((key) => classInfo[key])\n                .join(' ') +\n            ' ');\n    }\n    update(part, [classInfo]) {\n        // Remember dynamic classes on the first render\n        if (this._previousClasses === undefined) {\n            this._previousClasses = new Set();\n            if (part.strings !== undefined) {\n                this._staticClasses = new Set(part.strings\n                    .join(' ')\n                    .split(/\\s/)\n                    .filter((s) => s !== ''));\n            }\n            for (const name in classInfo) {\n                if (classInfo[name] && !this._staticClasses?.has(name)) {\n                    this._previousClasses.add(name);\n                }\n            }\n            return this.render(classInfo);\n        }\n        const classList = part.element.classList;\n        // Remove old classes that no longer apply\n        for (const name of this._previousClasses) {\n            if (!(name in classInfo)) {\n                classList.remove(name);\n                this._previousClasses.delete(name);\n            }\n        }\n        // Add or remove classes based on their classMap value\n        for (const name in classInfo) {\n            // We explicitly want a loose truthy check of `value` because it seems\n            // more convenient that '' and 0 are skipped.\n            const value = !!classInfo[name];\n            if (value !== this._previousClasses.has(name) &&\n                !this._staticClasses?.has(name)) {\n                if (value) {\n                    classList.add(name);\n                    this._previousClasses.add(name);\n                }\n                else {\n                    classList.remove(name);\n                    this._previousClasses.delete(name);\n                }\n            }\n        }\n        return noChange;\n    }\n}\n/**\n * A directive that applies dynamic CSS classes.\n *\n * This must be used in the `class` attribute and must be the only part used in\n * the attribute. It takes each property in the `classInfo` argument and adds\n * the property name to the element's `classList` if the property value is\n * truthy; if the property value is falsy, the property name is removed from\n * the element's `class`.\n *\n * For example `{foo: bar}` applies the class `foo` if the value of `bar` is\n * truthy.\n *\n * @param classInfo\n */\nexport const classMap = directive(ClassMapDirective);\n//# sourceMappingURL=class-map.js.map","/**\n * @license\n * Copyright 2018 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\nimport { noChange } from '../lit-html.js';\nimport { directive, Directive, PartType, } from '../directive.js';\nconst important = 'important';\n// The leading space is important\nconst importantFlag = ' !' + important;\n// How many characters to remove from a value, as a negative number\nconst flagTrim = 0 - importantFlag.length;\nclass StyleMapDirective extends Directive {\n    constructor(partInfo) {\n        super(partInfo);\n        if (partInfo.type !== PartType.ATTRIBUTE ||\n            partInfo.name !== 'style' ||\n            partInfo.strings?.length > 2) {\n            throw new Error('The `styleMap` directive must be used in the `style` attribute ' +\n                'and must be the only part in the attribute.');\n        }\n    }\n    render(styleInfo) {\n        return Object.keys(styleInfo).reduce((style, prop) => {\n            const value = styleInfo[prop];\n            if (value == null) {\n                return style;\n            }\n            // Convert property names from camel-case to dash-case, i.e.:\n            //  `backgroundColor` -> `background-color`\n            // Vendor-prefixed names need an extra `-` appended to front:\n            //  `webkitAppearance` -> `-webkit-appearance`\n            // Exception is any property name containing a dash, including\n            // custom properties; we assume these are already dash-cased i.e.:\n            //  `--my-button-color` --> `--my-button-color`\n            prop = prop.includes('-')\n                ? prop\n                : prop\n                    .replace(/(?:^(webkit|moz|ms|o)|)(?=[A-Z])/g, '-$&')\n                    .toLowerCase();\n            return style + `${prop}:${value};`;\n        }, '');\n    }\n    update(part, [styleInfo]) {\n        const { style } = part.element;\n        if (this._previousStyleProperties === undefined) {\n            this._previousStyleProperties = new Set(Object.keys(styleInfo));\n            return this.render(styleInfo);\n        }\n        // Remove old properties that no longer exist in styleInfo\n        for (const name of this._previousStyleProperties) {\n            // If the name isn't in styleInfo or it's null/undefined\n            if (styleInfo[name] == null) {\n                this._previousStyleProperties.delete(name);\n                if (name.includes('-')) {\n                    style.removeProperty(name);\n                }\n                else {\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                    style[name] = null;\n                }\n            }\n        }\n        // Add or update properties\n        for (const name in styleInfo) {\n            const value = styleInfo[name];\n            if (value != null) {\n                this._previousStyleProperties.add(name);\n                const isImportant = typeof value === 'string' && value.endsWith(importantFlag);\n                if (name.includes('-') || isImportant) {\n                    style.setProperty(name, isImportant\n                        ? value.slice(0, flagTrim)\n                        : value, isImportant ? important : '');\n                }\n                else {\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                    style[name] = value;\n                }\n            }\n        }\n        return noChange;\n    }\n}\n/**\n * A directive that applies CSS properties to an element.\n *\n * `styleMap` can only be used in the `style` attribute and must be the only\n * expression in the attribute. It takes the property names in the\n * {@link StyleInfo styleInfo} object and adds the properties to the inline\n * style of the element.\n *\n * Property names with dashes (`-`) are assumed to be valid CSS\n * property names and set on the element's style object using `setProperty()`.\n * Names without dashes are assumed to be camelCased JavaScript property names\n * and set on the element's style object using property assignment, allowing the\n * style object to translate JavaScript-style names to CSS property names.\n *\n * For example `styleMap({backgroundColor: 'red', 'border-top': '5px', '--size':\n * '0'})` sets the `background-color`, `border-top` and `--size` properties.\n *\n * @param styleInfo\n * @see {@link https://lit.dev/docs/templates/directives/#stylemap styleMap code samples on Lit.dev}\n */\nexport const styleMap = directive(StyleMapDirective);\n//# sourceMappingURL=style-map.js.map","/**\n * @license\n * Copyright 2022 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n/**\n * @fileoverview\n *\n * This file exports a boolean const whose value will depend on what environment\n * the module is being imported from.\n */\nconst NODE_MODE = false;\n/**\n * A boolean that will be `true` in server environments like Node, and `false`\n * in browser environments. Note that your server environment or toolchain must\n * support the `\"node\"` export condition for this to be `true`.\n *\n * This can be used when authoring components to change behavior based on\n * whether or not the component is executing in an SSR context.\n */\nexport const isServer = NODE_MODE;\n//# sourceMappingURL=is-server.js.map","/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\nconst DEV_MODE = true;\nconst ENABLE_EXTRA_SECURITY_HOOKS = true;\nconst ENABLE_SHADYDOM_NOPATCH = true;\nconst NODE_MODE = false;\n// Allows minifiers to rename references to globalThis\nconst global = globalThis;\n/**\n * Useful for visualizing and logging insights into what the Lit template system is doing.\n *\n * Compiled out of prod mode builds.\n */\nconst debugLogEvent = DEV_MODE\n    ? (event) => {\n        const shouldEmit = global\n            .emitLitDebugLogEvents;\n        if (!shouldEmit) {\n            return;\n        }\n        global.dispatchEvent(new CustomEvent('lit-debug', {\n            detail: event,\n        }));\n    }\n    : undefined;\n// Used for connecting beginRender and endRender events when there are nested\n// renders when errors are thrown preventing an endRender event from being\n// called.\nlet debugLogRenderId = 0;\nlet issueWarning;\nif (DEV_MODE) {\n    global.litIssuedWarnings ??= new Set();\n    // Issue a warning, if we haven't already.\n    issueWarning = (code, warning) => {\n        warning += code\n            ? ` See https://lit.dev/msg/${code} for more information.`\n            : '';\n        if (!global.litIssuedWarnings.has(warning)) {\n            console.warn(warning);\n            global.litIssuedWarnings.add(warning);\n        }\n    };\n    issueWarning('dev-mode', `Lit is in dev mode. Not recommended for production!`);\n}\nconst wrap = ENABLE_SHADYDOM_NOPATCH &&\n    global.ShadyDOM?.inUse &&\n    global.ShadyDOM?.noPatch === true\n    ? global.ShadyDOM.wrap\n    : (node) => node;\nconst trustedTypes = global.trustedTypes;\n/**\n * Our TrustedTypePolicy for HTML which is declared using the html template\n * tag function.\n *\n * That HTML is a developer-authored constant, and is parsed with innerHTML\n * before any untrusted expressions have been mixed in. Therefor it is\n * considered safe by construction.\n */\nconst policy = trustedTypes\n    ? trustedTypes.createPolicy('lit-html', {\n        createHTML: (s) => s,\n    })\n    : undefined;\nconst identityFunction = (value) => value;\nconst noopSanitizer = (_node, _name, _type) => identityFunction;\n/** Sets the global sanitizer factory. */\nconst setSanitizer = (newSanitizer) => {\n    if (!ENABLE_EXTRA_SECURITY_HOOKS) {\n        return;\n    }\n    if (sanitizerFactoryInternal !== noopSanitizer) {\n        throw new Error(`Attempted to overwrite existing lit-html security policy.` +\n            ` setSanitizeDOMValueFactory should be called at most once.`);\n    }\n    sanitizerFactoryInternal = newSanitizer;\n};\n/**\n * Only used in internal tests, not a part of the public API.\n */\nconst _testOnlyClearSanitizerFactoryDoNotCallOrElse = () => {\n    sanitizerFactoryInternal = noopSanitizer;\n};\nconst createSanitizer = (node, name, type) => {\n    return sanitizerFactoryInternal(node, name, type);\n};\n// Added to an attribute name to mark the attribute as bound so we can find\n// it easily.\nconst boundAttributeSuffix = '$lit$';\n// This marker is used in many syntactic positions in HTML, so it must be\n// a valid element name and attribute name. We don't support dynamic names (yet)\n// but this at least ensures that the parse tree is closer to the template\n// intention.\nconst marker = `lit$${Math.random().toFixed(9).slice(2)}$`;\n// String used to tell if a comment is a marker comment\nconst markerMatch = '?' + marker;\n// Text used to insert a comment marker node. We use processing instruction\n// syntax because it's slightly smaller, but parses as a comment node.\nconst nodeMarker = `<${markerMatch}>`;\nconst d = NODE_MODE && global.document === undefined\n    ? {\n        createTreeWalker() {\n            return {};\n        },\n    }\n    : document;\n// Creates a dynamic marker. We never have to search for these in the DOM.\nconst createMarker = () => d.createComment('');\nconst isPrimitive = (value) => value === null || (typeof value != 'object' && typeof value != 'function');\nconst isArray = Array.isArray;\nconst isIterable = (value) => isArray(value) ||\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    typeof value?.[Symbol.iterator] === 'function';\nconst SPACE_CHAR = `[ \\t\\n\\f\\r]`;\nconst ATTR_VALUE_CHAR = `[^ \\t\\n\\f\\r\"'\\`<>=]`;\nconst NAME_CHAR = `[^\\\\s\"'>=/]`;\n// These regexes represent the five parsing states that we care about in the\n// Template's HTML scanner. They match the *end* of the state they're named\n// after.\n// Depending on the match, we transition to a new state. If there's no match,\n// we stay in the same state.\n// Note that the regexes are stateful. We utilize lastIndex and sync it\n// across the multiple regexes used. In addition to the five regexes below\n// we also dynamically create a regex to find the matching end tags for raw\n// text elements.\n/**\n * End of text is: `<` followed by:\n *   (comment start) or (tag) or (dynamic tag binding)\n */\nconst textEndRegex = /<(?:(!--|\\/[^a-zA-Z])|(\\/?[a-zA-Z][^>\\s]*)|(\\/?$))/g;\nconst COMMENT_START = 1;\nconst TAG_NAME = 2;\nconst DYNAMIC_TAG_NAME = 3;\nconst commentEndRegex = /-->/g;\n/**\n * Comments not started with <!--, like </{, can be ended by a single `>`\n */\nconst comment2EndRegex = />/g;\n/**\n * The tagEnd regex matches the end of the \"inside an opening\" tag syntax\n * position. It either matches a `>`, an attribute-like sequence, or the end\n * of the string after a space (attribute-name position ending).\n *\n * See attributes in the HTML spec:\n * https://www.w3.org/TR/html5/syntax.html#elements-attributes\n *\n * \" \\t\\n\\f\\r\" are HTML space characters:\n * https://infra.spec.whatwg.org/#ascii-whitespace\n *\n * So an attribute is:\n *  * The name: any character except a whitespace character, (\"), ('), \">\",\n *    \"=\", or \"/\". Note: this is different from the HTML spec which also excludes control characters.\n *  * Followed by zero or more space characters\n *  * Followed by \"=\"\n *  * Followed by zero or more space characters\n *  * Followed by:\n *    * Any character except space, ('), (\"), \"<\", \">\", \"=\", (`), or\n *    * (\") then any non-(\"), or\n *    * (') then any non-(')\n */\nconst tagEndRegex = new RegExp(`>|${SPACE_CHAR}(?:(${NAME_CHAR}+)(${SPACE_CHAR}*=${SPACE_CHAR}*(?:${ATTR_VALUE_CHAR}|(\"|')|))|$)`, 'g');\nconst ENTIRE_MATCH = 0;\nconst ATTRIBUTE_NAME = 1;\nconst SPACES_AND_EQUALS = 2;\nconst QUOTE_CHAR = 3;\nconst singleQuoteAttrEndRegex = /'/g;\nconst doubleQuoteAttrEndRegex = /\"/g;\n/**\n * Matches the raw text elements.\n *\n * Comments are not parsed within raw text elements, so we need to search their\n * text content for marker strings.\n */\nconst rawTextElement = /^(?:script|style|textarea|title)$/i;\n/** TemplateResult types */\nconst HTML_RESULT = 1;\nconst SVG_RESULT = 2;\nconst MATHML_RESULT = 3;\n// TemplatePart types\n// IMPORTANT: these must match the values in PartType\nconst ATTRIBUTE_PART = 1;\nconst CHILD_PART = 2;\nconst PROPERTY_PART = 3;\nconst BOOLEAN_ATTRIBUTE_PART = 4;\nconst EVENT_PART = 5;\nconst ELEMENT_PART = 6;\nconst COMMENT_PART = 7;\n/**\n * Generates a template literal tag function that returns a TemplateResult with\n * the given result type.\n */\nconst tag = (type) => (strings, ...values) => {\n    // Warn against templates octal escape sequences\n    // We do this here rather than in render so that the warning is closer to the\n    // template definition.\n    if (DEV_MODE && strings.some((s) => s === undefined)) {\n        console.warn('Some template strings are undefined.\\n' +\n            'This is probably caused by illegal octal escape sequences.');\n    }\n    if (DEV_MODE) {\n        // Import static-html.js results in a circular dependency which g3 doesn't\n        // handle. Instead we know that static values must have the field\n        // `_$litStatic$`.\n        if (values.some((val) => val?.['_$litStatic$'])) {\n            issueWarning('', `Static values 'literal' or 'unsafeStatic' cannot be used as values to non-static templates.\\n` +\n                `Please use the static 'html' tag function. See https://lit.dev/docs/templates/expressions/#static-expressions`);\n        }\n    }\n    return {\n        // This property needs to remain unminified.\n        ['_$litType$']: type,\n        strings,\n        values,\n    };\n};\n/**\n * Interprets a template literal as an HTML template that can efficiently\n * render to and update a container.\n *\n * ```ts\n * const header = (title: string) => html`<h1>${title}</h1>`;\n * ```\n *\n * The `html` tag returns a description of the DOM to render as a value. It is\n * lazy, meaning no work is done until the template is rendered. When rendering,\n * if a template comes from the same expression as a previously rendered result,\n * it's efficiently updated instead of replaced.\n */\nexport const html = tag(HTML_RESULT);\n/**\n * Interprets a template literal as an SVG fragment that can efficiently render\n * to and update a container.\n *\n * ```ts\n * const rect = svg`<rect width=\"10\" height=\"10\"></rect>`;\n *\n * const myImage = html`\n *   <svg viewBox=\"0 0 10 10\" xmlns=\"http://www.w3.org/2000/svg\">\n *     ${rect}\n *   </svg>`;\n * ```\n *\n * The `svg` *tag function* should only be used for SVG fragments, or elements\n * that would be contained **inside** an `<svg>` HTML element. A common error is\n * placing an `<svg>` *element* in a template tagged with the `svg` tag\n * function. The `<svg>` element is an HTML element and should be used within a\n * template tagged with the {@linkcode html} tag function.\n *\n * In LitElement usage, it's invalid to return an SVG fragment from the\n * `render()` method, as the SVG fragment will be contained within the element's\n * shadow root and thus not be properly contained within an `<svg>` HTML\n * element.\n */\nexport const svg = tag(SVG_RESULT);\n/**\n * Interprets a template literal as MathML fragment that can efficiently render\n * to and update a container.\n *\n * ```ts\n * const num = mathml`<mn>1</mn>`;\n *\n * const eq = html`\n *   <math>\n *     ${num}\n *   </math>`;\n * ```\n *\n * The `mathml` *tag function* should only be used for MathML fragments, or\n * elements that would be contained **inside** a `<math>` HTML element. A common\n * error is placing a `<math>` *element* in a template tagged with the `mathml`\n * tag function. The `<math>` element is an HTML element and should be used\n * within a template tagged with the {@linkcode html} tag function.\n *\n * In LitElement usage, it's invalid to return an MathML fragment from the\n * `render()` method, as the MathML fragment will be contained within the\n * element's shadow root and thus not be properly contained within a `<math>`\n * HTML element.\n */\nexport const mathml = tag(MATHML_RESULT);\n/**\n * A sentinel value that signals that a value was handled by a directive and\n * should not be written to the DOM.\n */\nexport const noChange = Symbol.for('lit-noChange');\n/**\n * A sentinel value that signals a ChildPart to fully clear its content.\n *\n * ```ts\n * const button = html`${\n *  user.isAdmin\n *    ? html`<button>DELETE</button>`\n *    : nothing\n * }`;\n * ```\n *\n * Prefer using `nothing` over other falsy values as it provides a consistent\n * behavior between various expression binding contexts.\n *\n * In child expressions, `undefined`, `null`, `''`, and `nothing` all behave the\n * same and render no nodes. In attribute expressions, `nothing` _removes_ the\n * attribute, while `undefined` and `null` will render an empty string. In\n * property expressions `nothing` becomes `undefined`.\n */\nexport const nothing = Symbol.for('lit-nothing');\n/**\n * The cache of prepared templates, keyed by the tagged TemplateStringsArray\n * and _not_ accounting for the specific template tag used. This means that\n * template tags cannot be dynamic - they must statically be one of html, svg,\n * or attr. This restriction simplifies the cache lookup, which is on the hot\n * path for rendering.\n */\nconst templateCache = new WeakMap();\nconst walker = d.createTreeWalker(d, 129 /* NodeFilter.SHOW_{ELEMENT|COMMENT} */);\nlet sanitizerFactoryInternal = noopSanitizer;\nfunction trustFromTemplateString(tsa, stringFromTSA) {\n    // A security check to prevent spoofing of Lit template results.\n    // In the future, we may be able to replace this with Array.isTemplateObject,\n    // though we might need to make that check inside of the html and svg\n    // functions, because precompiled templates don't come in as\n    // TemplateStringArray objects.\n    if (!isArray(tsa) || !tsa.hasOwnProperty('raw')) {\n        let message = 'invalid template strings array';\n        if (DEV_MODE) {\n            message = `\n          Internal Error: expected template strings to be an array\n          with a 'raw' field. Faking a template strings array by\n          calling html or svg like an ordinary function is effectively\n          the same as calling unsafeHtml and can lead to major security\n          issues, e.g. opening your code up to XSS attacks.\n          If you're using the html or svg tagged template functions normally\n          and still seeing this error, please file a bug at\n          https://github.com/lit/lit/issues/new?template=bug_report.md\n          and include information about your build tooling, if any.\n        `\n                .trim()\n                .replace(/\\n */g, '\\n');\n        }\n        throw new Error(message);\n    }\n    return policy !== undefined\n        ? policy.createHTML(stringFromTSA)\n        : stringFromTSA;\n}\n/**\n * Returns an HTML string for the given TemplateStringsArray and result type\n * (HTML or SVG), along with the case-sensitive bound attribute names in\n * template order. The HTML contains comment markers denoting the `ChildPart`s\n * and suffixes on bound attributes denoting the `AttributeParts`.\n *\n * @param strings template strings array\n * @param type HTML or SVG\n * @return Array containing `[html, attrNames]` (array returned for terseness,\n *     to avoid object fields since this code is shared with non-minified SSR\n *     code)\n */\nconst getTemplateHtml = (strings, type) => {\n    // Insert makers into the template HTML to represent the position of\n    // bindings. The following code scans the template strings to determine the\n    // syntactic position of the bindings. They can be in text position, where\n    // we insert an HTML comment, attribute value position, where we insert a\n    // sentinel string and re-write the attribute name, or inside a tag where\n    // we insert the sentinel string.\n    const l = strings.length - 1;\n    // Stores the case-sensitive bound attribute names in the order of their\n    // parts. ElementParts are also reflected in this array as undefined\n    // rather than a string, to disambiguate from attribute bindings.\n    const attrNames = [];\n    let html = type === SVG_RESULT ? '<svg>' : type === MATHML_RESULT ? '<math>' : '';\n    // When we're inside a raw text tag (not it's text content), the regex\n    // will still be tagRegex so we can find attributes, but will switch to\n    // this regex when the tag ends.\n    let rawTextEndRegex;\n    // The current parsing state, represented as a reference to one of the\n    // regexes\n    let regex = textEndRegex;\n    for (let i = 0; i < l; i++) {\n        const s = strings[i];\n        // The index of the end of the last attribute name. When this is\n        // positive at end of a string, it means we're in an attribute value\n        // position and need to rewrite the attribute name.\n        // We also use a special value of -2 to indicate that we encountered\n        // the end of a string in attribute name position.\n        let attrNameEndIndex = -1;\n        let attrName;\n        let lastIndex = 0;\n        let match;\n        // The conditions in this loop handle the current parse state, and the\n        // assignments to the `regex` variable are the state transitions.\n        while (lastIndex < s.length) {\n            // Make sure we start searching from where we previously left off\n            regex.lastIndex = lastIndex;\n            match = regex.exec(s);\n            if (match === null) {\n                break;\n            }\n            lastIndex = regex.lastIndex;\n            if (regex === textEndRegex) {\n                if (match[COMMENT_START] === '!--') {\n                    regex = commentEndRegex;\n                }\n                else if (match[COMMENT_START] !== undefined) {\n                    // We started a weird comment, like </{\n                    regex = comment2EndRegex;\n                }\n                else if (match[TAG_NAME] !== undefined) {\n                    if (rawTextElement.test(match[TAG_NAME])) {\n                        // Record if we encounter a raw-text element. We'll switch to\n                        // this regex at the end of the tag.\n                        rawTextEndRegex = new RegExp(`</${match[TAG_NAME]}`, 'g');\n                    }\n                    regex = tagEndRegex;\n                }\n                else if (match[DYNAMIC_TAG_NAME] !== undefined) {\n                    if (DEV_MODE) {\n                        throw new Error('Bindings in tag names are not supported. Please use static templates instead. ' +\n                            'See https://lit.dev/docs/templates/expressions/#static-expressions');\n                    }\n                    regex = tagEndRegex;\n                }\n            }\n            else if (regex === tagEndRegex) {\n                if (match[ENTIRE_MATCH] === '>') {\n                    // End of a tag. If we had started a raw-text element, use that\n                    // regex\n                    regex = rawTextEndRegex ?? textEndRegex;\n                    // We may be ending an unquoted attribute value, so make sure we\n                    // clear any pending attrNameEndIndex\n                    attrNameEndIndex = -1;\n                }\n                else if (match[ATTRIBUTE_NAME] === undefined) {\n                    // Attribute name position\n                    attrNameEndIndex = -2;\n                }\n                else {\n                    attrNameEndIndex = regex.lastIndex - match[SPACES_AND_EQUALS].length;\n                    attrName = match[ATTRIBUTE_NAME];\n                    regex =\n                        match[QUOTE_CHAR] === undefined\n                            ? tagEndRegex\n                            : match[QUOTE_CHAR] === '\"'\n                                ? doubleQuoteAttrEndRegex\n                                : singleQuoteAttrEndRegex;\n                }\n            }\n            else if (regex === doubleQuoteAttrEndRegex ||\n                regex === singleQuoteAttrEndRegex) {\n                regex = tagEndRegex;\n            }\n            else if (regex === commentEndRegex || regex === comment2EndRegex) {\n                regex = textEndRegex;\n            }\n            else {\n                // Not one of the five state regexes, so it must be the dynamically\n                // created raw text regex and we're at the close of that element.\n                regex = tagEndRegex;\n                rawTextEndRegex = undefined;\n            }\n        }\n        if (DEV_MODE) {\n            // If we have a attrNameEndIndex, which indicates that we should\n            // rewrite the attribute name, assert that we're in a valid attribute\n            // position - either in a tag, or a quoted attribute value.\n            console.assert(attrNameEndIndex === -1 ||\n                regex === tagEndRegex ||\n                regex === singleQuoteAttrEndRegex ||\n                regex === doubleQuoteAttrEndRegex, 'unexpected parse state B');\n        }\n        // We have four cases:\n        //  1. We're in text position, and not in a raw text element\n        //     (regex === textEndRegex): insert a comment marker.\n        //  2. We have a non-negative attrNameEndIndex which means we need to\n        //     rewrite the attribute name to add a bound attribute suffix.\n        //  3. We're at the non-first binding in a multi-binding attribute, use a\n        //     plain marker.\n        //  4. We're somewhere else inside the tag. If we're in attribute name\n        //     position (attrNameEndIndex === -2), add a sequential suffix to\n        //     generate a unique attribute name.\n        // Detect a binding next to self-closing tag end and insert a space to\n        // separate the marker from the tag end:\n        const end = regex === tagEndRegex && strings[i + 1].startsWith('/>') ? ' ' : '';\n        html +=\n            regex === textEndRegex\n                ? s + nodeMarker\n                : attrNameEndIndex >= 0\n                    ? (attrNames.push(attrName),\n                        s.slice(0, attrNameEndIndex) +\n                            boundAttributeSuffix +\n                            s.slice(attrNameEndIndex)) +\n                        marker +\n                        end\n                    : s + marker + (attrNameEndIndex === -2 ? i : end);\n    }\n    const htmlResult = html +\n        (strings[l] || '<?>') +\n        (type === SVG_RESULT ? '</svg>' : type === MATHML_RESULT ? '</math>' : '');\n    // Returned as an array for terseness\n    return [trustFromTemplateString(strings, htmlResult), attrNames];\n};\nclass Template {\n    constructor(\n    // This property needs to remain unminified.\n    { strings, ['_$litType$']: type }, options) {\n        this.parts = [];\n        let node;\n        let nodeIndex = 0;\n        let attrNameIndex = 0;\n        const partCount = strings.length - 1;\n        const parts = this.parts;\n        // Create template element\n        const [html, attrNames] = getTemplateHtml(strings, type);\n        this.el = Template.createElement(html, options);\n        walker.currentNode = this.el.content;\n        // Re-parent SVG or MathML nodes into template root\n        if (type === SVG_RESULT || type === MATHML_RESULT) {\n            const wrapper = this.el.content.firstChild;\n            wrapper.replaceWith(...wrapper.childNodes);\n        }\n        // Walk the template to find binding markers and create TemplateParts\n        while ((node = walker.nextNode()) !== null && parts.length < partCount) {\n            if (node.nodeType === 1) {\n                if (DEV_MODE) {\n                    const tag = node.localName;\n                    // Warn if `textarea` includes an expression and throw if `template`\n                    // does since these are not supported. We do this by checking\n                    // innerHTML for anything that looks like a marker. This catches\n                    // cases like bindings in textarea there markers turn into text nodes.\n                    if (/^(?:textarea|template)$/i.test(tag) &&\n                        node.innerHTML.includes(marker)) {\n                        const m = `Expressions are not supported inside \\`${tag}\\` ` +\n                            `elements. See https://lit.dev/msg/expression-in-${tag} for more ` +\n                            `information.`;\n                        if (tag === 'template') {\n                            throw new Error(m);\n                        }\n                        else\n                            issueWarning('', m);\n                    }\n                }\n                // TODO (justinfagnani): for attempted dynamic tag names, we don't\n                // increment the bindingIndex, and it'll be off by 1 in the element\n                // and off by two after it.\n                if (node.hasAttributes()) {\n                    for (const name of node.getAttributeNames()) {\n                        if (name.endsWith(boundAttributeSuffix)) {\n                            const realName = attrNames[attrNameIndex++];\n                            const value = node.getAttribute(name);\n                            const statics = value.split(marker);\n                            const m = /([.?@])?(.*)/.exec(realName);\n                            parts.push({\n                                type: ATTRIBUTE_PART,\n                                index: nodeIndex,\n                                name: m[2],\n                                strings: statics,\n                                ctor: m[1] === '.'\n                                    ? PropertyPart\n                                    : m[1] === '?'\n                                        ? BooleanAttributePart\n                                        : m[1] === '@'\n                                            ? EventPart\n                                            : AttributePart,\n                            });\n                            node.removeAttribute(name);\n                        }\n                        else if (name.startsWith(marker)) {\n                            parts.push({\n                                type: ELEMENT_PART,\n                                index: nodeIndex,\n                            });\n                            node.removeAttribute(name);\n                        }\n                    }\n                }\n                // TODO (justinfagnani): benchmark the regex against testing for each\n                // of the 3 raw text element names.\n                if (rawTextElement.test(node.tagName)) {\n                    // For raw text elements we need to split the text content on\n                    // markers, create a Text node for each segment, and create\n                    // a TemplatePart for each marker.\n                    const strings = node.textContent.split(marker);\n                    const lastIndex = strings.length - 1;\n                    if (lastIndex > 0) {\n                        node.textContent = trustedTypes\n                            ? trustedTypes.emptyScript\n                            : '';\n                        // Generate a new text node for each literal section\n                        // These nodes are also used as the markers for node parts\n                        // We can't use empty text nodes as markers because they're\n                        // normalized when cloning in IE (could simplify when\n                        // IE is no longer supported)\n                        for (let i = 0; i < lastIndex; i++) {\n                            node.append(strings[i], createMarker());\n                            // Walk past the marker node we just added\n                            walker.nextNode();\n                            parts.push({ type: CHILD_PART, index: ++nodeIndex });\n                        }\n                        // Note because this marker is added after the walker's current\n                        // node, it will be walked to in the outer loop (and ignored), so\n                        // we don't need to adjust nodeIndex here\n                        node.append(strings[lastIndex], createMarker());\n                    }\n                }\n            }\n            else if (node.nodeType === 8) {\n                const data = node.data;\n                if (data === markerMatch) {\n                    parts.push({ type: CHILD_PART, index: nodeIndex });\n                }\n                else {\n                    let i = -1;\n                    while ((i = node.data.indexOf(marker, i + 1)) !== -1) {\n                        // Comment node has a binding marker inside, make an inactive part\n                        // The binding won't work, but subsequent bindings will\n                        parts.push({ type: COMMENT_PART, index: nodeIndex });\n                        // Move to the end of the match\n                        i += marker.length - 1;\n                    }\n                }\n            }\n            nodeIndex++;\n        }\n        if (DEV_MODE) {\n            // If there was a duplicate attribute on a tag, then when the tag is\n            // parsed into an element the attribute gets de-duplicated. We can detect\n            // this mismatch if we haven't precisely consumed every attribute name\n            // when preparing the template. This works because `attrNames` is built\n            // from the template string and `attrNameIndex` comes from processing the\n            // resulting DOM.\n            if (attrNames.length !== attrNameIndex) {\n                throw new Error(`Detected duplicate attribute bindings. This occurs if your template ` +\n                    `has duplicate attributes on an element tag. For example ` +\n                    `\"<input ?disabled=\\${true} ?disabled=\\${false}>\" contains a ` +\n                    `duplicate \"disabled\" attribute. The error was detected in ` +\n                    `the following template: \\n` +\n                    '`' +\n                    strings.join('${...}') +\n                    '`');\n            }\n        }\n        // We could set walker.currentNode to another node here to prevent a memory\n        // leak, but every time we prepare a template, we immediately render it\n        // and re-use the walker in new TemplateInstance._clone().\n        debugLogEvent &&\n            debugLogEvent({\n                kind: 'template prep',\n                template: this,\n                clonableTemplate: this.el,\n                parts: this.parts,\n                strings,\n            });\n    }\n    // Overridden via `litHtmlPolyfillSupport` to provide platform support.\n    /** @nocollapse */\n    static createElement(html, _options) {\n        const el = d.createElement('template');\n        el.innerHTML = html;\n        return el;\n    }\n}\nfunction resolveDirective(part, value, parent = part, attributeIndex) {\n    // Bail early if the value is explicitly noChange. Note, this means any\n    // nested directive is still attached and is not run.\n    if (value === noChange) {\n        return value;\n    }\n    let currentDirective = attributeIndex !== undefined\n        ? parent.__directives?.[attributeIndex]\n        : parent.__directive;\n    const nextDirectiveConstructor = isPrimitive(value)\n        ? undefined\n        : // This property needs to remain unminified.\n            value['_$litDirective$'];\n    if (currentDirective?.constructor !== nextDirectiveConstructor) {\n        // This property needs to remain unminified.\n        currentDirective?.['_$notifyDirectiveConnectionChanged']?.(false);\n        if (nextDirectiveConstructor === undefined) {\n            currentDirective = undefined;\n        }\n        else {\n            currentDirective = new nextDirectiveConstructor(part);\n            currentDirective._$initialize(part, parent, attributeIndex);\n        }\n        if (attributeIndex !== undefined) {\n            (parent.__directives ??= [])[attributeIndex] =\n                currentDirective;\n        }\n        else {\n            parent.__directive = currentDirective;\n        }\n    }\n    if (currentDirective !== undefined) {\n        value = resolveDirective(part, currentDirective._$resolve(part, value.values), currentDirective, attributeIndex);\n    }\n    return value;\n}\n/**\n * An updateable instance of a Template. Holds references to the Parts used to\n * update the template instance.\n */\nclass TemplateInstance {\n    constructor(template, parent) {\n        this._$parts = [];\n        /** @internal */\n        this._$disconnectableChildren = undefined;\n        this._$template = template;\n        this._$parent = parent;\n    }\n    // Called by ChildPart parentNode getter\n    get parentNode() {\n        return this._$parent.parentNode;\n    }\n    // See comment in Disconnectable interface for why this is a getter\n    get _$isConnected() {\n        return this._$parent._$isConnected;\n    }\n    // This method is separate from the constructor because we need to return a\n    // DocumentFragment and we don't want to hold onto it with an instance field.\n    _clone(options) {\n        const { el: { content }, parts: parts, } = this._$template;\n        const fragment = (options?.creationScope ?? d).importNode(content, true);\n        walker.currentNode = fragment;\n        let node = walker.nextNode();\n        let nodeIndex = 0;\n        let partIndex = 0;\n        let templatePart = parts[0];\n        while (templatePart !== undefined) {\n            if (nodeIndex === templatePart.index) {\n                let part;\n                if (templatePart.type === CHILD_PART) {\n                    part = new ChildPart(node, node.nextSibling, this, options);\n                }\n                else if (templatePart.type === ATTRIBUTE_PART) {\n                    part = new templatePart.ctor(node, templatePart.name, templatePart.strings, this, options);\n                }\n                else if (templatePart.type === ELEMENT_PART) {\n                    part = new ElementPart(node, this, options);\n                }\n                this._$parts.push(part);\n                templatePart = parts[++partIndex];\n            }\n            if (nodeIndex !== templatePart?.index) {\n                node = walker.nextNode();\n                nodeIndex++;\n            }\n        }\n        // We need to set the currentNode away from the cloned tree so that we\n        // don't hold onto the tree even if the tree is detached and should be\n        // freed.\n        walker.currentNode = d;\n        return fragment;\n    }\n    _update(values) {\n        let i = 0;\n        for (const part of this._$parts) {\n            if (part !== undefined) {\n                debugLogEvent &&\n                    debugLogEvent({\n                        kind: 'set part',\n                        part,\n                        value: values[i],\n                        valueIndex: i,\n                        values,\n                        templateInstance: this,\n                    });\n                if (part.strings !== undefined) {\n                    part._$setValue(values, part, i);\n                    // The number of values the part consumes is part.strings.length - 1\n                    // since values are in between template spans. We increment i by 1\n                    // later in the loop, so increment it by part.strings.length - 2 here\n                    i += part.strings.length - 2;\n                }\n                else {\n                    part._$setValue(values[i]);\n                }\n            }\n            i++;\n        }\n    }\n}\nclass ChildPart {\n    // See comment in Disconnectable interface for why this is a getter\n    get _$isConnected() {\n        // ChildParts that are not at the root should always be created with a\n        // parent; only RootChildNode's won't, so they return the local isConnected\n        // state\n        return this._$parent?._$isConnected ?? this.__isConnected;\n    }\n    constructor(startNode, endNode, parent, options) {\n        this.type = CHILD_PART;\n        this._$committedValue = nothing;\n        // The following fields will be patched onto ChildParts when required by\n        // AsyncDirective\n        /** @internal */\n        this._$disconnectableChildren = undefined;\n        this._$startNode = startNode;\n        this._$endNode = endNode;\n        this._$parent = parent;\n        this.options = options;\n        // Note __isConnected is only ever accessed on RootParts (i.e. when there is\n        // no _$parent); the value on a non-root-part is \"don't care\", but checking\n        // for parent would be more code\n        this.__isConnected = options?.isConnected ?? true;\n        if (ENABLE_EXTRA_SECURITY_HOOKS) {\n            // Explicitly initialize for consistent class shape.\n            this._textSanitizer = undefined;\n        }\n    }\n    /**\n     * The parent node into which the part renders its content.\n     *\n     * A ChildPart's content consists of a range of adjacent child nodes of\n     * `.parentNode`, possibly bordered by 'marker nodes' (`.startNode` and\n     * `.endNode`).\n     *\n     * - If both `.startNode` and `.endNode` are non-null, then the part's content\n     * consists of all siblings between `.startNode` and `.endNode`, exclusively.\n     *\n     * - If `.startNode` is non-null but `.endNode` is null, then the part's\n     * content consists of all siblings following `.startNode`, up to and\n     * including the last child of `.parentNode`. If `.endNode` is non-null, then\n     * `.startNode` will always be non-null.\n     *\n     * - If both `.endNode` and `.startNode` are null, then the part's content\n     * consists of all child nodes of `.parentNode`.\n     */\n    get parentNode() {\n        let parentNode = wrap(this._$startNode).parentNode;\n        const parent = this._$parent;\n        if (parent !== undefined &&\n            parentNode?.nodeType === 11 /* Node.DOCUMENT_FRAGMENT */) {\n            // If the parentNode is a DocumentFragment, it may be because the DOM is\n            // still in the cloned fragment during initial render; if so, get the real\n            // parentNode the part will be committed into by asking the parent.\n            parentNode = parent.parentNode;\n        }\n        return parentNode;\n    }\n    /**\n     * The part's leading marker node, if any. See `.parentNode` for more\n     * information.\n     */\n    get startNode() {\n        return this._$startNode;\n    }\n    /**\n     * The part's trailing marker node, if any. See `.parentNode` for more\n     * information.\n     */\n    get endNode() {\n        return this._$endNode;\n    }\n    _$setValue(value, directiveParent = this) {\n        if (DEV_MODE && this.parentNode === null) {\n            throw new Error(`This \\`ChildPart\\` has no \\`parentNode\\` and therefore cannot accept a value. This likely means the element containing the part was manipulated in an unsupported way outside of Lit's control such that the part's marker nodes were ejected from DOM. For example, setting the element's \\`innerHTML\\` or \\`textContent\\` can do this.`);\n        }\n        value = resolveDirective(this, value, directiveParent);\n        if (isPrimitive(value)) {\n            // Non-rendering child values. It's important that these do not render\n            // empty text nodes to avoid issues with preventing default <slot>\n            // fallback content.\n            if (value === nothing || value == null || value === '') {\n                if (this._$committedValue !== nothing) {\n                    debugLogEvent &&\n                        debugLogEvent({\n                            kind: 'commit nothing to child',\n                            start: this._$startNode,\n                            end: this._$endNode,\n                            parent: this._$parent,\n                            options: this.options,\n                        });\n                    this._$clear();\n                }\n                this._$committedValue = nothing;\n            }\n            else if (value !== this._$committedValue && value !== noChange) {\n                this._commitText(value);\n            }\n            // This property needs to remain unminified.\n        }\n        else if (value['_$litType$'] !== undefined) {\n            this._commitTemplateResult(value);\n        }\n        else if (value.nodeType !== undefined) {\n            if (DEV_MODE && this.options?.host === value) {\n                this._commitText(`[probable mistake: rendered a template's host in itself ` +\n                    `(commonly caused by writing \\${this} in a template]`);\n                console.warn(`Attempted to render the template host`, value, `inside itself. This is almost always a mistake, and in dev mode `, `we render some warning text. In production however, we'll `, `render it, which will usually result in an error, and sometimes `, `in the element disappearing from the DOM.`);\n                return;\n            }\n            this._commitNode(value);\n        }\n        else if (isIterable(value)) {\n            this._commitIterable(value);\n        }\n        else {\n            // Fallback, will render the string representation\n            this._commitText(value);\n        }\n    }\n    _insert(node) {\n        return wrap(wrap(this._$startNode).parentNode).insertBefore(node, this._$endNode);\n    }\n    _commitNode(value) {\n        if (this._$committedValue !== value) {\n            this._$clear();\n            if (ENABLE_EXTRA_SECURITY_HOOKS &&\n                sanitizerFactoryInternal !== noopSanitizer) {\n                const parentNodeName = this._$startNode.parentNode?.nodeName;\n                if (parentNodeName === 'STYLE' || parentNodeName === 'SCRIPT') {\n                    let message = 'Forbidden';\n                    if (DEV_MODE) {\n                        if (parentNodeName === 'STYLE') {\n                            message =\n                                `Lit does not support binding inside style nodes. ` +\n                                    `This is a security risk, as style injection attacks can ` +\n                                    `exfiltrate data and spoof UIs. ` +\n                                    `Consider instead using css\\`...\\` literals ` +\n                                    `to compose styles, and do dynamic styling with ` +\n                                    `css custom properties, ::parts, <slot>s, ` +\n                                    `and by mutating the DOM rather than stylesheets.`;\n                        }\n                        else {\n                            message =\n                                `Lit does not support binding inside script nodes. ` +\n                                    `This is a security risk, as it could allow arbitrary ` +\n                                    `code execution.`;\n                        }\n                    }\n                    throw new Error(message);\n                }\n            }\n            debugLogEvent &&\n                debugLogEvent({\n                    kind: 'commit node',\n                    start: this._$startNode,\n                    parent: this._$parent,\n                    value: value,\n                    options: this.options,\n                });\n            this._$committedValue = this._insert(value);\n        }\n    }\n    _commitText(value) {\n        // If the committed value is a primitive it means we called _commitText on\n        // the previous render, and we know that this._$startNode.nextSibling is a\n        // Text node. We can now just replace the text content (.data) of the node.\n        if (this._$committedValue !== nothing &&\n            isPrimitive(this._$committedValue)) {\n            const node = wrap(this._$startNode).nextSibling;\n            if (ENABLE_EXTRA_SECURITY_HOOKS) {\n                if (this._textSanitizer === undefined) {\n                    this._textSanitizer = createSanitizer(node, 'data', 'property');\n                }\n                value = this._textSanitizer(value);\n            }\n            debugLogEvent &&\n                debugLogEvent({\n                    kind: 'commit text',\n                    node,\n                    value,\n                    options: this.options,\n                });\n            node.data = value;\n        }\n        else {\n            if (ENABLE_EXTRA_SECURITY_HOOKS) {\n                const textNode = d.createTextNode('');\n                this._commitNode(textNode);\n                // When setting text content, for security purposes it matters a lot\n                // what the parent is. For example, <style> and <script> need to be\n                // handled with care, while <span> does not. So first we need to put a\n                // text node into the document, then we can sanitize its content.\n                if (this._textSanitizer === undefined) {\n                    this._textSanitizer = createSanitizer(textNode, 'data', 'property');\n                }\n                value = this._textSanitizer(value);\n                debugLogEvent &&\n                    debugLogEvent({\n                        kind: 'commit text',\n                        node: textNode,\n                        value,\n                        options: this.options,\n                    });\n                textNode.data = value;\n            }\n            else {\n                this._commitNode(d.createTextNode(value));\n                debugLogEvent &&\n                    debugLogEvent({\n                        kind: 'commit text',\n                        node: wrap(this._$startNode).nextSibling,\n                        value,\n                        options: this.options,\n                    });\n            }\n        }\n        this._$committedValue = value;\n    }\n    _commitTemplateResult(result) {\n        // This property needs to remain unminified.\n        const { values, ['_$litType$']: type } = result;\n        // If $litType$ is a number, result is a plain TemplateResult and we get\n        // the template from the template cache. If not, result is a\n        // CompiledTemplateResult and _$litType$ is a CompiledTemplate and we need\n        // to create the <template> element the first time we see it.\n        const template = typeof type === 'number'\n            ? this._$getTemplate(result)\n            : (type.el === undefined &&\n                (type.el = Template.createElement(trustFromTemplateString(type.h, type.h[0]), this.options)),\n                type);\n        if (this._$committedValue?._$template === template) {\n            debugLogEvent &&\n                debugLogEvent({\n                    kind: 'template updating',\n                    template,\n                    instance: this._$committedValue,\n                    parts: this._$committedValue._$parts,\n                    options: this.options,\n                    values,\n                });\n            this._$committedValue._update(values);\n        }\n        else {\n            const instance = new TemplateInstance(template, this);\n            const fragment = instance._clone(this.options);\n            debugLogEvent &&\n                debugLogEvent({\n                    kind: 'template instantiated',\n                    template,\n                    instance,\n                    parts: instance._$parts,\n                    options: this.options,\n                    fragment,\n                    values,\n                });\n            instance._update(values);\n            debugLogEvent &&\n                debugLogEvent({\n                    kind: 'template instantiated and updated',\n                    template,\n                    instance,\n                    parts: instance._$parts,\n                    options: this.options,\n                    fragment,\n                    values,\n                });\n            this._commitNode(fragment);\n            this._$committedValue = instance;\n        }\n    }\n    // Overridden via `litHtmlPolyfillSupport` to provide platform support.\n    /** @internal */\n    _$getTemplate(result) {\n        let template = templateCache.get(result.strings);\n        if (template === undefined) {\n            templateCache.set(result.strings, (template = new Template(result)));\n        }\n        return template;\n    }\n    _commitIterable(value) {\n        // For an Iterable, we create a new InstancePart per item, then set its\n        // value to the item. This is a little bit of overhead for every item in\n        // an Iterable, but it lets us recurse easily and efficiently update Arrays\n        // of TemplateResults that will be commonly returned from expressions like:\n        // array.map((i) => html`${i}`), by reusing existing TemplateInstances.\n        // If value is an array, then the previous render was of an\n        // iterable and value will contain the ChildParts from the previous\n        // render. If value is not an array, clear this part and make a new\n        // array for ChildParts.\n        if (!isArray(this._$committedValue)) {\n            this._$committedValue = [];\n            this._$clear();\n        }\n        // Lets us keep track of how many items we stamped so we can clear leftover\n        // items from a previous render\n        const itemParts = this._$committedValue;\n        let partIndex = 0;\n        let itemPart;\n        for (const item of value) {\n            if (partIndex === itemParts.length) {\n                // If no existing part, create a new one\n                // TODO (justinfagnani): test perf impact of always creating two parts\n                // instead of sharing parts between nodes\n                // https://github.com/lit/lit/issues/1266\n                itemParts.push((itemPart = new ChildPart(this._insert(createMarker()), this._insert(createMarker()), this, this.options)));\n            }\n            else {\n                // Reuse an existing part\n                itemPart = itemParts[partIndex];\n            }\n            itemPart._$setValue(item);\n            partIndex++;\n        }\n        if (partIndex < itemParts.length) {\n            // itemParts always have end nodes\n            this._$clear(itemPart && wrap(itemPart._$endNode).nextSibling, partIndex);\n            // Truncate the parts array so _value reflects the current state\n            itemParts.length = partIndex;\n        }\n    }\n    /**\n     * Removes the nodes contained within this Part from the DOM.\n     *\n     * @param start Start node to clear from, for clearing a subset of the part's\n     *     DOM (used when truncating iterables)\n     * @param from  When `start` is specified, the index within the iterable from\n     *     which ChildParts are being removed, used for disconnecting directives in\n     *     those Parts.\n     *\n     * @internal\n     */\n    _$clear(start = wrap(this._$startNode).nextSibling, from) {\n        this._$notifyConnectionChanged?.(false, true, from);\n        while (start && start !== this._$endNode) {\n            const n = wrap(start).nextSibling;\n            wrap(start).remove();\n            start = n;\n        }\n    }\n    /**\n     * Implementation of RootPart's `isConnected`. Note that this method\n     * should only be called on `RootPart`s (the `ChildPart` returned from a\n     * top-level `render()` call). It has no effect on non-root ChildParts.\n     * @param isConnected Whether to set\n     * @internal\n     */\n    setConnected(isConnected) {\n        if (this._$parent === undefined) {\n            this.__isConnected = isConnected;\n            this._$notifyConnectionChanged?.(isConnected);\n        }\n        else if (DEV_MODE) {\n            throw new Error('part.setConnected() may only be called on a ' +\n                'RootPart returned from render().');\n        }\n    }\n}\nclass AttributePart {\n    get tagName() {\n        return this.element.tagName;\n    }\n    // See comment in Disconnectable interface for why this is a getter\n    get _$isConnected() {\n        return this._$parent._$isConnected;\n    }\n    constructor(element, name, strings, parent, options) {\n        this.type = ATTRIBUTE_PART;\n        /** @internal */\n        this._$committedValue = nothing;\n        /** @internal */\n        this._$disconnectableChildren = undefined;\n        this.element = element;\n        this.name = name;\n        this._$parent = parent;\n        this.options = options;\n        if (strings.length > 2 || strings[0] !== '' || strings[1] !== '') {\n            this._$committedValue = new Array(strings.length - 1).fill(new String());\n            this.strings = strings;\n        }\n        else {\n            this._$committedValue = nothing;\n        }\n        if (ENABLE_EXTRA_SECURITY_HOOKS) {\n            this._sanitizer = undefined;\n        }\n    }\n    /**\n     * Sets the value of this part by resolving the value from possibly multiple\n     * values and static strings and committing it to the DOM.\n     * If this part is single-valued, `this._strings` will be undefined, and the\n     * method will be called with a single value argument. If this part is\n     * multi-value, `this._strings` will be defined, and the method is called\n     * with the value array of the part's owning TemplateInstance, and an offset\n     * into the value array from which the values should be read.\n     * This method is overloaded this way to eliminate short-lived array slices\n     * of the template instance values, and allow a fast-path for single-valued\n     * parts.\n     *\n     * @param value The part value, or an array of values for multi-valued parts\n     * @param valueIndex the index to start reading values from. `undefined` for\n     *   single-valued parts\n     * @param noCommit causes the part to not commit its value to the DOM. Used\n     *   in hydration to prime attribute parts with their first-rendered value,\n     *   but not set the attribute, and in SSR to no-op the DOM operation and\n     *   capture the value for serialization.\n     *\n     * @internal\n     */\n    _$setValue(value, directiveParent = this, valueIndex, noCommit) {\n        const strings = this.strings;\n        // Whether any of the values has changed, for dirty-checking\n        let change = false;\n        if (strings === undefined) {\n            // Single-value binding case\n            value = resolveDirective(this, value, directiveParent, 0);\n            change =\n                !isPrimitive(value) ||\n                    (value !== this._$committedValue && value !== noChange);\n            if (change) {\n                this._$committedValue = value;\n            }\n        }\n        else {\n            // Interpolation case\n            const values = value;\n            value = strings[0];\n            let i, v;\n            for (i = 0; i < strings.length - 1; i++) {\n                v = resolveDirective(this, values[valueIndex + i], directiveParent, i);\n                if (v === noChange) {\n                    // If the user-provided value is `noChange`, use the previous value\n                    v = this._$committedValue[i];\n                }\n                change ||=\n                    !isPrimitive(v) || v !== this._$committedValue[i];\n                if (v === nothing) {\n                    value = nothing;\n                }\n                else if (value !== nothing) {\n                    value += (v ?? '') + strings[i + 1];\n                }\n                // We always record each value, even if one is `nothing`, for future\n                // change detection.\n                this._$committedValue[i] = v;\n            }\n        }\n        if (change && !noCommit) {\n            this._commitValue(value);\n        }\n    }\n    /** @internal */\n    _commitValue(value) {\n        if (value === nothing) {\n            wrap(this.element).removeAttribute(this.name);\n        }\n        else {\n            if (ENABLE_EXTRA_SECURITY_HOOKS) {\n                if (this._sanitizer === undefined) {\n                    this._sanitizer = sanitizerFactoryInternal(this.element, this.name, 'attribute');\n                }\n                value = this._sanitizer(value ?? '');\n            }\n            debugLogEvent &&\n                debugLogEvent({\n                    kind: 'commit attribute',\n                    element: this.element,\n                    name: this.name,\n                    value,\n                    options: this.options,\n                });\n            wrap(this.element).setAttribute(this.name, (value ?? ''));\n        }\n    }\n}\nclass PropertyPart extends AttributePart {\n    constructor() {\n        super(...arguments);\n        this.type = PROPERTY_PART;\n    }\n    /** @internal */\n    _commitValue(value) {\n        if (ENABLE_EXTRA_SECURITY_HOOKS) {\n            if (this._sanitizer === undefined) {\n                this._sanitizer = sanitizerFactoryInternal(this.element, this.name, 'property');\n            }\n            value = this._sanitizer(value);\n        }\n        debugLogEvent &&\n            debugLogEvent({\n                kind: 'commit property',\n                element: this.element,\n                name: this.name,\n                value,\n                options: this.options,\n            });\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        this.element[this.name] = value === nothing ? undefined : value;\n    }\n}\nclass BooleanAttributePart extends AttributePart {\n    constructor() {\n        super(...arguments);\n        this.type = BOOLEAN_ATTRIBUTE_PART;\n    }\n    /** @internal */\n    _commitValue(value) {\n        debugLogEvent &&\n            debugLogEvent({\n                kind: 'commit boolean attribute',\n                element: this.element,\n                name: this.name,\n                value: !!(value && value !== nothing),\n                options: this.options,\n            });\n        wrap(this.element).toggleAttribute(this.name, !!value && value !== nothing);\n    }\n}\nclass EventPart extends AttributePart {\n    constructor(element, name, strings, parent, options) {\n        super(element, name, strings, parent, options);\n        this.type = EVENT_PART;\n        if (DEV_MODE && this.strings !== undefined) {\n            throw new Error(`A \\`<${element.localName}>\\` has a \\`@${name}=...\\` listener with ` +\n                'invalid content. Event listeners in templates must have exactly ' +\n                'one expression and no surrounding text.');\n        }\n    }\n    // EventPart does not use the base _$setValue/_resolveValue implementation\n    // since the dirty checking is more complex\n    /** @internal */\n    _$setValue(newListener, directiveParent = this) {\n        newListener =\n            resolveDirective(this, newListener, directiveParent, 0) ?? nothing;\n        if (newListener === noChange) {\n            return;\n        }\n        const oldListener = this._$committedValue;\n        // If the new value is nothing or any options change we have to remove the\n        // part as a listener.\n        const shouldRemoveListener = (newListener === nothing && oldListener !== nothing) ||\n            newListener.capture !==\n                oldListener.capture ||\n            newListener.once !==\n                oldListener.once ||\n            newListener.passive !==\n                oldListener.passive;\n        // If the new value is not nothing and we removed the listener, we have\n        // to add the part as a listener.\n        const shouldAddListener = newListener !== nothing &&\n            (oldListener === nothing || shouldRemoveListener);\n        debugLogEvent &&\n            debugLogEvent({\n                kind: 'commit event listener',\n                element: this.element,\n                name: this.name,\n                value: newListener,\n                options: this.options,\n                removeListener: shouldRemoveListener,\n                addListener: shouldAddListener,\n                oldListener,\n            });\n        if (shouldRemoveListener) {\n            this.element.removeEventListener(this.name, this, oldListener);\n        }\n        if (shouldAddListener) {\n            // Beware: IE11 and Chrome 41 don't like using the listener as the\n            // options object. Figure out how to deal w/ this in IE11 - maybe\n            // patch addEventListener?\n            this.element.addEventListener(this.name, this, newListener);\n        }\n        this._$committedValue = newListener;\n    }\n    handleEvent(event) {\n        if (typeof this._$committedValue === 'function') {\n            this._$committedValue.call(this.options?.host ?? this.element, event);\n        }\n        else {\n            this._$committedValue.handleEvent(event);\n        }\n    }\n}\nclass ElementPart {\n    constructor(element, parent, options) {\n        this.element = element;\n        this.type = ELEMENT_PART;\n        /** @internal */\n        this._$disconnectableChildren = undefined;\n        this._$parent = parent;\n        this.options = options;\n    }\n    // See comment in Disconnectable interface for why this is a getter\n    get _$isConnected() {\n        return this._$parent._$isConnected;\n    }\n    _$setValue(value) {\n        debugLogEvent &&\n            debugLogEvent({\n                kind: 'commit to element binding',\n                element: this.element,\n                value,\n                options: this.options,\n            });\n        resolveDirective(this, value);\n    }\n}\n/**\n * END USERS SHOULD NOT RELY ON THIS OBJECT.\n *\n * Private exports for use by other Lit packages, not intended for use by\n * external users.\n *\n * We currently do not make a mangled rollup build of the lit-ssr code. In order\n * to keep a number of (otherwise private) top-level exports mangled in the\n * client side code, we export a _$LH object containing those members (or\n * helper methods for accessing private fields of those members), and then\n * re-export them for use in lit-ssr. This keeps lit-ssr agnostic to whether the\n * client-side code is being used in `dev` mode or `prod` mode.\n *\n * This has a unique name, to disambiguate it from private exports in\n * lit-element, which re-exports all of lit-html.\n *\n * @private\n */\nexport const _$LH = {\n    // Used in lit-ssr\n    _boundAttributeSuffix: boundAttributeSuffix,\n    _marker: marker,\n    _markerMatch: markerMatch,\n    _HTML_RESULT: HTML_RESULT,\n    _getTemplateHtml: getTemplateHtml,\n    // Used in tests and private-ssr-support\n    _TemplateInstance: TemplateInstance,\n    _isIterable: isIterable,\n    _resolveDirective: resolveDirective,\n    _ChildPart: ChildPart,\n    _AttributePart: AttributePart,\n    _BooleanAttributePart: BooleanAttributePart,\n    _EventPart: EventPart,\n    _PropertyPart: PropertyPart,\n    _ElementPart: ElementPart,\n};\n// Apply polyfills if available\nconst polyfillSupport = DEV_MODE\n    ? global.litHtmlPolyfillSupportDevMode\n    : global.litHtmlPolyfillSupport;\npolyfillSupport?.(Template, ChildPart);\n// IMPORTANT: do not change the property name or the assignment expression.\n// This line will be used in regexes to search for lit-html usage.\n(global.litHtmlVersions ??= []).push('3.2.1');\nif (DEV_MODE && global.litHtmlVersions.length > 1) {\n    issueWarning('multiple-versions', `Multiple versions of Lit loaded. ` +\n        `Loading multiple versions is not recommended.`);\n}\n/**\n * Renders a value, usually a lit-html TemplateResult, to the container.\n *\n * This example renders the text \"Hello, Zoe!\" inside a paragraph tag, appending\n * it to the container `document.body`.\n *\n * ```js\n * import {html, render} from 'lit';\n *\n * const name = \"Zoe\";\n * render(html`<p>Hello, ${name}!</p>`, document.body);\n * ```\n *\n * @param value Any [renderable\n *   value](https://lit.dev/docs/templates/expressions/#child-expressions),\n *   typically a {@linkcode TemplateResult} created by evaluating a template tag\n *   like {@linkcode html} or {@linkcode svg}.\n * @param container A DOM container to render to. The first render will append\n *   the rendered value to the container, and subsequent renders will\n *   efficiently update the rendered value if the same result type was\n *   previously rendered there.\n * @param options See {@linkcode RenderOptions} for options documentation.\n * @see\n * {@link https://lit.dev/docs/libraries/standalone-templates/#rendering-lit-html-templates| Rendering Lit HTML Templates}\n */\nexport const render = (value, container, options) => {\n    if (DEV_MODE && container == null) {\n        // Give a clearer error message than\n        //     Uncaught TypeError: Cannot read properties of null (reading\n        //     '_$litPart$')\n        // which reads like an internal Lit error.\n        throw new TypeError(`The container to render into may not be ${container}`);\n    }\n    const renderId = DEV_MODE ? debugLogRenderId++ : 0;\n    const partOwnerNode = options?.renderBefore ?? container;\n    // This property needs to remain unminified.\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    let part = partOwnerNode['_$litPart$'];\n    debugLogEvent &&\n        debugLogEvent({\n            kind: 'begin render',\n            id: renderId,\n            value,\n            container,\n            options,\n            part,\n        });\n    if (part === undefined) {\n        const endNode = options?.renderBefore ?? null;\n        // This property needs to remain unminified.\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        partOwnerNode['_$litPart$'] = part = new ChildPart(container.insertBefore(createMarker(), endNode), endNode, undefined, options ?? {});\n    }\n    part._$setValue(value);\n    debugLogEvent &&\n        debugLogEvent({\n            kind: 'end render',\n            id: renderId,\n            value,\n            container,\n            options,\n            part,\n        });\n    return part;\n};\nif (ENABLE_EXTRA_SECURITY_HOOKS) {\n    render.setSanitizer = setSanitizer;\n    render.createSanitizer = createSanitizer;\n    if (DEV_MODE) {\n        render._testOnlyClearSanitizerFactoryDoNotCallOrElse =\n            _testOnlyClearSanitizerFactoryDoNotCallOrElse;\n    }\n}\n//# sourceMappingURL=lit-html.js.map","/**\n * @license\n * Copyright 2020 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n// Any new exports need to be added to the export statement in\n// `packages/lit/src/index.all.ts`.\nimport { html as coreHtml, svg as coreSvg, mathml as coreMathml, } from './lit-html.js';\n/**\n * Prevents JSON injection attacks.\n *\n * The goals of this brand:\n *   1) fast to check\n *   2) code is small on the wire\n *   3) multiple versions of Lit in a single page will all produce mutually\n *      interoperable StaticValues\n *   4) normal JSON.parse (without an unusual reviver) can not produce a\n *      StaticValue\n *\n * Symbols satisfy (1), (2), and (4). We use Symbol.for to satisfy (3), but\n * we don't care about the key, so we break ties via (2) and use the empty\n * string.\n */\nconst brand = Symbol.for('');\n/** Safely extracts the string part of a StaticValue. */\nconst unwrapStaticValue = (value) => {\n    if (value?.r !== brand) {\n        return undefined;\n    }\n    return value?.['_$litStatic$'];\n};\n/**\n * Wraps a string so that it behaves like part of the static template\n * strings instead of a dynamic value.\n *\n * Users must take care to ensure that adding the static string to the template\n * results in well-formed HTML, or else templates may break unexpectedly.\n *\n * Note that this function is unsafe to use on untrusted content, as it will be\n * directly parsed into HTML. Do not pass user input to this function\n * without sanitizing it.\n *\n * Static values can be changed, but they will cause a complete re-render\n * since they effectively create a new template.\n */\nexport const unsafeStatic = (value) => ({\n    ['_$litStatic$']: value,\n    r: brand,\n});\nconst textFromStatic = (value) => {\n    if (value['_$litStatic$'] !== undefined) {\n        return value['_$litStatic$'];\n    }\n    else {\n        throw new Error(`Value passed to 'literal' function must be a 'literal' result: ${value}. Use 'unsafeStatic' to pass non-literal values, but\n            take care to ensure page security.`);\n    }\n};\n/**\n * Tags a string literal so that it behaves like part of the static template\n * strings instead of a dynamic value.\n *\n * The only values that may be used in template expressions are other tagged\n * `literal` results or `unsafeStatic` values (note that untrusted content\n * should never be passed to `unsafeStatic`).\n *\n * Users must take care to ensure that adding the static string to the template\n * results in well-formed HTML, or else templates may break unexpectedly.\n *\n * Static values can be changed, but they will cause a complete re-render since\n * they effectively create a new template.\n */\nexport const literal = (strings, ...values) => ({\n    ['_$litStatic$']: values.reduce((acc, v, idx) => acc + textFromStatic(v) + strings[idx + 1], strings[0]),\n    r: brand,\n});\nconst stringsCache = new Map();\n/**\n * Wraps a lit-html template tag (`html` or `svg`) to add static value support.\n */\nexport const withStatic = (coreTag) => (strings, ...values) => {\n    const l = values.length;\n    let staticValue;\n    let dynamicValue;\n    const staticStrings = [];\n    const dynamicValues = [];\n    let i = 0;\n    let hasStatics = false;\n    let s;\n    while (i < l) {\n        s = strings[i];\n        // Collect any unsafeStatic values, and their following template strings\n        // so that we treat a run of template strings and unsafe static values as\n        // a single template string.\n        while (i < l &&\n            ((dynamicValue = values[i]),\n                (staticValue = unwrapStaticValue(dynamicValue))) !== undefined) {\n            s += staticValue + strings[++i];\n            hasStatics = true;\n        }\n        // If the last value is static, we don't need to push it.\n        if (i !== l) {\n            dynamicValues.push(dynamicValue);\n        }\n        staticStrings.push(s);\n        i++;\n    }\n    // If the last value isn't static (which would have consumed the last\n    // string), then we need to add the last string.\n    if (i === l) {\n        staticStrings.push(strings[l]);\n    }\n    if (hasStatics) {\n        const key = staticStrings.join('$$lit$$');\n        strings = stringsCache.get(key);\n        if (strings === undefined) {\n            // Beware: in general this pattern is unsafe, and doing so may bypass\n            // lit's security checks and allow an attacker to execute arbitrary\n            // code and inject arbitrary content.\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            staticStrings.raw = staticStrings;\n            stringsCache.set(key, (strings = staticStrings));\n        }\n        values = dynamicValues;\n    }\n    return coreTag(strings, ...values);\n};\n/**\n * Interprets a template literal as an HTML template that can efficiently\n * render to and update a container.\n *\n * Includes static value support from `lit-html/static.js`.\n */\nexport const html = withStatic(coreHtml);\n/**\n * Interprets a template literal as an SVG template that can efficiently\n * render to and update a container.\n *\n * Includes static value support from `lit-html/static.js`.\n */\nexport const svg = withStatic(coreSvg);\n/**\n * Interprets a template literal as MathML fragment that can efficiently render\n * to and update a container.\n *\n * Includes static value support from `lit-html/static.js`.\n */\nexport const mathml = withStatic(coreMathml);\n//# sourceMappingURL=static.js.map","export*from\"@lit/reactive-element/decorators/custom-element.js\";export*from\"@lit/reactive-element/decorators/property.js\";export*from\"@lit/reactive-element/decorators/state.js\";export*from\"@lit/reactive-element/decorators/event-options.js\";export*from\"@lit/reactive-element/decorators/query.js\";export*from\"@lit/reactive-element/decorators/query-all.js\";export*from\"@lit/reactive-element/decorators/query-async.js\";export*from\"@lit/reactive-element/decorators/query-assigned-elements.js\";export*from\"@lit/reactive-element/decorators/query-assigned-nodes.js\";\n//# sourceMappingURL=decorators.js.map\n","export*from\"lit-html/directives/class-map.js\";\n//# sourceMappingURL=class-map.js.map\n","export*from\"lit-html/directives/style-map.js\";\n//# sourceMappingURL=style-map.js.map\n","import\"@lit/reactive-element\";import\"lit-html\";export*from\"lit-element/lit-element.js\";export*from\"lit-html/is-server.js\";\n//# sourceMappingURL=index.js.map\n","export*from\"lit-html/static.js\";\n//# sourceMappingURL=static-html.js.map\n","/******************************************************************************\nCopyright (c) Microsoft Corporation.\n\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\nPERFORMANCE OF THIS SOFTWARE.\n***************************************************************************** */\n/* global Reflect, Promise, SuppressedError, Symbol, Iterator */\n\nvar extendStatics = function(d, b) {\n  extendStatics = Object.setPrototypeOf ||\n      ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n      function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n  return extendStatics(d, b);\n};\n\nexport function __extends(d, b) {\n  if (typeof b !== \"function\" && b !== null)\n      throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n  extendStatics(d, b);\n  function __() { this.constructor = d; }\n  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n}\n\nexport var __assign = function() {\n  __assign = Object.assign || function __assign(t) {\n      for (var s, i = 1, n = arguments.length; i < n; i++) {\n          s = arguments[i];\n          for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n      return t;\n  }\n  return __assign.apply(this, arguments);\n}\n\nexport function __rest(s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n      t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n      for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n          if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n              t[p[i]] = s[p[i]];\n      }\n  return t;\n}\n\nexport function __decorate(decorators, target, key, desc) {\n  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n}\n\nexport function __param(paramIndex, decorator) {\n  return function (target, key) { decorator(target, key, paramIndex); }\n}\n\nexport function __esDecorate(ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {\n  function accept(f) { if (f !== void 0 && typeof f !== \"function\") throw new TypeError(\"Function expected\"); return f; }\n  var kind = contextIn.kind, key = kind === \"getter\" ? \"get\" : kind === \"setter\" ? \"set\" : \"value\";\n  var target = !descriptorIn && ctor ? contextIn[\"static\"] ? ctor : ctor.prototype : null;\n  var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});\n  var _, done = false;\n  for (var i = decorators.length - 1; i >= 0; i--) {\n      var context = {};\n      for (var p in contextIn) context[p] = p === \"access\" ? {} : contextIn[p];\n      for (var p in contextIn.access) context.access[p] = contextIn.access[p];\n      context.addInitializer = function (f) { if (done) throw new TypeError(\"Cannot add initializers after decoration has completed\"); extraInitializers.push(accept(f || null)); };\n      var result = (0, decorators[i])(kind === \"accessor\" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);\n      if (kind === \"accessor\") {\n          if (result === void 0) continue;\n          if (result === null || typeof result !== \"object\") throw new TypeError(\"Object expected\");\n          if (_ = accept(result.get)) descriptor.get = _;\n          if (_ = accept(result.set)) descriptor.set = _;\n          if (_ = accept(result.init)) initializers.unshift(_);\n      }\n      else if (_ = accept(result)) {\n          if (kind === \"field\") initializers.unshift(_);\n          else descriptor[key] = _;\n      }\n  }\n  if (target) Object.defineProperty(target, contextIn.name, descriptor);\n  done = true;\n};\n\nexport function __runInitializers(thisArg, initializers, value) {\n  var useValue = arguments.length > 2;\n  for (var i = 0; i < initializers.length; i++) {\n      value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);\n  }\n  return useValue ? value : void 0;\n};\n\nexport function __propKey(x) {\n  return typeof x === \"symbol\" ? x : \"\".concat(x);\n};\n\nexport function __setFunctionName(f, name, prefix) {\n  if (typeof name === \"symbol\") name = name.description ? \"[\".concat(name.description, \"]\") : \"\";\n  return Object.defineProperty(f, \"name\", { configurable: true, value: prefix ? \"\".concat(prefix, \" \", name) : name });\n};\n\nexport function __metadata(metadataKey, metadataValue) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\n}\n\nexport function __awaiter(thisArg, _arguments, P, generator) {\n  function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n  return new (P || (P = Promise))(function (resolve, reject) {\n      function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n      function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n      function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n      step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n}\n\nexport function __generator(thisArg, body) {\n  var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g = Object.create((typeof Iterator === \"function\" ? Iterator : Object).prototype);\n  return g.next = verb(0), g[\"throw\"] = verb(1), g[\"return\"] = verb(2), typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n  function verb(n) { return function (v) { return step([n, v]); }; }\n  function step(op) {\n      if (f) throw new TypeError(\"Generator is already executing.\");\n      while (g && (g = 0, op[0] && (_ = 0)), _) try {\n          if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n          if (y = 0, t) op = [op[0] & 2, t.value];\n          switch (op[0]) {\n              case 0: case 1: t = op; break;\n              case 4: _.label++; return { value: op[1], done: false };\n              case 5: _.label++; y = op[1]; op = [0]; continue;\n              case 7: op = _.ops.pop(); _.trys.pop(); continue;\n              default:\n                  if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                  if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                  if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                  if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                  if (t[2]) _.ops.pop();\n                  _.trys.pop(); continue;\n          }\n          op = body.call(thisArg, _);\n      } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n      if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n  }\n}\n\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n  }\n  Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nexport function __exportStar(m, o) {\n  for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\n}\n\nexport function __values(o) {\n  var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n  if (m) return m.call(o);\n  if (o && typeof o.length === \"number\") return {\n      next: function () {\n          if (o && i >= o.length) o = void 0;\n          return { value: o && o[i++], done: !o };\n      }\n  };\n  throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n}\n\nexport function __read(o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o), r, ar = [], e;\n  try {\n      while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  }\n  catch (error) { e = { error: error }; }\n  finally {\n      try {\n          if (r && !r.done && (m = i[\"return\"])) m.call(i);\n      }\n      finally { if (e) throw e.error; }\n  }\n  return ar;\n}\n\n/** @deprecated */\nexport function __spread() {\n  for (var ar = [], i = 0; i < arguments.length; i++)\n      ar = ar.concat(__read(arguments[i]));\n  return ar;\n}\n\n/** @deprecated */\nexport function __spreadArrays() {\n  for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n  for (var r = Array(s), k = 0, i = 0; i < il; i++)\n      for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n          r[k] = a[j];\n  return r;\n}\n\nexport function __spreadArray(to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n      if (ar || !(i in from)) {\n          if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n          ar[i] = from[i];\n      }\n  }\n  return to.concat(ar || Array.prototype.slice.call(from));\n}\n\nexport function __await(v) {\n  return this instanceof __await ? (this.v = v, this) : new __await(v);\n}\n\nexport function __asyncGenerator(thisArg, _arguments, generator) {\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n  var g = generator.apply(thisArg, _arguments || []), i, q = [];\n  return i = Object.create((typeof AsyncIterator === \"function\" ? AsyncIterator : Object).prototype), verb(\"next\"), verb(\"throw\"), verb(\"return\", awaitReturn), i[Symbol.asyncIterator] = function () { return this; }, i;\n  function awaitReturn(f) { return function (v) { return Promise.resolve(v).then(f, reject); }; }\n  function verb(n, f) { if (g[n]) { i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; if (f) i[n] = f(i[n]); } }\n  function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\n  function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\n  function fulfill(value) { resume(\"next\", value); }\n  function reject(value) { resume(\"throw\", value); }\n  function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\n}\n\nexport function __asyncDelegator(o) {\n  var i, p;\n  return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\n  function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: false } : f ? f(v) : v; } : f; }\n}\n\nexport function __asyncValues(o) {\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n  var m = o[Symbol.asyncIterator], i;\n  return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\n  function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\n  function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\n}\n\nexport function __makeTemplateObject(cooked, raw) {\n  if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\n  return cooked;\n};\n\nvar __setModuleDefault = Object.create ? (function(o, v) {\n  Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n  o[\"default\"] = v;\n};\n\nvar ownKeys = function(o) {\n  ownKeys = Object.getOwnPropertyNames || function (o) {\n    var ar = [];\n    for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;\n    return ar;\n  };\n  return ownKeys(o);\n};\n\nexport function __importStar(mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== \"default\") __createBinding(result, mod, k[i]);\n  __setModuleDefault(result, mod);\n  return result;\n}\n\nexport function __importDefault(mod) {\n  return (mod && mod.__esModule) ? mod : { default: mod };\n}\n\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n  return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n}\n\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\n  if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n  return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n}\n\nexport function __classPrivateFieldIn(state, receiver) {\n  if (receiver === null || (typeof receiver !== \"object\" && typeof receiver !== \"function\")) throw new TypeError(\"Cannot use 'in' operator on non-object\");\n  return typeof state === \"function\" ? receiver === state : state.has(receiver);\n}\n\nexport function __addDisposableResource(env, value, async) {\n  if (value !== null && value !== void 0) {\n    if (typeof value !== \"object\" && typeof value !== \"function\") throw new TypeError(\"Object expected.\");\n    var dispose, inner;\n    if (async) {\n      if (!Symbol.asyncDispose) throw new TypeError(\"Symbol.asyncDispose is not defined.\");\n      dispose = value[Symbol.asyncDispose];\n    }\n    if (dispose === void 0) {\n      if (!Symbol.dispose) throw new TypeError(\"Symbol.dispose is not defined.\");\n      dispose = value[Symbol.dispose];\n      if (async) inner = dispose;\n    }\n    if (typeof dispose !== \"function\") throw new TypeError(\"Object not disposable.\");\n    if (inner) dispose = function() { try { inner.call(this); } catch (e) { return Promise.reject(e); } };\n    env.stack.push({ value: value, dispose: dispose, async: async });\n  }\n  else if (async) {\n    env.stack.push({ async: true });\n  }\n  return value;\n}\n\nvar _SuppressedError = typeof SuppressedError === \"function\" ? SuppressedError : function (error, suppressed, message) {\n  var e = new Error(message);\n  return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\n};\n\nexport function __disposeResources(env) {\n  function fail(e) {\n    env.error = env.hasError ? new _SuppressedError(e, env.error, \"An error was suppressed during disposal.\") : e;\n    env.hasError = true;\n  }\n  var r, s = 0;\n  function next() {\n    while (r = env.stack.pop()) {\n      try {\n        if (!r.async && s === 1) return s = 0, env.stack.push(r), Promise.resolve().then(next);\n        if (r.dispose) {\n          var result = r.dispose.call(r.value);\n          if (r.async) return s |= 2, Promise.resolve(result).then(next, function(e) { fail(e); return next(); });\n        }\n        else s |= 1;\n      }\n      catch (e) {\n        fail(e);\n      }\n    }\n    if (s === 1) return env.hasError ? Promise.reject(env.error) : Promise.resolve();\n    if (env.hasError) throw env.error;\n  }\n  return next();\n}\n\nexport function __rewriteRelativeImportExtension(path, preserveJsx) {\n  if (typeof path === \"string\" && /^\\.\\.?\\//.test(path)) {\n      return path.replace(/\\.(tsx)$|((?:\\.d)?)((?:\\.[^./]+?)?)\\.([cm]?)ts$/i, function (m, tsx, d, ext, cm) {\n          return tsx ? preserveJsx ? \".jsx\" : \".js\" : d && (!ext || !cm) ? m : (d + ext + \".\" + cm.toLowerCase() + \"js\");\n      });\n  }\n  return path;\n}\n\nexport default {\n  __extends,\n  __assign,\n  __rest,\n  __decorate,\n  __param,\n  __esDecorate,\n  __runInitializers,\n  __propKey,\n  __setFunctionName,\n  __metadata,\n  __awaiter,\n  __generator,\n  __createBinding,\n  __exportStar,\n  __values,\n  __read,\n  __spread,\n  __spreadArrays,\n  __spreadArray,\n  __await,\n  __asyncGenerator,\n  __asyncDelegator,\n  __asyncValues,\n  __makeTemplateObject,\n  __importStar,\n  __importDefault,\n  __classPrivateFieldGet,\n  __classPrivateFieldSet,\n  __classPrivateFieldIn,\n  __addDisposableResource,\n  __disposeResources,\n  __rewriteRelativeImportExtension,\n};\n","\"use strict\";\n/// <reference path=\"./jsx/element-types.d.ts\" />\n/// <reference path=\"./jsx/events.d.ts\" />\n/// <reference path=\"./jsx/intrinsic-elements.d.ts\" />\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createElement = void 0;\nconst capitalACharCode = 'A'.charCodeAt(0);\nconst capitalZCharCode = 'Z'.charCodeAt(0);\nconst isUpper = (input, index) => {\n    const charCode = input.charCodeAt(index);\n    return capitalACharCode <= charCode && capitalZCharCode >= charCode;\n};\nconst toKebabCase = (camelCased) => {\n    let kebabCased = '';\n    for (let i = 0; i < camelCased.length; i++) {\n        const prevUpperCased = i > 0 ? isUpper(camelCased, i - 1) : true;\n        const currentUpperCased = isUpper(camelCased, i);\n        const nextUpperCased = i < camelCased.length - 1 ? isUpper(camelCased, i + 1) : true;\n        if (!prevUpperCased && currentUpperCased || currentUpperCased && !nextUpperCased) {\n            kebabCased += '-';\n            kebabCased += camelCased[i].toLowerCase();\n        }\n        else {\n            kebabCased += camelCased[i];\n        }\n    }\n    return kebabCased;\n};\nconst escapeAttrNodeValue = (value) => {\n    return value.replace(/(&)|(\")|(\\u00A0)/g, function (_, amp, quote) {\n        if (amp)\n            return '&amp;';\n        if (quote)\n            return '&quot;';\n        return '&nbsp;';\n    });\n};\nconst attributeToString = (attributes) => (name) => {\n    const value = attributes[name];\n    const formattedName = toKebabCase(name);\n    const makeAttribute = (value) => `${formattedName}=\"${value}\"`;\n    if (value instanceof Date) {\n        return makeAttribute(value.toISOString());\n    }\n    else\n        switch (typeof value) {\n            case 'boolean':\n                // https://www.w3.org/TR/2008/WD-html5-20080610/semantics.html#boolean\n                if (value) {\n                    return formattedName;\n                }\n                else {\n                    return '';\n                }\n            default:\n                return makeAttribute(escapeAttrNodeValue(value.toString()));\n        }\n};\nconst attributesToString = (attributes) => {\n    if (attributes) {\n        return ' ' + Object.keys(attributes)\n            .filter(attribute => attribute !== 'children') // filter out children attributes\n            .map(attributeToString(attributes))\n            .filter(attribute => attribute.length) // filter out negative boolean attributes\n            .join(' ');\n    }\n    else {\n        return '';\n    }\n};\nconst contentsToString = (contents) => {\n    if (contents) {\n        return contents\n            .map(elements => Array.isArray(elements) ? elements.join('\\n') : elements)\n            .join('\\n');\n    }\n    else {\n        return '';\n    }\n};\nconst isVoidElement = (tagName) => {\n    return [\n        'area',\n        'base',\n        'br',\n        'col',\n        'command',\n        'embed',\n        'hr',\n        'img',\n        'input',\n        'keygen',\n        'link',\n        'meta',\n        'param',\n        'source',\n        'track',\n        'wbr'\n    ].indexOf(tagName) > -1;\n};\nfunction createElement(name, attributes = {}, ...contents) {\n    const children = attributes && attributes.children || contents;\n    if (typeof name === 'function') {\n        return name(children ? { children, ...attributes } : attributes, contents);\n    }\n    else {\n        const tagName = toKebabCase(name);\n        if (isVoidElement(tagName) && !contents.length) {\n            return `<${tagName}${attributesToString(attributes)}>`;\n        }\n        else {\n            return `<${tagName}${attributesToString(attributes)}>${contentsToString(contents)}</${tagName}>`;\n        }\n    }\n}\nexports.createElement = createElement;\n//# sourceMappingURL=elements.js.map"],"names":[],"sourceRoot":""}